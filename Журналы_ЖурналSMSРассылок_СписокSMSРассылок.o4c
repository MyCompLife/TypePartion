interface

uses
  System, DispIntf, ConstNames, Интерфейс, InitColors, Расчеты;

implementation

var
  MasterData : ICJournal;
  Constants : IC4VPAConst;
  Options : ICOptions;
  SMSProcessing : ICProcessing;
  Doc : ICDocuments;


procedure MDS_VPABeforeOpen(Sender : TObject);
begin
  MasterData := MDS.GetMean;
  Constants := GetConstants;
  SetColors(Constants);
  Options := GetOptions;   
  SMSProcessing := CreateObject('Обработки.РаботаСSMS');
  Doc :=  CreateObject('Документы.SMSРассылка');
end;

procedure ReceiveEvent(Sender : ICDocuments; SessionID : Integer; CenterName, FromUserID, FromUserName : string;
  Param : Variant);
begin
  // if MasterData.BrowseMode then bFresh_Click(tbRefresh);
  if GetSessionID <> SessionID then
    MasterData.Refresh;
end;

procedure miPrintActive_Click(Sender : TObject);
begin
  // MasterData.PrintForm('', false, 0, Null)
end;



procedure pmiSelect_Click(Sender : TObject);
begin
  MasterData.DefineSelectParams(False);
  //tsState.TabIndex := MasterData.GetDocStateRange + 1;
end;



procedure pmiRefresh_Click(Sender : TObject);
begin
  MasterData.Refresh;
end;

procedure MDS_VPATimedAfterScroll(Sender : TObject);
begin
 if not MasterData.IsFocused then
    exit;
 if not VarAsBool(MasterData.IsFocused) then
    exit;
 if VarAsInt(MasterData.СтатусДокумента,0) = 0 then
  begin
   tbSend.Enabled := true;
   tbCheck.Enabled := false;
  end
 else
 if VarAsInt(MasterData.СтатусДокумента,0) = 1 then
  begin
   tbSend.Enabled := false;
   tbCheck.Enabled := true;
  end
 else
 if VarAsInt(MasterData.СтатусДокумента,0) > 1 then
  begin
   tbSend.Enabled := false;
   tbCheck.Enabled := false;
  end;

end;



procedure MDS_VPADataRefreshed(Sender : TObject);
begin
//  tsState.TabIndex := MasterData.GetDocStateRange + 1;
end;

{$D-}
procedure dbgData_GetImageIndex(Sender: TObject; var Index1, Index2: integer);
begin
  if not MasterData.IsFocused then
    exit;
  if VarAsInt(MasterData.СтатусДокумента,0) = 0 then
    Index1 := 9
  else           
  if VarAsInt(MasterData.СтатусДокумента,0) = 1 then
    Index1 := 0
  else
  if VarAsInt(MasterData.СтатусДокумента,0) > 1 then
    Index1 := 6;
end;
{$D+}

procedure tbSend_Click(Sender: TObject);
begin
 SMSProcessing.Execute('ОбработкаSMSДокументов',ArrayOf(MasterData,'SendSMS'));
 MasterData.Refresh;
end;

procedure tbCheck_Click(Sender: TObject);    
begin
 SMSProcessing.Execute('ОбработкаSMSДокументов',ArrayOf(MasterData,'CheckSMS'));  
 MasterData.Refresh;
end;

procedure MDS_VPAAfterPost(Sender: TObject);
begin
 MasterData.Refresh;
end;

procedure tsState_Change(Sender: TObject; NewTab: Integer; var AllowChange: Boolean);
begin
 case NewTab of
  0: MasterData.CancelFieldFilter('СтатусДокумента');
  1: MasterData.SetFieldFilter('СтатусДокумента','=',0,'','',Null);
  2: MasterData.SetFieldFilter('СтатусДокумента','=',1,'','',Null);
  3: MasterData.SetFieldFilter('СтатусДокумента','=',2,'','',Null);
 end;
 MasterData.Refresh;
end;

procedure tbEdit_Click(Sender: TObject);
begin
 if Doc.Find(MasterData.GetDoc) then
   Doc.EditInForm('SMSРассылка',1);
 MasterData.Refresh;
end;

procedure tbAdd_Click(Sender: TObject);
begin
   Doc .EditInForm('SMSРассылка',0);
 MasterData.Refresh;
end;

procedure Form_Open(Sender: TObject);
begin
  MakeInterface(tbrData, tbrData, dbgData); 
  miInfoChange.Visible := GetUDASet('viewdochistory');
end;


procedure tbBalance_Click(Sender: TObject);
var P : ICProcessing;
begin
 P := CreateObject('Обработки.РаботаСSMS');
 P.Execute('БалансИЦеныSMSAcount',Null);
end;

procedure miCopyDoc_Click(Sender : TObject);
var
  OldDoc, NewDoc : ICDocuments;
begin
  if (not MasterData.IsFocused) then
    exit;
  OldDoc := MasterData.GetDoc();
  NewDoc := CreateObject('Документы.' + OldDoc.GetSign);
  NewDoc.Params['OldDoc'] := OldDoc;
  NewDoc.EditInForm('SMSРассылка', 0);
  MasterData.Refresh;
  MasterData.FindDoc(NewDoc);
end;        

procedure miInfoChange_Click(Sender: TObject);
var
  V: ICProcessing;
begin
  V := CreateObject('Обработки.ИнфоИзменений');
  V.Execute('ИнфоИзменений', MasterData.GetDoc);
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Splitter1:TO4Splitter
Panel1:TO4Panel
dbgData:TO4DBGrid
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
tbSend:TO4ToolButton
tbCheck:TO4ToolButton
tbDelete:TO4ToolButton
tbDelimiter1:TO4ToolButton
tbSelect:TO4ToolButton
tbRefresh:TO4ToolButton
tbParam:TO4ToolButton
tbBalance:TO4ToolButton
tsState:TO4TabSet
MDS:TO4DataSource
pmData:TO4PopupMenu
pmiAdd:TO4MenuItem
miCopyDoc:TO4MenuItem
pmiEdit:TO4MenuItem
pmiDelete:TO4MenuItem
MenuItem1:TO4MenuItem
pmiPrintOne:TO4MenuItem
MenuItem2:TO4MenuItem
pmiSort:TO4MenuItem
pmiSelect:TO4MenuItem
MenuItem3:TO4MenuItem
pmiRefresh:TO4MenuItem
miInfoChange:TO4MenuItem
