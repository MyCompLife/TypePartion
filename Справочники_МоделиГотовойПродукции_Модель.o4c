interface

uses
  System, DispIntf, ConstNames, Расчеты, РаботаСПеременными, РаботаСОбъектами,
  РаботаСКомпонентамиVCL, РаботаСТаблицамиЗначений, РаботаСТаблицамиЗначенийCL, РаботаССайтом,
  РаботаСоСправочниками, РаботаСКоллекциями, РаботаСоСправочникамиCL;

implementation

var
  MasterData, SizesDic, ColorDic : ICDictionary;
  CollectTbl, SizesTbl, ColorTbl, ColorTbl1: ICValueTable;
  Article: Integer;
  Dialog: ICProcessing;
  Collection : ICCollection;
  Options: ICOptions;
  FieldList, FieldLinkList: String;
  Values, ValuesLink : Variant;
  Group, Cat, OldCat, BarCodeDic: ICDictionary;
  Cursor: TCursor;
  Constants: IC4VPAConst;
  Append, UseSizeDet, UseColorDet : Boolean;

procedure MDS_VPABeforeOpen(Sender : TObject);
begin
  MasterData := MDS.GetMean;
  Constants := GetConstants;
  Options := GetOptions;
  SizesDic := CreateObject('Справочники.ТаблицаРазмеров');
  ColorDic := CreateObject('Справочники.Цвета'); 
  BarCodeDic := CreateObject('Справочники.ШтрихКодыТоваров');
  UseSizeDet := VarAsBool(Constants.ДетализацияМоделейПоРазмерам);
  UseColorDet := VarAsBool(Constants.ДетализацияМоделейПоЦветам);
end;

function GetCode(Article : Integer): String;
var
  i : integer;
  BarCode: String;
begin
  BarCode := IntToStr(Article);
  i := Constants.ШтрихКодТовараВнутреннийКолСимв;
  while StrLength(BarCode) < i do
    begin
      BarCode := '0' + BarCode;
    end;
  Result := BarCode;
end;

procedure Form_Open(Sender : TObject);
var
  PriceTypes: String;
  i: Integer; 
  ctrlTemp : TComponent;
begin
  GetLocalization(MasterData, Form);
  if VarAsBool(MasterData.ЕдИзм.IsFocused) then
    edCollect.Text := MasterData.ЕдИзм.Value;
  Collection := CreateObject('Коллекции.ЕдИзм');
  CollectTbl := CreateObject('ТаблицаЗначений');
  CreateCollectionTbl(CollectTbl, Collection); //расчеты
  while CollectTbl.SelectNext() do
    edCollect.Items.Add(CollectTbl.Comment);
  lbTitle.Caption := SetTitleCaption(ArrayOf(MasterData.ПолноеНазвание), '');
  SizesTbl := CreateTblFromBLOB(MasterData.РазмерныйРяд);
  if IsNil(SizesTbl) then
    begin
      SizesTbl := CreateObject('ValueTable');
      SizesTbl.AddColumn('НомПозиции',vtcInteger,0);
      SizesTbl.AddColumn('Название',vtcString,200);
      SizesTbl.Open;
      SizesTbl.SortBy('НомПозиции');
    end;
  SizesTbl.UseDataSource(CtrlToVar(TVS));

  ColorTbl1 := CreateTblFromBLOB(MasterData.ЦветовойРяд);
  if IsNil(ColorTbl1) then
    begin
      ColorTbl1 := CreateObject('ValueTable');
      ColorTbl1.AddColumn('Артикул',vtcInteger,0);
      ColorTbl1.AddColumn('Код',vtcString,2);
      ColorTbl1.AddColumn('Название',vtcString,200);
      ColorTbl1.AddColumn('ПолноеНазвание',vtcString,200);
      ColorTbl1.Open;
    end;
  if IsNil(ColorTbl) then
    begin
      ColorTbl := CreateObject('ValueTable');
      ColorTbl.AddColumn('Артикул',vtcInteger,0);
      ColorTbl.AddColumn('Код',vtcString,2);
      ColorTbl.AddColumn('Название',vtcString,200);
      ColorTbl.AddColumn('ПолноеНазвание',vtcString,200);
      ColorTbl.Open;
    end;
  ColorTbl.SortBy('Артикул');
  ColorTbl1.AppendTo('Артикул;Код;Название;ПолноеНазвание',ColorTbl);
  ColorTbl.UseDataSource(CtrlToVar(TVSColors));
  cbShowOnSite.Checked := MasterData.ОтображатьНаСайте;
  Group := CreateObject('Справочники.ГруппыТоваров');
  Group.Find(MasterData.Группа);
  OldCat := CreateObject('Справочники.Товары');
  OldCat.IncludeOnlyLevels(true);
  if OldCat.Find(MasterData.@Категория) then
    eCtg.Text := OldCat.NameField;
  Cat := CreateObject('Справочники.Товары');
  Cat.IncludeOnlyLevels(true);
  Cat.Find(MasterData.@Категория);

  Values := ArrayOf(MasterData.Код,MasterData.Название,MasterData.ОтображатьНаСайте,
                    MasterData.ВхЦена,MasterData.Цена,MasterData.ОптЦена,MasterData.КрОптЦена,
                    MasterData.КодПроизводителя,MasterData.КолВУпаковке, 
                    MasterData.ПрНацЦена, MasterData.ПрНацОптЦена, MasterData.ПрНацКрОптЦена);
  ValuesLink := ArrayOf(MasterData.ЕдИзм,MasterData.Группа,MasterData.ВалютаВхЦена,MasterData.ВалютаЦена,
                        MasterData.ВалютаОптЦена,MasterData.ВалютаКрОптЦена,MasterData.Категория,MasterData.ГруппаРазмеров);
  FieldList := 'Код;Название;ОтображатьНаСайте;ВхЦена;Цена;ОптЦена;КрОптЦена;КодПроизводителя;КолВУпаковке;ПрНацЦена;ПрНацОптЦена;ПрНацКрОптЦена';
  FieldLinkList := 'Группа;Производитель;ВалютаВхЦена;ВалютаЦена;ВалютаОптЦена;ВалютаКрОптЦена;Категория;ГруппаРазмеров';
  cbActive.Checked := MasterData.Активность;
  cbShowOnSite.Enabled := VarAsBool(MasterData.Активность);
  PriceTypes := Constants.ТипыЦен;
  if StrLength(PriceTypes) > 0 then
    for i := 1 to StrLength(PriceTypes) do
      begin
        ctrlTemp := Form.FindComponent('pnPrice' + PriceTypes[i]);
        if not IsNil(ctrlTemp) then
         (ctrlTemp as TO4Panel).Visible := true;
      end;
end;

procedure eName_Change(Sender : TObject);
begin
  lbTitle.Caption := SetTitleCaption(ArrayOf(eName.Text), '');
end;

procedure ChangeGood(MasterData,GoodsDic:ICDictionary; SizesStr:string);
var Comment, ColorName: String;
begin
 Comment := 'Корректировка карточки модели';
 ChangePrice(GoodsDic, MasterData.ВалютаВхЦена, MasterData.ВхЦена, 'ВхЦена', Comment, 'EditInDoc');
 ChangePrice(GoodsDic, MasterData.ВалютаЦена, MasterData.Цена, 'Цена', Comment, 'EditInDoc');
 ChangePrice(GoodsDic, MasterData.ВалютаОптЦена, MasterData.ОптЦена, 'ОптЦена', Comment, 'EditInDoc');
 ChangePrice(GoodsDic, MasterData.ВалютаКрОптЦена, MasterData.КрОптЦена, 'КрОптЦена', Comment, 'EditInDoc');
 GoodsDic.Edit;
 GoodsDic.AssignFields('ЕдИзм;Группа;Производитель;КолВУпаковке;КодПроизводителя;ПрНацЦена;ПрНацОптЦена;ПрНацКрОптЦена;Категория', MasterData);
 ColorName := '';
 if UseColorDet and ColorTbl.IsFocused then
   begin
     if VarAsStr(ColorTbl.Название) <> '' then
       ColorName := ' ' + VarAsStr(ColorTbl.Название);
     GoodsDic.КодЦвета := VarAsStr(ColorTbl.Код);
     GoodsDic.Цвет := VarAsStr(ColorTbl.Название);
   end;
 if UseSizeDet and SizesTbl.IsFocused then
   begin
     SizesStr := ' р.'+ VarAsStr(SizesTbl.Название);
     GoodsDic.Размер := VarAsStr(SizesTbl.Название);
   end;

 GoodsDic.НазвТовара := MasterData.Название + ' ' + StrCopy(StrLowerCase(MasterData.Группа.Название), 1, 4) + '.' + SizesStr +
                          ' (' + MasterData.Производитель.Название + ' ' + MasterData.КодПроизводителя  + ColorName + ')';
 if VarAsBool(Cat.IsFocused) then
   GoodsDic.SetParent(Cat);
 GoodsDic.Post;
 GoodsDic.ApplyUpdates;
end;   

procedure AppendGood(MasterData,GoodsDic:ICDictionary; SizesStr:string);
var Comment, ColorName, BarCodeStr: String;
begin
 Comment := 'Добавление карточки товаров';
 GoodsDic.Append;
 GoodsDic.Артикул := GetNextNumberForField('Справочники.Товары', 'Артикул', false, '');
 GoodsDic.Код := GetCode(GoodsDic.Артикул);
 GoodsDic.AssignFields('ЕдИзм;ВалютаВхЦена;ВалютаЦена;ВалютаОптЦена;ВалютаКрОптЦена;ВхЦена;Цена;ОптЦена;КрОптЦена;Группа;Производитель;КолВУпаковке;КодПроизводителя;ПрНацЦена;ПрНацОптЦена;ПрНацКрОптЦена;Категория',MasterData);
 GoodsDic.Модель := MasterData;

 ColorName := '';
 if UseColorDet and ColorTbl.IsFocused then
   begin
     if VarAsStr(ColorTbl.Название) <> '' then
       ColorName := ' ' + VarAsStr(ColorTbl.Название);
     GoodsDic.КодЦвета := VarAsStr(ColorTbl.Код);
     GoodsDic.Цвет := VarAsStr(ColorTbl.Название);
   end;
 if UseSizeDet and SizesTbl.IsFocused then
   begin
     SizesStr := ' р.'+ VarAsStr(SizesTbl.Название);
     GoodsDic.Размер := VarAsStr(SizesTbl.Название);
   end;
 GoodsDic.НазвТовара := MasterData.Название + ' ' + StrCopy(StrLowerCase(MasterData.Группа.Название), 1, 4) + '.' + SizesStr +
                          ' (' + MasterData.Производитель.Название + ' ' + MasterData.КодПроизводителя  + ColorName + ')';
 if VarAsBool(Cat.IsFocused) then
   GoodsDic.SetParent(Cat);
 GoodsDic.Post;
 GoodsDic.ApplyUpdates;
 //****************************************
 //        ШТРИХ-КОДЫ
 BarCodeStr := GetCode(GoodsDic.Артикул);
 BarCodeDic.UseMaster(Null);
 if BarCodeDic.FindByCode(BarCodeStr,false) then
   begin
     BarCodeDic.Edit;
     BarCodeDic.SetMaster(GoodsDic);
     BarCodeDic.Post;
     BarCodeDic.ApplyUpdates;
   end
 else
   begin
     BarCodeDic.UseMaster(GoodsDic);
     BarCodeDic.Append;
     BarCodeDic.Код := BarCodeStr;
     BarCodeDic.Количество := 1;
     BarCodeDic.Активность := true;
     BarCodeDic.Идентификатор := '0';
     BarCodeDic.Post;
     BarCodeDic.ApplyUpdates;
   end;
 //****************************************
 ChangePrice(GoodsDic, MasterData.ВалютаВхЦена, MasterData.ВхЦена, 'ВхЦена', Comment, 'EditInGoodDic');
 ChangePrice(GoodsDic, MasterData.ВалютаЦена, MasterData.Цена, 'Цена', Comment, 'EditInGoodDic');
 ChangePrice(GoodsDic, MasterData.ВалютаОптЦена, MasterData.ОптЦена, 'ОптЦена', Comment, 'EditInGoodDic');
 ChangePrice(GoodsDic, MasterData.ВалютаКрОптЦена, MasterData.КрОптЦена, 'КрОптЦена', Comment, 'EditInGoodDic');
end;

procedure MDS_Validate(Sender: TObject);
var
  Collect, SizesStr: String;
  Comment: String;
  AddCnt, EdCnt, i: Integer;
  GoodsDic: ICDictionary;
  Change: Boolean;
  ColorName, PackCnt: String;
begin
  if not VarAsBool(MasterData.@Категория.IsFocused) then
    raise('Укажите категорию');
  if SizesTbl.LineCount <> VarAsInt(MasterData.КолВУпаковке) then
    Raise('К-во размеров должно совпадать с к-вом в упаковке');
  if UseSizeDet and (SizesTbl.LineCount=0) then
    raise('Таблица размеров не заполнена!');
  if UseColorDet and (ColorTbl.LineCount=0) then
    raise('Таблица цветов не заполнена!');
  Collect := edCollect.Text;
  ChangeCollection(Collection, MasterData, Collect); //расчеты
  MasterData.ЦветовойРяд := WritePropsToBlob(ColorTbl);
  MasterData.РазмерныйРяд := WritePropsToBlob(SizesTbl);  
  MasterData.ПолноеНазвание := MasterData.Производитель.Название + ' ' + MasterData.КодПроизводителя;
  MasterData.Params['add'] := true;
  SetLocalization(MasterData, Form);
  if VarAsBool(Constants.ИзменениеТоваровТолькоЧерезМодели) and (UseSizeDet or UseColorDet) and
     (MessageDlg('Обновить товары?',mtConfirmation,ArrayOf(mbYes,mbNo))=mrYes) then  // Если используеться детализация либо по цветам либо по размерам
  try
    Cursor := WaitCursorStart;
    Cat.Find(MasterData.@Категория);
    GoodsDic := CreateObject('Справочники.Товары');
    GoodsDic.SetFieldFilter('Модель','=',MasterData,'','',Null);
    Change := Append;
    if not Change then
      for i := 1 to WordCount(FieldList,';') do
        if (MasterData._Default[ExtractWord(i,FieldList,';')] <> Values[i-1]) then
          begin
            Change := true;
            break;
          end;
    if not Change then
      for i := 1 to WordCount(FieldLinkList,';') do
        if IsObjEQ(MasterData._Default[ExtractWord(i,FieldLinkList,';')], ValuesLink[i-1], false) then
          begin
            Change := true;
            break;
          end;  
    SizesStr := '';
    if SizesTbl.SelectFirst then
      SizesStr := ' р.' +SizesTbl.Название;
    if SizesTbl.SelectLast then
      SizesStr := SizesStr + '-'+ SizesTbl.Название;

    ColorTbl.DisableControls;
    SizesTbl.DisableControls;
    if UseSizeDet and UseColorDet then // Используеться детализация по цветам и по размерам
      begin
        ColorTbl.Select;
        while ColorTbl.SelectNext do
          begin
            GoodsDic.SetFieldFilter('КодЦвета','=',ColorTbl.Код,'','',null);
            SizesTbl.Select;
            While SizesTbl.SelectNext do
              begin
                GoodsDic.SetFieldFilter('Размер','=',SizesTbl.Название,'','',null);
                if GoodsDic.Select then
                  begin
                    if Change then
                      While GoodsDic.SelectNext do
                        begin
                          ChangeGood(MasterData,GoodsDic,SizesStr);
                          inc(EdCnt);
                        end
                  end
                else
                  begin
                    AppendGood(MasterData,GoodsDic,SizesStr);
                    inc(AddCnt);
                  end;
              end;
          end;
      end
    else
    if UseSizeDet then // Используеться детализация по размерам
      begin
        SizesTbl.Select;
        While SizesTbl.SelectNext do
          begin
            GoodsDic.SetFieldFilter('Размер','=',SizesTbl.Название,'','',null);
            if GoodsDic.Select then
              begin   
                if Change then
                  While GoodsDic.SelectNext do
                    begin
                      ChangeGood(MasterData,GoodsDic,SizesStr);
                      inc(EdCnt);
                    end;
              end
            else
              begin
                AppendGood(MasterData,GoodsDic,SizesStr);
                inc(AddCnt);
              end;
          end;

      end
    else
    if UseColorDet then // Используеться детализация по цветам
      begin
        ColorTbl.Select;
        while ColorTbl.SelectNext do
          begin
            GoodsDic.SetFieldFilter('КодЦвета','=',ColorTbl.Код,'','',null);
            if GoodsDic.Select then
              begin
               if Change then
                 While GoodsDic.SelectNext do
                   begin
                     ChangeGood(MasterData,GoodsDic,SizesStr);
                     inc(EdCnt);
                   end
              end
            else
              begin
                AppendGood(MasterData,GoodsDic,SizesStr);
                inc(AddCnt);
              end;
          end;
      end;

  finally
    ColorTbl.EnableControls;
    SizesTbl.EnableControls; 
    WaitCursorFinish(Cursor);
  end;
  Comment := '';
  if AddCnt > 0 then
    Comment := 'Добавлено: '+ VarAsStr(AddCnt) + ' ';
  if EdCnt > 0 then
    Comment := Comment + 'Изменено: '+ VarAsStr(EdCnt) + ' ';
  if (AddCnt > 0) or (EdCnt > 0) then
    ShowMessage(Comment +  'записей в справочнике готовой продукции');

end;

procedure tbRefresh_Click(Sender: TObject);
begin
  if VarAsBool(MasterData.@ГруппаРазмеров.IsFocused) then
    begin
      SizesTbl.Clear;
      SizesDic.SetFieldFilter('НомГруппы','=',MasterData.ГруппаРазмеров.НомГруппы,'','',Null);
      SizesDic.Select;
      while SizesDic.SelectNext do
        if SizesDic.НомПозиции > 0 then
          begin
            SizesTbl.Append;
            SizesTbl.AssignFields('НомПозиции;Название',SizesDic);
            SizesTbl.Post;
          end;
      SizesDic.CancelFieldFilter('НомГруппы'); 
      MasterData.КолВУпаковке := SizesTbl.LineCount;
    end;
end;

procedure eSizeGroup_ActionClear(Sender: TObject);
begin
  SizesTbl.Clear;
end;

procedure miDel_Click(Sender: TObject);
begin
  if SizesTbl.IsFocused and (MessageDlg('Удалить запись?',mtConfirmation,ArrayOf(mbYes,mbNo)) = mrYes) then
    SizesTbl.Delete;
end;

procedure RefreshColorTbl;
begin
  ColorTbl.SortBy('ПолноеНазвание');
  ColorTbl.DoNumbering('Артикул',1,1);
  ColorTbl.SortBy('Артикул');
  ColorTbl.Select;
  while ColorTbl.SelectNext do
    begin
      ColorTbl.Edit;
      ColorTbl.Код := FormatFloat('00', ColorTbl.Артикул);
      ColorTbl.ПолноеНазвание := FormatFloat('00', ColorTbl.Артикул) + ' ' + VarAsStr(ColorTbl.Название);
      ColorTbl.Post;
    end;
end;    

procedure tbAdd_Click(Sender: TObject);
var DefName : string;
begin
  if ColorDic.SelectInForm('',DefName,Null) then
    try
      ColorTbl.DisableControls;
      if ColorTbl.Locate('Название',DefName) then
        ShowMessage('Такой цвет уже есть в списке!')
      else
        begin
          ColorTbl.Append;
          ColorTbl.Название := DefName;
          ColorTbl.ПолноеНазвание := 'zzzzzzz'; // Для сортировки
          ColorTbl.Post;
          RefreshColorTbl;
        end;
    finally
      ColorTbl.EnableControls;
    end;
end;

procedure EditColor_Click(Sender: TObject);
var DefName, OldColor: String;
    RecID : Double;
begin
  if ColorTbl.IsFocused then
    try
      ColorTbl.DisableControls;
      OldColor := VarAsStr(ColorTbl.Название);
      RecID := ColorTbl.RecID;
      if ColorDic.SelectInForm('',DefName,Null) and (DefName<>OldColor) then
        begin
         if ColorTbl.Locate('Название',DefName) then
           ShowMessage('Такой цвет уже есть в списке!')
         else
           begin  
             if ColorTbl.FindByRecID(RecID) then
               begin
                 ColorTbl.Edit;
                 ColorTbl.Название := DefName;
                 ColorTbl.Post;
                 RefreshColorTbl;
               end;
           end;
        end;
    finally    
      ColorTbl.FindByRecID(RecID);
      ColorTbl.EnableControls;
    end;
end;

procedure tbDelColor_Click(Sender: TObject);
var
  GoodsDic: ICDictionary;
begin
  if ColorTbl.IsFocused and (MessageDlg('Удалить запись?',mtConfirmation,ArrayOf(mbYes,mbNo)) = mrYes) then
    begin
      GoodsDic := CreateObject('Справочники.Товары');
      GoodsDic.SetFieldFilter('Модель','=',MasterData,'','',null);
      GoodsDic.SetFieldFilter('КодЦвета','=',ColorTbl.Код,'','',null);
      GoodsDic.Select;
      if GoodsDic.SelectNext then
        MessageDlg('Нельзя удалить цвет, так как есть товары, которые на него ссылаются!',mtWarning,ArrayOf(mbOk))
      else 
        begin             
          ColorTbl.UseDataSource(0);
          ColorTbl.Delete;
          RefreshColorTbl;
          ColorTbl.UseDataSource(CtrlToVar(TVSColors));
        end;
    end;
end;


procedure MDS_VPAAfterPost(Sender: TObject);
begin
  MasterData.ApplyUpdates;
end;

procedure ToolButton4_Click(Sender: TObject);
begin
  MasterData.Бирка := '';
  Image1.Visible := true;
  Image2.Visible := false;
  tbAddTabs.Visible := true;
  tbEditTabs.Visible := false;
  tbPrint.Enabled := false;
end;

procedure MDS_Append(Sender: TObject);
var
  CopyFrom, Currency: ICDictionary;
  v : Variant;
  i: Integer;
begin
  Append := true;
  Currency := CreateObject('Справочники.Валюты');
  v := MasterData.Params['CopyFrom'];
  if MasterData.HasParam('CopyFrom') and (not IsNull(v)) then
    begin
      CopyFrom := MasterData.Params['CopyFrom'];
      MasterData.AssignFields('Название;ПолноеНазвание;ЦветовойРяд;РазмерныйРяд;ВалютаВхЦена;ВалютаЦена;'+
                               'ВалютаОптЦена;ВалютаКрОптЦена;ВхЦена;Цена;ОптЦена;КрОптЦена;ПрНацЦена;ПрНацОптЦена;ПрНацКрОптЦена;ЕдИзм;'+
                              'ТаблицаЛокализаций;Информация;Группа;ОтображатьНаСайте;Активность;Производитель;'+
                              'КодПроизводителя;КолВУпаковке;Категория;ГруппаРазмеров;', CopyFrom);
      MasterData.Артикул := GetNextNumberForField('Справочники.МоделиГотовойПродукции', 'Артикул', false, '');
      MasterData.Код := GetCode(MasterData.Артикул);
    end
  else
    begin
      MasterData.ВалютаВхЦена := GetNatCurrency(Currency);  

      if IsObjFocused(Constants.ВалютаЦенаУмолч) then
        MasterData.ВалютаЦена := Constants.ВалютаЦенаУмолч
      else
        MasterData.ВалютаЦена := Currency;

      if IsObjFocused(Constants.ВалютаОптЦенаУмолч) then
        MasterData.ВалютаОптЦена := Constants.ВалютаОптЦенаУмолч
      else
        MasterData.ВалютаОптЦена := Currency;

      if IsObjFocused(Constants.ВалютаКрОптЦенаУмолч) then
        MasterData.ВалютаКрОптЦена := Constants.ВалютаКрОптЦенаУмолч
      else
        MasterData.ВалютаКрОптЦена := Currency;

      MasterData.Артикул := GetNextNumberForField('Справочники.МоделиГотовойПродукции', 'Артикул', false, '');
      MasterData.Код := GetCode(MasterData.Артикул);    
      MasterData.Активность := 1;  

      if VarAsBool(Constants.ИспОбщНаценки) then
        begin
          MasterData.ПрНацЦена := Constants.ПрНацЦена;
          MasterData.ПрНацОптЦена := Constants.ПрНацОптЦена;
          MasterData.ПрНацКрОптЦена := Constants.ПрНацКрОптЦена;
        end;

    end;
end;


procedure tcLocal_Change(Sender: TObject);
begin
  ChangeLocalization(Form);
end;

procedure cbShowOnSite_Click(Sender: TObject);
begin
  MasterData.ОтображатьНаСайте := cbShowOnSite.Checked;
end;

procedure cbActive_Click(Sender: TObject);
begin
  MasterData.Активность := Abs(VarAsInt(cbActive.Checked));
  if MasterData.Активность = 0 then
    begin
      MasterData.ОтображатьНаСайте := false;
      cbShowOnSite.Checked := false;
      cbShowOnSite.Enabled := false;
      ShowMessage('Модель не будет отображатся на сайте!');
    end
  else
    cbShowOnSite.Enabled := true;
end;


end.

_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Panel1:TO4Panel
Panel3:TO4Panel
lbTitle:TO4Label
Panel4:TO4Panel
LinkImage1:TO4LinkImage
PageControl1:TO4PageControl
tsMain:TTabSheet
Panel5:TO4Panel
Label2:TO4Label
Label1:TO4Label
Image1:TO4Image
Image2:TO4Image
Label4:TO4Label
Label6:TO4Label
Label7:TO4Label
Label3:TO4Label
lbPackCnt:TO4Label
Label11:TO4Label
Label5:TO4Label
Label14:TO4Label
eCode:TO4DBEdit
eName:TO4DBEdit
ToolBar1:TO4ToolBar
tbAddTabs:TO4ToolButton
tbEditTabs:TO4ToolButton
ToolButton4:TO4ToolButton
tbPrint:TO4ToolButton
deUnitName:TO4DBEdit
edCollect:TO4Edit
ToolBar3:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
tbDelColor:TO4ToolButton
dbgColors:TO4DBGrid
eGroup:TO4DBEdit
cbActive:TO4CheckBox
eManufacturer:TO4DBEdit
ePackCnt:TO4DBEdit
eCodeManufacturer:TO4DBEdit
dbgData:TO4DBGrid
ToolBar2:TO4ToolBar
tbRefresh:TO4ToolButton
tbDel:TO4ToolButton
eSizeGroup:TO4DBEdit
eCtg:TO4DBEdit
tsPrice:TTabSheet
Panel6:TO4Panel
lbCurPriceTitle:TO4Label
lbCurName:TO4Label
Label8:TO4Label
pnInPrice:TO4Panel
Label9:TO4Label
dbePriceIn:TO4DBEdit
dbeCurrencyIn:TO4DBEdit
pnPrice0:TO4Panel
lbPriceName1:TO4Label
dbePrice1:TO4DBEdit
dbeCurrency1:TO4DBEdit
dbePrecent1:TO4DBEdit
pnPrice1:TO4Panel
lbPriceName2:TO4Label
dbePrice2:TO4DBEdit
dbeCurrency2:TO4DBEdit
dbePrecent2:TO4DBEdit
pnPrice2:TO4Panel
lbPriceName3:TO4Label
dbePrice3:TO4DBEdit
dbeCurrency3:TO4DBEdit
dbePrecent3:TO4DBEdit
tsInfo:TTabSheet
dmNotes:TO4DBMemo
tsSite:TTabSheet
tcLocal:TO4TabControl
Label12:TO4Label
Label13:TO4Label
eDescrLang:TO4Memo
eTitleLang:TO4Edit
cbShowOnSite:TO4CheckBox
Panel2:TO4Panel
btOk:TO4Button
btCancel:TO4Button
MDS:TO4DataSource
pmSizes:TO4PopupMenu
miDel:TO4MenuItem
TVS:TO4TableValueSource
TVSColors:TO4TableValueSource
pmTag:TO4PopupMenu
MenuItem5:TO4MenuItem
MenuItem6:TO4MenuItem
MenuItem7:TO4MenuItem
pmColors:TO4PopupMenu
MenuItem1:TO4MenuItem
MenuItem3:TO4MenuItem
MenuItem2:TO4MenuItem
MenuItem8:TO4MenuItem
MenuItem9:TO4MenuItem
MenuItem10:TO4MenuItem
MenuItem11:TO4MenuItem
