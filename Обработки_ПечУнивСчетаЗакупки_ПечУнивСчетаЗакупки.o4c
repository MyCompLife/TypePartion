interface

uses
  System, DispIntf, ConstNames, Расчеты;

implementation

var
  MasterData : ICDocuments;
  TLF, ADR, RRR, MYF : ICDictionary;
  CNV : ICWriNums;
  Tbl : ICValueTable;

procedure Form_BeginPrint(PrintForm : TO4PrintForm);
begin
  MasterData := Form.GetParams;
  TLF := CreateObject('Справочники.Телефоны');
  ADR := CreateObject('Справочники.Адреса');
  RRR := CreateObject('Справочники.РасчСчета');
  MYF := CreateObject('Справочники.ВашеПредприятие');
  CNV := CreateObject('ЧислаПрописью');
  Tbl := CreateObject('ТаблицаЗначений');
  if MasterData.СуммаСкидкиНадбавки >= 0 then
    bndFtMinus.Height := 0;
  if MasterData.СуммаСкидкиНадбавки <= 0 then
    bndFtPlus.Height := 0;
  if MasterData.СуммаТрансп = 0 then
    bndFtTTV.Height := 0;
end;

procedure Structure1_ROOT_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
var
  TmpPartner : ICDictionary;
begin
  with Table do
    begin
      Value['NUMBER'] := MasterData.НомерДокумента;
      Value['Date'] := MasterData.ДатаДокумента;
      TmpPartner := MasterData.Партнер;
      if TmpPartner.IsFocused then
        begin
          if (TmpPartner.GetSign() = 'Реализаторы') or (TmpPartner.GetSign() = 'ПостНаРеализацию') then
            TmpPartner := TmpPartner.Партнер;
          if VarAsBool(TmpPartner.IsFocused) then
            begin
              Value['PARTADDR'] := GetActiv(ADR, 'ПочтИндекс', TmpPartner) + ', ' + GetActiv(ADR, 'Город.Название', TmpPartner) + ', ' + GetActiv(ADR, 'Адрес', TmpPartner);
              Value['PARTPHONE'] := '(' + GetActiv(TLF, 'КодГорода', TmpPartner) + ') ' + GetActiv(TLF, 'Номер', TmpPartner);
              Value['PARTNAME'] := GetPartName(TmpPartner, 0); //.ПолноеНазвание;
              Value['PAYACCNUM'] := GetActiv(RRR, 'НомерСчета', TmpPartner);
              Value['BANKMFO'] := GetActiv(RRR, 'Банк.МФО', TmpPartner);
              Value['BANKNAME'] := GetActiv(RRR, 'Банк.Название', TmpPartner);
              Value['BANKTOWN'] := ' м.' + GetActiv(RRR, 'Банк.Город', TmpPartner);
              case TmpPartner.GetSign of
                'ЮрПартнеры' :
                  Value['ZKPO'] := TmpPartner.ЗКПО;
                'ФизЛица' :
                  Value['ZKPO'] := TmpPartner.ИдентНомер;
                'Служащие' :
                  Value['ZKPO'] := TmpPartner.НалогНом;
              end;
            end;
        end;
      Value['Summa'] := MasterData.Сумма;
      Value['SumNT'] := MasterData.СуммаБезНДС;
      Value['Tax'] := MasterData.СуммаНДС; 
      if MasterData.HasField('ОбщаяМасса') and MasterData.HasField('ОбщаяПлощадь') then
        begin
          Value['Massa'] := MasterData.ОбщаяМасса;
          Value['Square'] := MasterData.ОбщаяПлощадь;
        end;
      if MasterData.HasField('СуммаВозврТары') then
        Value['SUMREVTARE'] := MasterData.СуммаВозврТары;
      if MasterData.HasField('СуммаТары') then
        begin
          Value['SUMNTTARE'] := MasterData.СуммаБезНДСТары;
          Value['TAXTARE'] := MasterData.СуммаНДСТары;
          Value['SUMTARE'] := MasterData.СуммаТары;
        end;
      Value['TRANSNT'] := MasterData.СуммаБезНДСТрансп;
      Value['TRANSTAX'] := MasterData.СуммаНДСТрансп;
      Value['TRANSSUM'] := MasterData.СуммаТрансп;
      Value['ISLOW'] := MasterData.СуммаСкидкиНадбавки < 0;
      if MasterData.СуммаСкидкиНадбавки < 0 then
        begin
          Value['LOWHIGHNT'] := -MasterData.СуммаБезНДССкидкиНадбавки;
          Value['LOWHIGHTAX'] := -MasterData.СуммаНДССкидкиНадбавки;
          Value['LOWHIGHSUM'] := -MasterData.СуммаСкидкиНадбавки;
        end
      else
        begin
          Value['LOWHIGHNT'] := MasterData.СуммаБезНДССкидкиНадбавки;
          Value['LOWHIGHTAX'] := MasterData.СуммаНДССкидкиНадбавки;
          Value['LOWHIGHSUM'] := MasterData.СуммаСкидкиНадбавки;
        end;
    end;
  MasterData.SaveContents('', Tbl);       
  Tbl.DoCalculation('СуммаСтроки', 'Количество*Цена');
  Tbl.DoGetLinks('Код=Товар.Код;ЕдИзм=Товар.ЕдИзм');
  if VarAsBool(MasterData.ПризнакСрокаОплаты) then
    Label82.Caption := 'Рахунок дійсний до ' + DateToStr(MasterData.СрокОплаты) + ' р.';
  lbSumInWord.Caption := CNV.MoneyToStr(MasterData.Сумма, 'ГРН', 1058); //C_GRN,C_KOP,True);
end;

procedure Structure1_ME_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
begin
  GetMyFirm(Table, MYF, ADR, TLF, RRR);
  Accept := False;
end;

procedure Structure1_ROOT_Det_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
begin
  if Index = 0 then
    Accept := Tbl.SelectFirst()
  else
    Accept := Tbl.SelectNext();
  if not Accept then
    exit;
  with Table do
    begin
      Value['Code'] := Tbl.Код;
      Value['NAME'] := Tbl.DefValue['Товар'];
      Value['UnitName'] := Tbl.DefValue['ЕдИзм'];
      Value['Count'] := Tbl.Количество;
      Value['PriceNT'] := Tbl.ЦенаБезНДС;
      Value['Price'] := Tbl.Цена;
      Value['SummaStr'] := Tbl.СуммаСтроки;
    end;
end;

procedure bndFtMinus_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  if MasterData.СуммаСкидкиНадбавки >= 0 then
    Accept := False;
end;

procedure bndFtPlus_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  if MasterData.СуммаСкидкиНадбавки <= 0 then
    Accept := False;
end;

procedure bndFtTTV_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  if MasterData.СуммаТрансп = 0 then
    Accept := False;
end;

procedure Structure1_ROOT_Det_GetCount(Table : TRBTable; var Count : Integer);
begin
  Count := Tbl.LineCount;
end;

procedure bndFtRetTara_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  lblTaxRevTara.Caption := FormatFloat('0.00', 0);
  if MasterData.HasField('СуммаВозврТары') then
    Accept := MasterData.СуммаВозврТары <> 0
  else
    Accept := False;
end;

procedure bndFtTara_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  if MasterData.HasField('СуммаТары') then
    Accept := MasterData.СуммаТары <> 0
  else
    Accept := False;
end;

procedure bndFtMassa_BeforePrint(Band:TRBCustomBand; var Accept:Boolean);
begin
  Accept := MasterData.HasField('ОбщаяМасса') and MasterData.HasField('ОбщаяПлощадь');
  if not Accept then
    exit;
  Accept := (MasterData.ОбщаяМасса <> 0) or (MasterData.ОбщаяПлощадь <> 0);
end;


end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4PrintForm
bndFtHd:TRBBand
Label33:TRBLabel
Label41:TRBLabel
Label42:TRBLabel
Label43:TRBLabel
bndFtRetTara:TRBBand
Label62:TRBLabel
Label63:TRBLabel
lblTaxRevTara:TRBLabel
Label65:TRBLabel
bndFtTara:TRBBand
Label66:TRBLabel
Label67:TRBLabel
Label68:TRBLabel
Label69:TRBLabel
bndROOT:TRBDetailBand
imgLogo:TRBImage
Label5:TRBLabel
Label1:TRBLabel
Label2:TRBLabel
Label3:TRBLabel
Label4:TRBLabel
Label6:TRBLabel
Label7:TRBLabel
Label8:TRBLabel
Label12:TRBLabel
Label13:TRBLabel
Label14:TRBLabel
Label11:TRBLabel
Label15:TRBLabel
Label16:TRBLabel
Label19:TRBLabel
Label20:TRBLabel
Label21:TRBLabel
Label9:TRBLabel
Label17:TRBLabel
Label10:TRBLabel
Label18:TRBLabel
lbTaxNumberName:TRBLabel
Label22:TRBLabel
Label52:TRBLabel
Label25:TRBLabel
Label23:TRBLabel
bndHdDet:TRBBand
Label45:TRBLabel
Label26:TRBLabel
Label27:TRBLabel
Label28:TRBLabel
Label29:TRBLabel
Label30:TRBLabel
Label31:TRBLabel
Label32:TRBLabel
bndDET:TRBDetailBand
Label34:TRBLabel
Label35:TRBLabel
Label36:TRBLabel
Label37:TRBLabel
Label38:TRBLabel
Label39:TRBLabel
Label40:TRBLabel
SysData1:TRBSysData
bndFtMinus:TRBBand
Label44:TRBLabel
Label46:TRBLabel
Label60:TRBLabel
Label61:TRBLabel
bndFtPlus:TRBBand
Label70:TRBLabel
Label71:TRBLabel
Label72:TRBLabel
Label73:TRBLabel
bndFtTTV:TRBBand
Label74:TRBLabel
Label75:TRBLabel
Label76:TRBLabel
Label77:TRBLabel
bndFtALL:TRBBand
Label78:TRBLabel
Label79:TRBLabel
Label80:TRBLabel
Label81:TRBLabel
bndFtMassa:TRBBand
Label53:TRBLabel
Label54:TRBLabel
Label55:TRBLabel
Label56:TRBLabel
bndFtDET:TRBBand
Label47:TRBLabel
lbSumInWord:TRBLabel
Label82:TRBLabel
Label83:TRBLabel
Label49:TRBLabel
Label50:TRBLabel
Structure1:TRBStructure
