interface

const
  alNone = 0; //TAlign
  alTop = 1; //TAlign
  alBottom = 2; //TAlign
  alLeft = 3; //TAlign
  alRight = 4; //TAlign
  alClient = 5; //TAlign
  bsNone = 0; //TBorderStyle
  bsSingle = 1; //TBorderStyle
  clBlack = $00000000; //TColor
  clMaroon = $00000080; //TColor
  clGreen = $00008000; //TColor
  clOlive = $00008080; //TColor
  clNavy = $00800000; //TColor
  clPurple = $00800080; //TColor
  clTeal = $00808000; //TColor
  clGray = $00808080; //TColor
  clSilver = $00C0C0C0; //TColor
  clRed = $000000FF; //TColor
  clLime = $0000FF00; //TColor
  clYellow = $0000FFFF; //TColor
  clBlue = $00FF0000; //TColor
  clFuchsia = $00FF00FF; //TColor
  clAqua = $00FFFF00; //TColor
  clWhite = $00FFFFFF; //TColor
  clScrollBar = $80000000; //TColor
  clBackground = $80000001; //TColor
  clActiveCaption = $80000002; //TColor
  clInactiveCaption = $80000003; //TColor
  clMenu = $80000004; //TColor
  clWindow = $80000005; //TColor
  clWindowFrame = $80000006; //TColor
  clMenuText = $80000007; //TColor
  clWindowText = $80000008; //TColor
  clCaptionText = $80000009; //TColor
  clActiveBorder = $8000000A; //TColor
  clInactiveBorder = $8000000B; //TColor
  clAppWorkSpace = $8000000C; //TColor
  clHighlight = $8000000D; //TColor
  clHighlightText = $8000000E; //TColor
  clBtnFace = $8000000F; //TColor
  clBtnShadow = $80000010; //TColor
  clGrayText = $80000011; //TColor
  clBtnText = $80000012; //TColor
  clInactiveCaptionText = $80000013; //TColor
  clBtnHighlight = $80000014; //TColor
  cl3DDkShadow = $80000015; //TColor
  cl3DLight = $80000016; //TColor
  clInfoText = $80000017; //TColor
  clInfoBk = $80000018; //TColor
  clNone = $1FFFFFFF; //TColor
  ANSI_CHARSET = 0; //TFontCharset
  DEFAULT_CHARSET = 1; //TFontCharset
  SYMBOL_CHARSET = 2; //TFontCharset
  MAC_CHARSET = 77; //TFontCharset
  SHIFTJIS_CHARSET = 128; //TFontCharset
  HANGEUL_CHARSET = 129; //TFontCharset
  JOHAB_CHARSET = 130; //TFontCharset
  GB2312_CHARSET = 134; //TFontCharset
  CHINESEBIG5_CHARSET = 136; //TFontCharset
  GREEK_CHARSET = 161; //TFontCharset
  TURKISH_CHARSET = 162; //TFontCharset
  HEBREW_CHARSET = 177; //TFontCharset
  ARABIC_CHARSET = 178; //TFontCharset
  BALTIC_CHARSET = 186; //TFontCharset
  RUSSIAN_CHARSET = 204; //TFontCharset
  THAI_CHARSET = 222; //TFontCharset
  EASTEUROPE_CHARSET = 238; //TFontCharset
  OEM_CHARSET = 255; //TFontCharset
  fpDefault = 0; //TFontPitch
  fpVariable = 1; //TFontPitch
  fpFixed = 2; //TFontPitch
  fsBold = 0; //TFontStyle
  fsItalic = 1; //TFontStyle
  fsUnderline = 2; //TFontStyle
  fsStrikeOut = 3; //TFontStyle
  maAutomatic = 0; //TMenuItemAutoFlag
  maManual = 1; //TMenuItemAutoFlag
  maParent = 2; //TMenuItemAutoFlag
  mbNone = 0; //TMenuBreak
  mbBreak = 1; //TMenuBreak
  mbBarBreak = 2; //TMenuBreak
  paLeft = 0; //TPopupAlignment
  paRight = 1; //TPopupAlignment
  paCenter = 2; //TPopupAlignment
  bdLeftToRight = 0; //TBiDiMode
  bdRightToLeft = 1; //TBiDiMode
  bdRightToLeftNoAlign = 2; //TBiDiMode
  bdRightToLeftReadingOnly = 3; //TBiDiMode
  maLeftToRight = 0; //TMenuAnimations
  maRightToLeft = 1; //TMenuAnimations
  maTopToBottom = 2; //TMenuAnimations
  maBottomToTop = 3; //TMenuAnimations
  maNone = 4; //TMenuAnimations
  tbRightButton = 0; //TTrackButton
  tbLeftButton = 1; //TTrackButton
  akLeft = 0; //TAnchorKind
  akTop = 1; //TAnchorKind
  akRight = 2; //TAnchorKind
  akBottom = 3; //TAnchorKind
  dkDrag = 0; //TDragKind
  dkDock = 1; //TDragKind
  dmManual = 0; //TDragMode
  dmAutomatic = 1; //TDragMode
  ecNormal = 0; //TEditCharCase
  ecUpperCase = 1; //TEditCharCase
  ecLowerCase = 2; //TEditCharCase
  ffrExcludeCtg = 0; //TFastFindRegion
  ffrOnlyCtg = 1; //TFastFindRegion
  ffrIncludeCtg = 2; //TFastFindRegion
  dsFocus = 0; //TDrawingStyle
  dsSelected = 1; //TDrawingStyle
  dsNormal = 2; //TDrawingStyle
  dsTransparent = 3; //TDrawingStyle
  itImage = 0; //TImageType
  itMask = 1; //TImageType
  dgEditing = 0; //TCoolDBGridOption
  dgAutoNext = 1; //TCoolDBGridOption
  dgAlwaysShowEditor = 2; //TCoolDBGridOption
  dgTitles = 3; //TCoolDBGridOption
  dgIndicator = 4; //TCoolDBGridOption
  dgColumnResize = 5; //TCoolDBGridOption
  dgColLines = 6; //TCoolDBGridOption
  dgRowLines = 7; //TCoolDBGridOption
  dgTabs = 8; //TCoolDBGridOption
  dgRowSelect = 9; //TCoolDBGridOption
  dgAlwaysShowSelection = 10; //TCoolDBGridOption
  dgAllowInsert = 11; //TCoolDBGridOption
  dgAllowDelete = 12; //TCoolDBGridOption
  dgConfirmDelete = 13; //TCoolDBGridOption
  dgCancelOnExit = 14; //TCoolDBGridOption
  dgMultiSelect = 15; //TCoolDBGridOption
  dgInsKeyInsert = 16; //TCoolDBGridOption
  dgAutoSelect = 17; //TCoolDBGridOption
  beLeft = 0; //TBevelEdge
  beTop = 1; //TBevelEdge
  beRight = 2; //TBevelEdge
  beBottom = 3; //TBevelEdge
  bvNone = 0; //TBevelCut
  bvLowered = 1; //TBevelCut
  bvRaised = 2; //TBevelCut
  bvSpace = 3; //TBevelCut
  bkNone = 0; //TBevelKind
  bkTile = 1; //TBevelKind
  bkSoft = 2; //TBevelKind
  bkFlat = 3; //TBevelKind
  imDisable = 0; //TImeMode
  imClose = 1; //TImeMode
  imOpen = 2; //TImeMode
  imDontCare = 3; //TImeMode
  imSAlpha = 4; //TImeMode
  imAlpha = 5; //TImeMode
  imHira = 6; //TImeMode
  imSKata = 7; //TImeMode
  imKata = 8; //TImeMode
  imChinese = 9; //TImeMode
  imSHanguel = 10; //TImeMode
  imHanguel = 11; //TImeMode
  lbStandard = 0; //TListBoxStyle
  lbOwnerDrawFixed = 1; //TListBoxStyle
  lbOwnerDrawVariable = 2; //TListBoxStyle
  lbVirtual = 3; //TListBoxStyle
  lbVirtualOwnerDraw = 4; //TListBoxStyle
  tsTabs = 0; //TTabStyle
  tsButtons = 1; //TTabStyle
  tsFlatButtons = 2; //TTabStyle
  tpTop = 0; //TTabPosition
  tpBottom = 1; //TTabPosition
  tpLeft = 2; //TTabPosition
  tpRight = 3; //TTabPosition
  ofReadOnly = 0; //TOpenOption
  ofOverwritePrompt = 1; //TOpenOption
  ofHideReadOnly = 2; //TOpenOption
  ofNoChangeDir = 3; //TOpenOption
  ofShowHelp = 4; //TOpenOption
  ofNoValidate = 5; //TOpenOption
  ofAllowMultiSelect = 6; //TOpenOption
  ofExtensionDifferent = 7; //TOpenOption
  ofPathMustExist = 8; //TOpenOption
  ofFileMustExist = 9; //TOpenOption
  ofCreatePrompt = 10; //TOpenOption
  ofShareAware = 11; //TOpenOption
  ofNoReadOnlyReturn = 12; //TOpenOption
  ofNoTestFileCreate = 13; //TOpenOption
  ofNoNetworkButton = 14; //TOpenOption
  ofNoLongNames = 15; //TOpenOption
  ofOldStyleDialog = 16; //TOpenOption
  ofNoDereferenceLinks = 17; //TOpenOption
  ofEnableIncludeNotify = 18; //TOpenOption
  ofEnableSizing = 19; //TOpenOption
  fdScreen = 0; //TFontDialogDevice
  fdPrinter = 1; //TFontDialogDevice
  fdBoth = 2; //TFontDialogDevice
  fdAnsiOnly = 0; //TFontDialogOption
  fdTrueTypeOnly = 1; //TFontDialogOption
  fdEffects = 2; //TFontDialogOption
  fdFixedPitchOnly = 3; //TFontDialogOption
  fdForceFontExist = 4; //TFontDialogOption
  fdNoFaceSel = 5; //TFontDialogOption
  fdNoOEMFonts = 6; //TFontDialogOption
  fdNoSimulations = 7; //TFontDialogOption
  fdNoSizeSel = 8; //TFontDialogOption
  fdNoStyleSel = 9; //TFontDialogOption
  fdNoVectorFonts = 10; //TFontDialogOption
  fdShowHelp = 11; //TFontDialogOption
  fdWysiwyg = 12; //TFontDialogOption
  fdLimitSize = 13; //TFontDialogOption
  fdScalableOnly = 14; //TFontDialogOption
  fdApplyButton = 15; //TFontDialogOption
  cdFullOpen = 0; //TColorDialogOption
  cdPreventFullOpen = 1; //TColorDialogOption
  cdShowHelp = 2; //TColorDialogOption
  cdSolidColor = 3; //TColorDialogOption
  cdAnyColor = 4; //TColorDialogOption
  goFixedVertLine = 0; //TGridOption
  goFixedHorzLine = 1; //TGridOption
  goVertLine = 2; //TGridOption
  goHorzLine = 3; //TGridOption
  goRangeSelect = 4; //TGridOption
  goDrawFocusSelected = 5; //TGridOption
  goRowSizing = 6; //TGridOption
  goColSizing = 7; //TGridOption
  goRowMoving = 8; //TGridOption
  goColMoving = 9; //TGridOption
  goEditing = 10; //TGridOption
  goTabs = 11; //TGridOption
  goRowSelect = 12; //TGridOption
  goAlwaysShowEditor = 13; //TGridOption
  goThumbTracking = 14; //TGridOption
  ssNone = 0; //TScrollStyle
  ssHorizontal = 1; //TScrollStyle
  ssVertical = 2; //TScrollStyle
  ssBoth = 3; //TScrollStyle
  taLeftJustify = 0; //TAlignment
  taRightJustify = 1; //TAlignment
  taCenter = 2; //TAlignment
  bsSizeable = 2; //TO4BorderStyle
  bsDialog = 3; //TO4BorderStyle
  sdLeft = 0; //TSide
  sdTop = 1; //TSide
  sdRight = 2; //TSide
  sdBottom = 3; //TSide
  fesSimple = 0; //TFieldEditStyle
  fesCalc = 1; //TFieldEditStyle
  fesDate = 2; //TFieldEditStyle
  fesDateTime = 3; //TFieldEditStyle
  fesTime = 4; //TFieldEditStyle
  fesInteger = 5; //TFieldEditStyle
  fesListBox = 6; //TFieldEditStyle
  fesAction = 7; //TFieldEditStyle
  fesActionEdit = 8; //TFieldEditStyle
  fesDropDownListBox = 9; //TFieldEditStyle
  actNone = 0; //TO4Actions
  actAdd = 1; //TO4Actions
  actEdit = 2; //TO4Actions
  actDel = 3; //TO4Actions
  actStateUp = 4; //TO4Actions
  actStateDown = 5; //TO4Actions
  actAddLevel = 6; //TO4Actions
  actAddSubLevel = 7; //TO4Actions
  actEditLevel = 8; //TO4Actions
  actDelLevel = 9; //TO4Actions
  actDontUseLevel = 10; //TO4Actions
  actUseLevel = 11; //TO4Actions
  actSelect = 12; //TO4Actions
  actSave = 13; //TO4Actions
  actCancel = 14; //TO4Actions
  actUseNoLevel = 15; //TO4Actions
  actGridParam = 16; //TO4Actions
  tlTop = 0; //TTextLayout
  tlCenter = 1; //TTextLayout
  tlBottom = 2; //TTextLayout
  tsStandard = 0; //TTabStyle
  tsOwnerDraw = 1; //TTabStyle
  cbUnchecked = 0; //TCheckBoxState
  cbChecked = 1; //TCheckBoxState
  cbGrayed = 2; //TCheckBoxState
  rsNone = 0; //TResizeStyle
  rsLine = 1; //TResizeStyle
  rsUpdate = 2; //TResizeStyle
  rsPattern = 3; //TResizeStyle
  ssRegular = 0; //TScrollBarStyle
  ssFlat = 1; //TScrollBarStyle
  ssHotTrack = 2; //TScrollBarStyle
  tlkSystem = 0; //TActivateKindType
  tlkO3 = 1; //TActivateKindType
  htHandPoint = 0; //TListHotTrackStyle
  htUnderlineCold = 1; //TListHotTrackStyle
  htUnderlineHot = 2; //TListHotTrackStyle
  iaTop = 0; //TIconArrangement
  iaLeft = 1; //TIconArrangement
  stNone = 0; //TSortType
  stData = 1; //TSortType
  stText = 2; //TSortType
  stBoth = 3; //TSortType
  vsIcon = 0; //TViewStyle
  vsSmallIcon = 1; //TViewStyle
  vsList = 2; //TViewStyle
  vsReport = 3; //TViewStyle
  tbsButton = 0; //TToolButtonStyle
  tbsCheck = 1; //TToolButtonStyle
  tbsDropDown = 2; //TToolButtonStyle
  tbsSeparator = 3; //TToolButtonStyle
  tbsDivider = 4; //TToolButtonStyle
  ebLeft = 0; //TEdgeBorder
  ebTop = 1; //TEdgeBorder
  ebRight = 2; //TEdgeBorder
  ebBottom = 3; //TEdgeBorder
  esNone = 0; //TEdgeStyle
  esRaised = 1; //TEdgeStyle
  esLowered = 2; //TEdgeStyle
  pbHorizontal = 0; //TProgressBarOrientation
  pbVertical = 1; //TProgressBarOrientation
  trHorizontal = 0; //TTrackBarOrientation
  trVertical = 1; //TTrackBarOrientation
  tmBottomRight = 0; //TTickMark
  tmTopLeft = 1; //TTickMark
  tmBoth = 2; //TTickMark
  tsNone = 0; //TTickStyle
  tsAuto = 1; //TTickStyle
  tsManual = 2; //TTickStyle
  pstColumn = 0; //TCoolColumnPosType
  pstLine = 1; //TCoolColumnPosType
  pstCell = 2; //TCoolColumnPosType
  mtWarning = 0; //TMsgDlgType
  mtError = 1; //TMsgDlgType
  mtInformation = 2; //TMsgDlgType
  mtConfirmation = 3; //TMsgDlgType
  mtCustom = 4; //TMsgDlgType
  mbYes = 0; //TMsgDlgBtn
  mbNo = 1; //TMsgDlgBtn
  mbOK = 2; //TMsgDlgBtn
  mbCancel = 3; //TMsgDlgBtn
  mbAbort = 4; //TMsgDlgBtn
  mbRetry = 5; //TMsgDlgBtn
  mbIgnore = 6; //TMsgDlgBtn
  mbAll = 7; //TMsgDlgBtn
  mbNoToAll = 8; //TMsgDlgBtn
  mbYesToAll = 9; //TMsgDlgBtn
  mbHelp = 10; //TMsgDlgBtn
  mrNone = 0; //Integer
  mrOk = 1; //Integer
  mrCancel = 2; //Integer
  mrAbort = 3; //Integer
  mrRetry = 4; //Integer
  mrIgnore = 5; //Integer
  mrYes = 6; //Integer
  mrNo = 7; //Integer
  mrAll = 8; //Integer
  mrNoToAll = 9; //Integer
  mrYesToAll = 10; //Integer
  fsdLocalHDD = 1; //Integer
  fsdFloppy = 2; //Integer
  fsdCDROM = 4; //Integer
  fsdRemote = 8; //Integer
  fsdRAMDisk = 16; //Integer
  romRead = 0; //Integer
  romWriteTrue = 1; //Integer
  romWriteFalse = 2; //Integer
  tlAddNew = 0; //Integer
  tlStandart = 1; //Integer
  tlSub = 2; //Integer
  tlFirst = 3; //Integer
  sltReadCommitted = 1; //Integer
  sltReadUncommitted = 2; //Integer
  sltRepeatableRead = 3; //Integer
  sltSerializable = 4; //Integer
  lftString = 0; //TLogicalFieldType
  lftInteger = 1; //TLogicalFieldType
  lftBoolean = 2; //TLogicalFieldType
  lftFloat = 3; //TLogicalFieldType
  lftFFT = 4; //TLogicalFieldType
  lftDate = 5; //TLogicalFieldType
  lftTime = 6; //TLogicalFieldType
  lftDateTime = 7; //TLogicalFieldType
  lftLink = 8; //TLogicalFieldType
  lftBlob = 9; //TLogicalFieldType
  lftMemo = 10; //TLogicalFieldType
  dupIgnore = 0; //TDuplicates
  dupAccept = 1; //TDuplicates
  dupError = 2; //TDuplicates
  rdDay = 0; //TRoundDateType
  rdWeek = 1; //TRoundDateType
  rdDecade = 2; //TRoundDateType
  rdMonth = 3; //TRoundDateType
  rdQuarter = 4; //TRoundDateType
  rdHalfYear = 5; //TRoundDateType
  rdYear = 6; //TRoundDateType
  crDefault = 0; //TCursor
  crArrow = -2; //TCursor
  crCross = -3; //TCursor
  crIBeam = -4; //TCursor
  crSizeNESW = -6; //TCursor
  crSizeNS = -7; //TCursor
  crSizeNWSE = -8; //TCursor
  crSizeWE = -9; //TCursor
  crUpArrow = -10; //TCursor
  crHourGlass = -11; //TCursor
  crDrag = -12; //TCursor
  crNoDrop = -13; //TCursor
  crHSplit = -14; //TCursor
  crVSplit = -15; //TCursor
  crMultiDrag = -16; //TCursor
  crSQLWait = -17; //TCursor
  crNo = -18; //TCursor
  crAppStart = -19; //TCursor
  crHelp = -20; //TCursor
  crHandPoint = -21; //TCursor
  crSizeAll = -22; //TCursor
  HKEY_CLASSES_ROOT = 0; //Integer
  HKEY_LOCAL_MACHINE = 1; //Integer
  HKEY_CURRENT_USER = 2; //Integer
  HKEY_USERS = 3; //Integer
  pmNone = 0; //TPanningMode
  pmHorizontal = 1; //TPanningMode
  pmVertical = 2; //TPanningMode
  pmBoth = 3; //TPanningMode
  pbmStretch = 0; //TTeeBackImageMode
  pbmTile = 1; //TTeeBackImageMode
  pbmCenter = 2; //TTeeBackImageMode
  pmBlack = 0; //TPenMode
  pmWhite = 1; //TPenMode
  pmNop = 2; //TPenMode
  pmNot = 3; //TPenMode
  pmCopy = 4; //TPenMode
  pmNotCopy = 5; //TPenMode
  pmMergePenNot = 6; //TPenMode
  pmMaskPenNot = 7; //TPenMode
  pmMergeNotPen = 8; //TPenMode
  pmMaskNotPen = 9; //TPenMode
  pmMerge = 10; //TPenMode
  pmNotMerge = 11; //TPenMode
  pmMask = 12; //TPenMode
  pmNotMask = 13; //TPenMode
  pmXor = 14; //TPenMode
  pmNotXor = 15; //TPenMode
  psSolid = 0; //TPenStyle
  psDash = 1; //TPenStyle
  psDot = 2; //TPenStyle
  psDashDot = 3; //TPenStyle
  psDashDotDot = 4; //TPenStyle
  psClear = 5; //TPenStyle
  psInsideFrame = 6; //TPenStyle
  talAuto = 0; //TAxisLabelStyle
  talNone = 1; //TAxisLabelStyle
  talValue = 2; //TAxisLabelStyle
  talMark = 3; //TAxisLabelStyle
  talText = 4; //TAxisLabelStyle
  bsSolid = 0; //TBrushStyle
  bsClear = 1; //TBrushStyle
  bsHorizontal = 2; //TBrushStyle
  bsVertical = 3; //TBrushStyle
  bsFDiagonal = 4; //TBrushStyle
  bsBDiagonal = 5; //TBrushStyle
  bsCross = 6; //TBrushStyle
  bsDiagCross = 7; //TBrushStyle
  gdTopBottom = 0; //TGradientDirection
  gdBottomTop = 1; //TGradientDirection
  gdLeftRight = 2; //TGradientDirection
  gdRightLeft = 3; //TGradientDirection
  laLeft = 0; //TLegendAlignment
  laRight = 1; //TLegendAlignment
  laTop = 2; //TLegendAlignment
  laBottom = 3; //TLegendAlignment
  lsAuto = 0; //TLegendStyle
  lsSeries = 1; //TLegendStyle
  lsValues = 2; //TLegendStyle
  lsLastValues = 3; //TLegendStyle
  ltsPlain = 0; //TLegendTextStyle
  ltsLeftValue = 1; //TLegendTextStyle
  ltsRightValue = 2; //TLegendTextStyle
  ltsLeftPercent = 3; //TLegendTextStyle
  ltsRightPercent = 4; //TLegendTextStyle
  ltsXValue = 5; //TLegendTextStyle
  smsValue = 0; //TSeriesMarksStyle
  smsPercent = 1; //TSeriesMarksStyle
  smsLabel = 2; //TSeriesMarksStyle
  smsLabelPercent = 3; //TSeriesMarksStyle
  smsLabelValue = 4; //TSeriesMarksStyle
  smsLegend = 5; //TSeriesMarksStyle
  smsPercentTotal = 6; //TSeriesMarksStyle
  smsLabelPercentTotal = 7; //TSeriesMarksStyle
  smsXValue = 8; //TSeriesMarksStyle
  aTopAxis = 0; //THorizAxis
  aBottomAxis = 1; //THorizAxis
  aLeftAxis = 0; //TVertAxis
  aRightAxis = 1; //TVertAxis
  psRectangle = 0; //TSeriesPointerStyle
  psCircle = 1; //TSeriesPointerStyle
  psTriangle = 2; //TSeriesPointerStyle
  psDownTriangle = 3; //TSeriesPointerStyle
  psCross = 4; //TSeriesPointerStyle
  psDiagCross = 5; //TSeriesPointerStyle
  psStar = 6; //TSeriesPointerStyle
  psDiamond = 7; //TSeriesPointerStyle
  psSmallDot = 8; //TSeriesPointerStyle
  loNone = 0; //TChartListOrder
  loAscending = 1; //TChartListOrder
  loDescending = 2; //TChartListOrder
  maStacked = 1; //TMultiArea
  maStacked100 = 2; //TMultiArea
  bsRectangle = 0; //TBarStyle
  bsPyramid = 1; //TBarStyle
  bsInvPyramid = 2; //TBarStyle
  bsCilinder = 3; //TBarStyle
  bsEllipse = 4; //TBarStyle
  bsArrow = 5; //TBarStyle
  bsRectGradient = 6; //TBarStyle
  mbSide = 1; //TMultiBar
  mbStacked = 2; //TMultiBar
  mbStacked100 = 3; //TMultiBar
  chasRectangle = 0; //TChartShapeStyle
  chasCircle = 1; //TChartShapeStyle
  chasVertLine = 2; //TChartShapeStyle
  chasHorizLine = 3; //TChartShapeStyle
  chasTriangle = 4; //TChartShapeStyle
  chasInvertTriangle = 5; //TChartShapeStyle
  chasLine = 6; //TChartShapeStyle
  chasDiamond = 7; //TChartShapeStyle
  xysPixels = 0; //TChartShapeXYStyle
  xysAxis = 1; //TChartShapeXYStyle
  cstLine = 0; //TO4ChartSeriesType
  cstArea = 1; //TO4ChartSeriesType
  cstPoint = 2; //TO4ChartSeriesType
  cstVBar = 3; //TO4ChartSeriesType
  cstHBar = 4; //TO4ChartSeriesType
  cstPie = 5; //TO4ChartSeriesType
  cstShape = 6; //TO4ChartSeriesType
  cstFastLine = 7; //TO4ChartSeriesType
  cstArrows = 8; //TO4ChartSeriesType
  cstGantt = 9; //TO4ChartSeriesType
  cstBubble = 10; //TO4ChartSeriesType
  pkSelections = 0; //TO4PrintKind
  pkWindow = 1; //TO4PrintKind
  pkAll = 2; //TO4PrintKind
  ptGraph = 0; //TPrintType
  ptText = 1; //TPrintType
  poPortrait = 0; //TPrinterOrientation
  poLandscape = 1; //TPrinterOrientation
  Default = 0; //TQRPaperSize
  Letter = 1; //TQRPaperSize
  LetterSmall = 2; //TQRPaperSize
  Tabloid = 3; //TQRPaperSize
  Ledger = 4; //TQRPaperSize
  Legal = 5; //TQRPaperSize
  Statement = 6; //TQRPaperSize
  Executive = 7; //TQRPaperSize
  A3 = 8; //TQRPaperSize
  A4 = 9; //TQRPaperSize
  A4Small = 10; //TQRPaperSize
  A5 = 11; //TQRPaperSize
  B4 = 12; //TQRPaperSize
  B5 = 13; //TQRPaperSize
  Folio = 14; //TQRPaperSize
  Quarto = 15; //TQRPaperSize
  qr10X14 = 16; //TQRPaperSize
  qr11X17 = 17; //TQRPaperSize
  Note = 18; //TQRPaperSize
  Env9 = 19; //TQRPaperSize
  Env10 = 20; //TQRPaperSize
  Env11 = 21; //TQRPaperSize
  Env12 = 22; //TQRPaperSize
  Env14 = 23; //TQRPaperSize
  CSheet = 24; //TQRPaperSize
  DSheet = 25; //TQRPaperSize
  ESheet = 26; //TQRPaperSize
  Custom = 27; //TQRPaperSize
  First = 0; //TQRBin
  Upper = 1; //TQRBin
  Lower = 2; //TQRBin
  Middle = 3; //TQRBin
  Manual = 4; //TQRBin
  Envelope = 5; //TQRBin
  EnvManual = 6; //TQRBin
  Auto = 7; //TQRBin
  Tractor = 8; //TQRBin
  SmallFormat = 9; //TQRBin
  LargeFormat = 10; //TQRBin
  LargeCapacity = 11; //TQRBin
  Cassette = 12; //TQRBin
  Last = 13; //TQRBin
  MM = 0; //TRBUnit
  Inches = 1; //TRBUnit
  Pixels = 2; //TRBUnit
  Characters = 3; //TRBUnit
  Native = 4; //TRBUnit
  KeepWithPrior = 0; //TBandOption
  ColorNoSwitch = 1; //TBandOption
  PrintOnNewPage = 2; //TBandOption
  PrintOnNewColumn = 3; //TBandOption
  StartNewPage = 4; //TBandOption
  StartNewColumn = 5; //TBandOption
  PrintIfEmpty = 6; //TBandOption
  PrintingAutoHeight = 7; //TBandOption
  ClippedPrint = 8; //TBandOption
  shRectangle = 0; //TRBShapeType
  shRoundRect = 1; //TRBShapeType
  shEllipse = 2; //TRBShapeType
  shPlusLine = 3; //TRBShapeType
  shVLine = 4; //TRBShapeType
  shHLine = 5; //TRBShapeType
  shXLine = 6; //TRBShapeType
  shTCross = 7; //TRBShapeType
  shBCross = 8; //TRBShapeType
  dtTitle = 0; //TRBSysDataType
  dtDateTime = 1; //TRBSysDataType
  dtDetailCount = 2; //TRBSysDataType
  dtDetailNo = 3; //TRBSysDataType
  dtPageNo = 4; //TRBSysDataType
  dtColumnNo = 5; //TRBSysDataType
  dtColumnCount = 6; //TRBSysDataType
  rbString = 0; //TRBFieldType
  rbBoolean = 1; //TRBFieldType
  rbInteger = 2; //TRBFieldType
  rbFloat = 3; //TRBFieldType
  rbDecimal = 4; //TRBFieldType
  rbDate = 5; //TRBFieldType
  rbTime = 6; //TRBFieldType
  rbDateTime = 7; //TRBFieldType
  rbBlob = 8; //TRBFieldType
  isOFF = 0; //TXGridDesignMode
  isON = 1; //TXGridDesignMode
  exColWidths = 0; //TXGridExportToExcelOption
  exRowHeights = 1; //TXGridExportToExcelOption
  exColors = 2; //TXGridExportToExcelOption
  exBorders = 3; //TXGridExportToExcelOption
  exLayouts = 4; //TXGridExportToExcelOption
  exFonts = 5; //TXGridExportToExcelOption
  xgoGridLines = 0; //TXGridOption
  xgoShowSections = 1; //TXGridOption
  xgoHideRCNumbers = 2; //TXGridOption
  xgoRangeSelect = 3; //TXGridOption
  xgoRowSizing = 4; //TXGridOption
  xgoColSizing = 5; //TXGridOption
  xgoTabs = 6; //TXGridOption
  xgoThumbTracking = 7; //TXGridOption
  cblsNone = 0; //TCellBorderLineStyle
  cblsNormal = 1; //TCellBorderLineStyle
  cblsBold = 2; //TCellBorderLineStyle
  cdtGeneral = 0; //TCellDataType
  cdtText = 1; //TCellDataType
  cdtNumeric = 2; //TCellDataType
  cdtDateTime = 3; //TCellDataType
  xtbFont = 0; //TXGridToolButton
  xtbSize = 1; //TXGridToolButton
  xtbBold = 2; //TXGridToolButton
  xtbItalic = 3; //TXGridToolButton
  xtbUnderline = 4; //TXGridToolButton
  xtbDelim1 = 5; //TXGridToolButton
  xtbLayouts = 6; //TXGridToolButton
  xtbDelim2 = 7; //TXGridToolButton
  xtbBorder = 8; //TXGridToolButton
  xtbBorders = 9; //TXGridToolButton
  xtbDelim3 = 10; //TXGridToolButton
  xtbColors = 11; //TXGridToolButton
  xtbDelim4 = 12; //TXGridToolButton
  xtbLines = 13; //TXGridToolButton
  xtbRCNum = 14; //TXGridToolButton
  xtbFix = 15; //TXGridToolButton
  xtbGroup = 16; //TXGridToolButton
  xtbDelim5 = 17; //TXGridToolButton
  xtbInsDel = 18; //TXGridToolButton
  xtbLock = 19; //TXGridToolButton
  xtbDelim6 = 20; //TXGridToolButton
  xtbCalc = 21; //TXGridToolButton
  bcCode_2_5_interleaved = 0; //TBarcodeType
  bcCode_2_5_industrial = 1; //TBarcodeType
  bcCode_2_5_matrix = 2; //TBarcodeType
  bcCode39 = 3; //TBarcodeType
  bcCode39Extended = 4; //TBarcodeType
  bcCode128A = 5; //TBarcodeType
  bcCode128B = 6; //TBarcodeType
  bcCode128C = 7; //TBarcodeType
  bcCode93 = 8; //TBarcodeType
  bcCode93Extended = 9; //TBarcodeType
  bcCodeMSI = 10; //TBarcodeType
  bcCodePostNet = 11; //TBarcodeType
  bcCodeCodabar = 12; //TBarcodeType
  bcCodeEAN8 = 13; //TBarcodeType
  bcCodeEAN13 = 14; //TBarcodeType
  bcCodeUPC_A = 15; //TBarcodeType
  bcCodeUPC_E0 = 16; //TBarcodeType
  bcCodeUPC_E1 = 17; //TBarcodeType
  bcCodeUPC_Supp2 = 18; //TBarcodeType
  bcCodeUPC_Supp5 = 19; //TBarcodeType
  bcCodeEAN128A = 20; //TBarcodeType
  bcCodeEAN128B = 21; //TBarcodeType
  bcCodeEAN128C = 22; //TBarcodeType
  bcoNone = 0; //TBarcodeOption
  bcoCode = 1; //TBarcodeOption
  bcoTyp = 2; //TBarcodeOption
  bcoBoth = 3; //TBarcodeOption
  stpTopLeft = 0; //TShowTextPosition
  stpTopRight = 1; //TShowTextPosition
  stpTopCenter = 2; //TShowTextPosition
  stpBottomLeft = 3; //TShowTextPosition
  stpBottomRight = 4; //TShowTextPosition
  stpBottomCenter = 5; //TShowTextPosition
  tsCross = 0; //TCTickStyle
  tsTick = 1; //TCTickStyle
  xgtFloat = 0; //Integer
  xgtString = 1; //Integer
  xgtBool = 2; //Integer

type
  T_Set = Integer;
  T_Enum = Integer;
  OleVariant = Variant;
  AnsiString = String;
  WideString = String;
  HKEY = Integer;
  TAlign = T_Enum;
  TBorderStyle = T_Enum;
  TColor = Integer;
  TFontCharset = Integer;
  TFontPitch = T_Enum;
  TFontStyles = T_Set;
  TFontStyle = T_Enum;
  TMenuItemAutoFlag = T_Enum;
  TMenuBreak = T_Enum;
  TPopupAlignment = T_Enum;
  TMenuAutoFlag = T_Enum;
  TBiDiMode = T_Enum;
  TMenuAnimation = T_Set;
  TMenuAnimations = T_Enum;
  TTrackButton = T_Enum;
  TAnchors = T_Set;
  TAnchorKind = T_Enum;
  TDragKind = T_Enum;
  TDragMode = T_Enum;
  TEditCharCase = T_Enum;
  TFastFindRegion = T_Enum;
  TDrawingStyle = T_Enum;
  TImageType = T_Enum;
  TCoolDBGridOptions = T_Set;
  TCoolDBGridOption = T_Enum;
  TBevelEdges = T_Set;
  TBevelEdge = T_Enum;
  TBevelCut = T_Enum;
  TBevelKind = T_Enum;
  TImeMode = T_Enum;
  TListBoxStyle = T_Enum;
  TTabStyle = T_Enum;
  TTabPosition = T_Enum;
  TOpenOptions = T_Set;
  TOpenOption = T_Enum;
  TFontDialogDevice = T_Enum;
  TFontDialogOptions = T_Set;
  TFontDialogOption = T_Enum;
  TColorDialogOptions = T_Set;
  TColorDialogOption = T_Enum;
  TGridOptions = T_Set;
  TGridOption = T_Enum;
  TScrollStyle = T_Enum;
  TAlignment = T_Enum;
  TO4BorderStyle = T_Enum;
  TSides = T_Set;
  TSide = T_Enum;
  TFieldEditStyle = T_Enum;
  TO4Actions = T_Enum;
  TTextLayout = T_Enum;
  TLeftRight = T_Enum;
  TCheckBoxState = T_Enum;
  TResizeStyle = T_Enum;
  TScrollBarStyle = T_Enum;
  TActivateKindType = T_Enum;
  TListHotTrackStyles = T_Set;
  TListHotTrackStyle = T_Enum;
  TIconArrangement = T_Enum;
  TSortType = T_Enum;
  TViewStyle = T_Enum;
  TToolButtonStyle = T_Enum;
  TEdgeBorders = T_Set;
  TEdgeBorder = T_Enum;
  TEdgeStyle = T_Enum;
  TProgressBarOrientation = T_Enum;
  TTrackBarOrientation = T_Enum;
  TTickMark = T_Enum;
  TTickStyle = T_Enum;
  TCoolColumnPosType = T_Enum;
  TMsgDlgType = T_Enum;
  TMsgDlgBtn = T_Enum;
  TLogicalFieldType = T_Enum;
  TDuplicates = T_Enum;
  TRoundDateType = T_Enum;
  TCursor = Integer;
  TPanningMode = T_Enum;
  TTeeBackImageMode = T_Enum;
  TPenMode = T_Enum;
  TPenStyle = T_Enum;
  TAxisLabelStyle = T_Enum;
  TBrushStyle = T_Enum;
  TGradientDirection = T_Enum;
  TLegendAlignment = T_Enum;
  TLegendStyle = T_Enum;
  TLegendTextStyle = T_Enum;
  TSeriesMarksStyle = T_Enum;
  THorizAxis = T_Enum;
  TVertAxis = T_Enum;
  TSeriesPointerStyle = T_Enum;
  TChartListOrder = T_Enum;
  TMultiArea = T_Enum;
  TBarStyle = T_Enum;
  TMultiBar = T_Enum;
  TChartShapeStyle = T_Enum;
  TChartShapeXYStyle = T_Enum;
  TO4ChartSeriesType = T_Enum;
  TO4PrintKind = T_Enum;
  TPrintTypes = T_Set;
  TPrintType = T_Enum;
  TPrinterOrientation = T_Enum;
  TQRPaperSize = T_Enum;
  TQRBin = T_Enum;
  TRBUnit = T_Enum;
  TBandOptions = T_Set;
  TBandOption = T_Enum;
  TRBShapeType = T_Enum;
  TRBSysDataType = T_Enum;
  TRBFieldType = T_Enum;
  TXGridDesignMode = T_Enum;
  TXGridExportToExcelOptions = T_Set;
  TXGridExportToExcelOption = T_Enum;
  TXGridOptions = T_Set;
  TXGridOption = T_Enum;
  TCellBorderLineStyle = T_Enum;
  TCellDataType = T_Enum;
  TXGridToolButtons = T_Set;
  TXGridToolButton = T_Enum;
  TBarcodeType = T_Enum;
  TBarcodeOption = T_Enum;
  TShowTextPosition = T_Enum;
  TCTickStyle = T_Enum;

type
  TObject = classinterface;
  TPersistent = classinterface;
  TComponent = classinterface;
  TCustomDataSource = classinterface;
  TControl = classinterface;
  TWinControl = classinterface;
  TCustomControl = classinterface;
  TCustomDBImage = classinterface;
  TGraphicsObject = classinterface;
  TFont = classinterface;
  TMenu = classinterface;
  TMenuItem = classinterface;
  TBasicAction = classinterface;
  TGraphic = classinterface;
  TBitmap = classinterface;
  TCustomImageList = classinterface;
  TPopupMenu = classinterface;
  TO4DBImage = classinterface;
  TSizeConstraints = classinterface;
  TVPAEvent = classinterface;
  TCustomEdit = classinterface;
  TCustomO4MaskEdit = classinterface;
  TO4CustomEdit = classinterface;
  TO4CustomDBEdit = classinterface;
  TO4DBEdit = classinterface;
  TPeriod = classinterface;
  TStrings = classinterface;
  TO4CustomGrid = classinterface;
  TCoolCustomDBGrid = classinterface;
  TO4CustomDBGrid = classinterface;
  TO4DBGrid = classinterface;
  TDragImageList = classinterface;
  TImageList = classinterface;
  TCollection = classinterface;
  TCoolDBGridColumns = classinterface;
  TCustomPanel = classinterface;
  TO4CustomForm = classinterface;
  TTranslator = classinterface;
  TPersistentStoreWidth = classinterface;
  TBaseLangDict = classinterface;
  TLangDict = classinterface;
  TStringList = classinterface;
  TScanedProps = classinterface;
  TCustomTreeView2 = classinterface;
  TO4CustomTreeView = classinterface;
  TCustomNotebook = classinterface;
  TO4PopupMenu = classinterface;
  TCustomListControl = classinterface;
  TCustomMultiSelectListControl = classinterface;
  TCustomListBoxEx = classinterface;
  TCheckListBoxEx = classinterface;
  TO4CheckListBox = classinterface;
  TListItem = classinterface;
  TListItems = classinterface;
  TCustomTabControl = classinterface;
  TPageControl = classinterface;
  TTabSheet = classinterface;
  TO4PageControl = classinterface;
  TCommonDialog = classinterface;
  TOpenDialog = classinterface;
  TO4OpenDialog = classinterface;
  TSaveDialog = classinterface;
  TO4SaveDialog = classinterface;
  TOpenPictureDialog = classinterface;
  TO4OpenPictureDialog = classinterface;
  TSavePictureDialog = classinterface;
  TO4SavePictureDialog = classinterface;
  TFontDialog = classinterface;
  TO4FontDialog = classinterface;
  TColorDialog = classinterface;
  TO4ColorDialog = classinterface;
  TCustomGrid = classinterface;
  TDrawGrid = classinterface;
  TStringGrid = classinterface;
  TO4StringGrid = classinterface;
  TO4OleControl = classinterface;
  TO4ActiveX = classinterface;
  TO4Form = classinterface;
  TO4NoComponentsForm = classinterface;
  TO4MenuForm = classinterface;
  TCustomSidePanel = classinterface;
  TO4Panel = classinterface;
  TO4Edit = classinterface;
  TCustomMemo = classinterface;
  TO4Memo = classinterface;
  TO4MenuItem = classinterface;
  TButtonControl = classinterface;
  TButton = classinterface;
  TCustomExButton = classinterface;
  TExButton = classinterface;
  TCustomFlatButton2 = classinterface;
  TFlatButton = classinterface;
  TO4Button = classinterface;
  TO4DataSource = classinterface;
  TGraphicControl = classinterface;
  TO4Image = classinterface;
  TPicture = classinterface;
  TO4LinkImage = classinterface;
  TImage = classinterface;
  TCustomLabel = classinterface;
  TO4Label = classinterface;
  TTabSet = classinterface;
  TO4TabSet = classinterface;
  TCustomGroupBox = classinterface;
  TO4GroupBox = classinterface;
  TRadioButton = classinterface;
  TO4RadioButton = classinterface;
  TCustomCheckBox = classinterface;
  TCheckBox = classinterface;
  TO4CheckBox = classinterface;
  TSplitter = classinterface;
  TO4Splitter = classinterface;
  TO4NotebookPage = classinterface;
  TO4Notebook = classinterface;
  TCustomRadioGroup = classinterface;
  TO4RadioGroup = classinterface;
  TScrollingWinControl = classinterface;
  TControlScrollBar = classinterface;
  TScrollBox = classinterface;
  TO4ScrollBox = classinterface;
  TO4DatePeriod = classinterface;
  TO4DatePeriodNames = classinterface;
  TO4ColorSelector = classinterface;
  TTransLang = classinterface;
  TTimer = classinterface;
  TO4Timer = classinterface;
  TCustomListView = classinterface;
  TO4ListView = classinterface;
  TListColumns = classinterface;
  TIconOptions = classinterface;
  TO4ImageList = classinterface;
  TToolButton = classinterface;
  TO4ToolButton = classinterface;
  TToolWindow = classinterface;
  TToolBar = classinterface;
  TO4ToolBar = classinterface;
  TTabControl = classinterface;
  TO4TabControl = classinterface;
  TProgressBar = classinterface;
  TO4ProgressBar = classinterface;
  TTrackBar = classinterface;
  TO4TrackBar = classinterface;
  TO4DataForm = classinterface;
  TCollectionItem = classinterface;
  TCustomCoolColumn = classinterface;
  TO4CustomCoolColumn = classinterface;
  TO4GridColumn = classinterface;
  TCoolColumnTitle = classinterface;
  TO4DocTableGrid = classinterface;
  TO4DocContentsSource = classinterface;
  TO4DBTreeView = classinterface;
  TDBMemo = classinterface;
  TDataSource = classinterface;
  TDataSet = classinterface;
  TO4DBMemo = classinterface;
  TCustomDBText = classinterface;
  TO4DBText = classinterface;
  TO4TableValueSource = classinterface;
  TStream = classinterface;
  TOwnedCollection = classinterface;
  TClipboard = classinterface;
  TRegistry = classinterface;
  TCustomTeePanel = classinterface;
  TCustomAxisPanel = classinterface;
  TCustomChart = classinterface;
  TChart = classinterface;
  TChartFontObject = classinterface;
  TChartAxis = classinterface;
  TPen = classinterface;
  TChartPen = classinterface;
  TChartAxisPen = classinterface;
  TChartGridPen = classinterface;
  TChartTickPen = classinterface;
  TChartAxisTitle = classinterface;
  TChartWall = classinterface;
  TBrush = classinterface;
  TChartTitle = classinterface;
  TChartBrush = classinterface;
  TChartHiddenPen = classinterface;
  TChartGradient = classinterface;
  TCustomChartLegend = classinterface;
  TList = classinterface;
  TChartSeriesList = classinterface;
  TChartSeries = classinterface;
  TSeriesMarks = classinterface;
  TChartArrowPen = classinterface;
  TCustomSeries = classinterface;
  TLineSeries = classinterface;
  TSeriesPointer = classinterface;
  TChartValueList = classinterface;
  TAreaSeries = classinterface;
  TPointSeries = classinterface;
  TCustomBarSeries = classinterface;
  TBarSeries = classinterface;
  THorizBarSeries = classinterface;
  TCircledSeries = classinterface;
  TPieSeries = classinterface;
  TChartShape = classinterface;
  TFastLineSeries = classinterface;
  TArrowSeries = classinterface;
  TGanttSeries = classinterface;
  TBubbleSeries = classinterface;
  TRBStructure = classinterface;
  TRSOwnedCollection = classinterface;
  TRBTables = classinterface;
  TRBBasePanel = classinterface;
  TRBFrame = classinterface;
  TCustomPrintForm = classinterface;
  TO4PrintForm = classinterface;
  TRBUnitBase = classinterface;
  TRBPage = classinterface;
  TQRPrinterSettings = classinterface;
  TRBPrinterSettings = classinterface;
  TRBCustomBand = classinterface;
  TRBBand = classinterface;
  TRBDetailBand = classinterface;
  TRBBandSize = classinterface;
  TRBMultiBand = classinterface;
  TRBPrintable = classinterface;
  TRBPrintableSize = classinterface;
  TRBCustomLabel = classinterface;
  TRBLabel = classinterface;
  TRBImage = classinterface;
  TRBShape = classinterface;
  TRBSysData = classinterface;
  TRBChart = classinterface;
  TRSCollectionItem = classinterface;
  TRBTable = classinterface;
  TRBTableFields = classinterface;
  TRBTableField = classinterface;
  TCustomXGrid = classinterface;
  TO4XGrid = classinterface;
  TPageNumbering = classinterface;
  TCellRange = classinterface;
  TXGridTools = classinterface;
  TRBCustomBarCode = classinterface;
  TRBBarCode = classinterface;
  TRBCustomCheckBox = classinterface;
  TRBCheckBox = classinterface;
  TRBDBCheckBox = classinterface;
  TRBPageCount = classinterface;

type

  TObject = classinterface
    function  ClassName: String; external;
    procedure Free; external;
  end;

  TPersistent = classinterface(TObject)
    procedure Assign(Source: TPersistent); external;
  end;

  TComponent = classinterface(TPersistent)
    property  ComponentCount: Integer; readonly; external;
    property  Components[Index: Integer]: TComponent; readonly; external;
    function  FindComponent(AName: String): TComponent; external;
    property  Name: String; external;
    property  Owner: TComponent; readonly; external;
    property  Tag: Integer; external;
  end;

  TCustomDataSource = classinterface(TComponent)
    procedure ActionClick(Action: Integer); external;
    function  GetMean: Variant; external;
  end;

  TControl = classinterface(TComponent)
    property  Cursor: Integer; external;
    property  Enabled: Boolean; external;
    procedure GetScreenPos(var X, Y: Integer); external;
    property  Height: Integer; external;
    property  Hint: String; external;
    property  Left: Integer; external;
    property  Parent: TWinControl; external;
    procedure Refresh; external;
    property  Top: Integer; external;
    procedure Update; external;
    property  Width: Integer; external;
  end;

  TWinControl = classinterface(TControl)
    function  ContainsControl(Control: TControl): Boolean; external;
    property  ControlCount: Integer; readonly; external;
    property  Controls[Index: Integer]: TControl; readonly; external;
    property  HelpContext: Integer; external;
    procedure SetFocus; external;
  end;

  TCustomControl = classinterface(TWinControl)
  end;

  TCustomDBImage = classinterface(TCustomControl)
    property  Align: TAlign; external;
    property  BorderStyle: TBorderStyle; external;
    property  Center: Boolean; external;
    property  Color: Integer; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  QuickDraw: Boolean; external;
    property  ReadOnly: Boolean; external;
    property  ShowHint: Boolean; external;
    property  Stretch: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TGraphicsObject = classinterface(TPersistent)
  end;

  TFont = classinterface(TGraphicsObject)
    property  Charset: Integer; external;
    property  Color: Integer; external;
    property  Height: Integer; external;
    property  Name: String; external;
    property  Pitch: TFontPitch; external;
    property  Size: Integer; external;
    property  Style: TFontStyles; external;
  end;

  TMenu = classinterface(TComponent)
    property  Items: TMenuItem; external;
  end;

  TMenuItem = classinterface(TComponent)
    property  Action: TBasicAction; external;
    property  AutoHotkeys: TMenuItemAutoFlag; external;
    property  AutoLineReduction: TMenuItemAutoFlag; external;
    property  Bitmap: TBitmap; external;
    property  Break: TMenuBreak; external;
    property  Caption: String; external;
    property  Checked: Boolean; external;
    property  Default: Boolean; external;
    property  Enabled: Boolean; external;
    property  GroupIndex: Integer; external;
    property  HelpContext: Integer; external;
    property  Hint: String; external;
    property  ImageIndex: Integer; external;
    property  RadioItem: Boolean; external;
    property  ShortCut: Integer; external;
    property  SubMenuImages: TCustomImageList; external;
    property  Visible: Boolean; external;
  end;

  TBasicAction = classinterface(TComponent)
  end;

  TGraphic = classinterface(TPersistent)
  end;

  TBitmap = classinterface(TGraphic)
  end;

  TCustomImageList = classinterface(TComponent)
  end;

  TPopupMenu = classinterface(TMenu)
    property  Alignment: TPopupAlignment; external;
    property  AutoHotkeys: TMenuAutoFlag; external;
    property  AutoLineReduction: TMenuAutoFlag; external;
    property  AutoPopup: Boolean; external;
    property  BiDiMode: TBiDiMode; external;
    property  HelpContext: Integer; external;
    property  Images: TCustomImageList; external;
    property  MenuAnimation: TMenuAnimation; external;
    property  OwnerDraw: Boolean; external;
    property  ParentBiDiMode: Boolean; external;
    property  TrackButton: TTrackButton; external;
  end;

  TO4DBImage = classinterface(TCustomDBImage)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  Center: Boolean; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    procedure CopyToClipboard; external;
    property  Ctl3D: Boolean; external;
    procedure CutToClipboard; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    procedure LoadFromFile(FileName: string); external;
    property  O4FieldName: String; external;
    property  O4MDSource: TCustomDataSource; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    procedure PasteFromClipboard; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    procedure SaveToFile(FileName: string); external;
    property  Stretch: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
  end;

  TSizeConstraints = classinterface(TPersistent)
    property  MaxHeight: Integer; external;
    property  MaxWidth: Integer; external;
    property  MinHeight: Integer; external;
    property  MinWidth: Integer; external;
  end;

  TVPAEvent = classinterface(TPersistent)
    property  EventName: String; external;
  end;

  TCustomEdit = classinterface(TWinControl)
    property  TabStop: Boolean; external;
  end;

  TCustomO4MaskEdit = classinterface(TCustomEdit)
  end;

  TO4CustomEdit = classinterface(TCustomO4MaskEdit)
  end;

  TO4CustomDBEdit = classinterface(TO4CustomEdit)
  end;

  TO4DBEdit = classinterface(TO4CustomDBEdit)
    property  ActionFormName: String; external;
    property  Anchors: TAnchors; external;
    property  AutoSelect: Boolean; external;
    property  AutoSize: Boolean; external;
    property  BorderStyle: TBorderStyle; external;
    property  CharCase: TEditCharCase; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  FastFind: Boolean; external;
    property  FastFindIndex: Integer; external;
    property  FastFindRegion: TFastFindRegion; external;
    property  Font: TFont; external;
    property  Lock: Boolean; external;
    property  MaxLength: Integer; external;
    property  O4FieldName: String; external;
    property  O4MDSource: TCustomDataSource; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PasswordChar: Char; external;
    property  Period: TPeriod; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Text: string; external;
    property  Visible: Boolean; external;
    property  VPAOnActionClear: TVPAEvent; external;
    property  VPAOnActionExecute: TVPAEvent; external;
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnComboClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  VPAOnFastFind: TVPAEvent; external;
    property  VPAOnKeyDown: TVPAEvent; external;
  end;

  TPeriod = classinterface(TPersistent)
    property  Enabled: Boolean; external;
    property  Items: TStrings; external;
    property  StrStartDate: String; external;
    property  Text: String; external;
  end;

  TStrings = classinterface(TPersistent)
    function  Add(S: String): Integer; external;
    function  AddObject(S: String; AObject: TObject): Integer; external;
    procedure AddStrings(Strings: TStrings); external;
    procedure Assign(Source: TPersistent); external;
    procedure BeginUpdate; external;
    procedure Clear; external;
    property  Count: Integer; readonly; external;
    procedure Delete(Index: Integer); external;
    procedure EndUpdate; external;
    function  Equals(Strings: TStrings): Boolean; external;
    procedure Exchange(Index1, Index2: Integer); external;
    function  IndexOf(S: String): Integer; external;
    function  IndexOfName(Name: String): Integer; external;
    function  IndexOfObject(AObject: TObject): Integer; external;
    procedure Insert(Index: Integer; S: String); external;
    procedure InsertObject(Index: Integer; S: String; AObject: TObject); external;
    procedure LoadFromFile(FileName: String); external;
    procedure LoadFromStream(Stream: TStream); external;
    procedure Move(CurIndex, NewIndex: Integer); external;
    property  Names[Index: Integer]: String; readonly; external;
    property  Objects[Index: Integer]: TObject; external;
    procedure SaveToFile(FileName: String); external;
    procedure SaveToStream(Stream: TStream); external;
    property  Strings[Index: Integer]: String; external;
    property  Text: String; external;
    property  Values[Name: String]: String; external;
  end;

  TO4CustomGrid = classinterface(TCustomControl)
    property  TabStop: Boolean; external;
  end;

  TCoolCustomDBGrid = classinterface(TO4CustomGrid)
  end;

  TO4CustomDBGrid = classinterface(TCoolCustomDBGrid)
  end;

  TO4DBGrid = classinterface(TO4CustomDBGrid)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AutoAlign: Boolean; external;
    property  BorderStyle: TBorderStyle; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragDisabled: Boolean; external;
    property  EditAction: Boolean; external;
    procedure EditGridColumn; external;
    property  Enabled: Boolean; external;
    property  FixedColor: Integer; external;
    property  Font: TFont; external;
    function  GetGridParam: String; external;
    property  Images: TImageList; external;
    property  IndicatorWidth: Integer; external;
    property  LineHeight: Integer; external;
    property  O4MDSource: TCustomDataSource; external;
    property  Options: TCoolDBGridOptions; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  PosColumns: TCoolDBGridColumns; external;
    property  ReadOnly: Boolean; external;
    procedure SetAllGridColumn(List: string); external;
    procedure SetGridParam(List: string); external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  TitleFont: TFont; external;
    property  Visible: Boolean; external;
    property  VPAOnActionClear: TVPAEvent; external;
    property  VPAOnActionExecute: TVPAEvent; external;
    property  VPAOnComboClick: TVPAEvent; external;
    property  VPAOnDblClick: TVPAEvent; external;
    property  VPAOnGetImageIndex: TVPAEvent; external;
    property  VPAOnGetRowParams: TVPAEvent; external;
  end;

  TDragImageList = classinterface(TCustomImageList)
  end;

  TImageList = classinterface(TDragImageList)
    property  AllocBy: Integer; external;
    property  BkColor: Integer; external;
    property  BlendColor: Integer; external;
    property  DrawingStyle: TDrawingStyle; external;
    property  Height: Integer; external;
    property  ImageType: TImageType; external;
    property  Masked: Boolean; external;
    property  ShareImages: Boolean; external;
    property  Width: Integer; external;
  end;

  TCollection = classinterface(TPersistent)
    function  Add: TCollectionItem; external;
    procedure BeginUpdate; external;
    procedure Clear; external;
    property  Count: Integer; readonly; external;
    procedure Delete(Index: Integer); external;
    procedure EndUpdate; external;
    function  FindItemID(ID: Integer): TCollectionItem; external;
    function  GetNamePath: String; external;
    function  Insert(Index: Integer): TCollectionItem; external;
    property  ItemClass: Integer; readonly; external;
    property  Items[Index: Integer]: TCollectionItem; external;
  end;

  TCoolDBGridColumns = classinterface(TCollection)
  end;

  TCustomPanel = classinterface(TCustomControl)
  end;

  TO4CustomForm = classinterface(TCustomPanel)
    procedure Close; external;
    property  ModalResult: Integer; external;
    property  Translat: TTranslator; external;
  end;

  TTranslator = classinterface(TPersistent)
    property  ActiveLanguage: Integer; external;
    property  LangDict: TLangDict; external;
    property  Languages: TStringList; external;
    property  ScanedProps: TScanedProps; external;
    property  SwitchByDefault: Boolean; external;
  end;

  TPersistentStoreWidth = classinterface(TPersistent)
  end;

  TBaseLangDict = classinterface(TPersistentStoreWidth)
  end;

  TLangDict = classinterface(TBaseLangDict)
  end;

  TStringList = classinterface(TStrings)
    property  Duplicates: TDuplicates; external;
    function  Find(S: String; var Index: Integer): Boolean; external;
    procedure Sort; external;
    property  Sorted: Boolean; external;
  end;

  TScanedProps = classinterface(TPersistentStoreWidth)
  end;

  TCustomTreeView2 = classinterface(TCustomPanel)
  end;

  TO4CustomTreeView = classinterface(TCustomTreeView2)
    property  Checks: string; external;
    procedure FullCollapse; external;
    procedure FullExpand; external;
  end;

  TCustomNotebook = classinterface(TCustomControl)
    property  ActivePage: String; external;
    property  PageClass[Index: Integer]: TO4NotebookPage; readonly; external;
    property  PageIndex: Integer; external;
    property  Pages: TStrings; external;
  end;

  TO4PopupMenu = classinterface(TPopupMenu)
    property  O4MDSource: TCustomDataSource; external;
    procedure Popup(x, y: Integer); external;
  end;

  TCustomListControl = classinterface(TWinControl)
  end;

  TCustomMultiSelectListControl = classinterface(TCustomListControl)
  end;

  TCustomListBoxEx = classinterface(TCustomMultiSelectListControl)
    property  TabStop: Boolean; external;
  end;

  TCheckListBoxEx = classinterface(TCustomListBoxEx)
    property  Align: TAlign; external;
    property  AllowGrayed: Boolean; external;
    property  Anchors: TAnchors; external;
    property  AutoComplete: Boolean; external;
    property  BevelEdges: TBevelEdges; external;
    property  BevelInner: TBevelCut; external;
    property  BevelKind: TBevelKind; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelWidth: Integer; external;
    property  BiDiMode: TBiDiMode; external;
    property  BorderStyle: TBorderStyle; external;
    property  Color: Integer; external;
    property  Columns: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Flat: Boolean; external;
    property  Font: TFont; external;
    property  ImeMode: TImeMode; external;
    property  ImeName: String; external;
    property  IntegralHeight: Boolean; external;
    property  ItemHeight: Integer; external;
    property  Items: TStrings; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Sorted: Boolean; external;
    property  Style: TListBoxStyle; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  TabWidth: Integer; external;
    property  Visible: Boolean; external;
  end;

  TO4CheckListBox = classinterface(TCheckListBoxEx)
    property  Checked[Index: Integer]: boolean; external;
    property  ItemEnabled[Index: Integer]: boolean; external;
    property  ItemIndex: Integer; external;
    property  State[Index: Integer]: TCheckBoxState; external;
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnClickCheck: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TListItem = classinterface(TPersistent)
    property  Caption: String; external;
    property  SubItems: TStrings; external;
  end;

  TListItems = classinterface(TPersistent)
    function  Add: TListItem; external;
    procedure BeginUpdate; external;
    procedure Clear; external;
    procedure Delete(Index: Integer); external;
    procedure EndUpdate; external;
    function  IndexOf(Value: TListItem): Integer; external;
    function  Insert(Index: Integer): TListItem; external;
  end;

  TCustomTabControl = classinterface(TWinControl)
  end;

  TPageControl = classinterface(TCustomTabControl)
    property  ActivePage: TTabSheet; external;
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  Constraints: TSizeConstraints; external;
    property  DockSite: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HotTrack: Boolean; external;
    property  Images: TCustomImageList; external;
    property  MultiLine: Boolean; external;
    property  OwnerDraw: Boolean; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  RaggedRight: Boolean; external;
    property  ScrollOpposite: Boolean; external;
    property  ShowHint: Boolean; external;
    property  Style: TTabStyle; external;
    property  TabHeight: Integer; external;
    property  TabOrder: Integer; external;
    property  TabPosition: TTabPosition; external;
    property  TabStop: Boolean; external;
    property  TabWidth: Integer; external;
    property  Visible: Boolean; external;
  end;

  TTabSheet = classinterface(TWinControl)
    property  BorderWidth: Integer; external;
    property  Caption: String; external;
    property  Constraints: TSizeConstraints; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  Height: Integer; external;
    property  Highlighted: Boolean; external;
    property  ImageIndex: Integer; external;
    property  Left: Integer; external;
    property  PageIndex: Integer; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabVisible: Boolean; external;
    property  Top: Integer; external;
    property  Visible: Boolean; external;
    property  Width: Integer; external;
  end;

  TO4PageControl = classinterface(TPageControl)
    function  PageCount: integer; external;
    property  Pages[Index: integer]: TTabSheet; readonly; external;
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnChanging: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TCommonDialog = classinterface(TComponent)
    property  Ctl3D: Boolean; external;
    property  HelpContext: Integer; external;
  end;

  TOpenDialog = classinterface(TCommonDialog)
    property  DefaultExt: String; external;
    property  FileName: String; external;
    property  Filter: String; external;
    property  FilterIndex: Integer; external;
    property  InitialDir: String; external;
    property  Options: TOpenOptions; external;
    property  Title: String; external;
  end;

  TO4OpenDialog = classinterface(TOpenDialog)
    function  Execute: boolean; external;
    property  Files: TStrings; external;
  end;

  TSaveDialog = classinterface(TOpenDialog)
  end;

  TO4SaveDialog = classinterface(TSaveDialog)
    function  Execute: boolean; external;
    property  Files: TStrings; external;
  end;

  TOpenPictureDialog = classinterface(TOpenDialog)
    property  Filter: String; external;
  end;

  TO4OpenPictureDialog = classinterface(TOpenPictureDialog)
    function  Execute: boolean; external;
  end;

  TSavePictureDialog = classinterface(TOpenPictureDialog)
  end;

  TO4SavePictureDialog = classinterface(TSavePictureDialog)
    function  Execute: boolean; external;
  end;

  TFontDialog = classinterface(TCommonDialog)
    property  Device: TFontDialogDevice; external;
    property  Font: TFont; external;
    property  MaxFontSize: Integer; external;
    property  MinFontSize: Integer; external;
    property  Options: TFontDialogOptions; external;
  end;

  TO4FontDialog = classinterface(TFontDialog)
    function  Execute: boolean; external;
  end;

  TColorDialog = classinterface(TCommonDialog)
    property  Color: Integer; external;
    property  Ctl3D: Boolean; external;
    property  CustomColors: TStrings; external;
    property  Options: TColorDialogOptions; external;
  end;

  TO4ColorDialog = classinterface(TColorDialog)
    function  Execute: boolean; external;
  end;

  TCustomGrid = classinterface(TCustomControl)
    property  TabStop: Boolean; external;
  end;

  TDrawGrid = classinterface(TCustomGrid)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  BorderStyle: TBorderStyle; external;
    property  ColCount: Integer; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DefaultColWidth: Integer; external;
    property  DefaultDrawing: Boolean; external;
    property  DefaultRowHeight: Integer; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  FixedColor: Integer; external;
    property  FixedCols: Integer; external;
    property  FixedRows: Integer; external;
    property  Font: TFont; external;
    property  GridLineWidth: Integer; external;
    property  Options: TGridOptions; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  RowCount: Integer; external;
    property  ScrollBars: TScrollStyle; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VisibleColCount: Integer; external;
    property  VisibleRowCount: Integer; external;
  end;

  TStringGrid = classinterface(TDrawGrid)
  end;

  TO4StringGrid = classinterface(TStringGrid)
    property  Cells[ACol, ARow: integer]: string; external;
    procedure Clear; external;
    property  Col: integer; external;
    property  Cols[ARow: integer]: TStrings; readonly; external;
    property  Row: integer; external;
    property  Rows[ACol: integer]: TStrings; readonly; external;
    property  VPAOnGetCellProps: TVPAEvent; external;
  end;

  TO4OleControl = classinterface(TWinControl)
  end;

  TO4ActiveX = classinterface(TO4OleControl)
    property  _ClassID: String; external;
    property  _EventIID: String; external;
    property  Align: TAlign; external;
    property  OleObject: Variant; readonly; external;
    property  VPAOnDragDrop: TVPAEvent; external;
    property  VPAOnDragOver: TVPAEvent; external;
    property  VPAOnEndDrag: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  VPAOnInvokeEvent: TVPAEvent; external;
    property  VPAOnStartDrag: TVPAEvent; external;
  end;

  TO4Form = classinterface(TO4CustomForm)
    property  ActiveControl: TWinControl; external;
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelWidth: Integer; external;
    property  BorderStyle: TO4BorderStyle; external;
    property  BorderWidth: Integer; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HelpFile: String; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClose: TVPAEvent; external;
    property  VPAOnCloseQuery: TVPAEvent; external;
    property  VPAOnExecProc: TVPAEvent; external;
    property  VPAOnExecute: TVPAEvent; external;
    property  VPAOnOpen: TVPAEvent; external;
    property  VPAOnShow: TVPAEvent; external;
  end;

  TO4NoComponentsForm = classinterface(TO4CustomForm)
  end;

  TO4MenuForm = classinterface(TO4CustomForm)
    property  VPAOnClose: TVPAEvent; external;
    property  VPAOnCloseQuery: TVPAEvent; external;
    property  VPAOnOpen: TVPAEvent; external;
    property  VPAOnShow: TVPAEvent; external;
  end;

  TCustomSidePanel = classinterface(TCustomPanel)
  end;

  TO4Panel = classinterface(TCustomSidePanel)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelSides: TSides; external;
    property  BevelWidth: Integer; external;
    property  BorderColor: Integer; external;
    property  BorderSides: TSides; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnDblClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TO4Edit = classinterface(TO4CustomEdit)
    property  Anchors: TAnchors; external;
    property  AutoSelect: Boolean; external;
    property  AutoSize: Boolean; external;
    property  BorderStyle: TBorderStyle; external;
    property  CharCase: TEditCharCase; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  EditMask: String; external;
    property  EditStyle: TFieldEditStyle; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HideSelection: Boolean; external;
    property  ItemIndex: Integer; external;
    property  Items: TStrings; external;
    property  MaxLength: Integer; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PasswordChar: Char; external;
    property  Period: TPeriod; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Text: String; external;
    property  Visible: Boolean; external;
    property  VPAOnActionClear: TVPAEvent; external;
    property  VPAOnActionExecute: TVPAEvent; external;
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnComboClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  VPAOnKeyDown: TVPAEvent; external;
    property  VPAOnKeyPress: TVPAEvent; external;
    property  VPAOnKeyUp: TVPAEvent; external;
  end;

  TCustomMemo = classinterface(TCustomEdit)
  end;

  TO4Memo = classinterface(TCustomMemo)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  BorderStyle: TBorderStyle; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HideSelection: Boolean; external;
    property  Lines: TStrings; external;
    property  MaxLength: Integer; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  ScrollBars: TScrollStyle; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Text: String; external;
    property  Visible: Boolean; external;
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  WantReturns: Boolean; external;
    property  WantTabs: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

  TO4MenuItem = classinterface(TMenuItem)
    property  GridParamMenuParent: Boolean; external;
    property  O4Action: TO4Actions; external;
    property  SortMenuParent: Boolean; external;
    property  VPABeforeActionClick: TVPAEvent; external;
    property  VPAOnClick: TVPAEvent; external;
  end;

  TButtonControl = classinterface(TWinControl)
  end;

  TButton = classinterface(TButtonControl)
    property  Action: TBasicAction; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  Cancel: Boolean; external;
    property  Caption: String; external;
    property  Constraints: TSizeConstraints; external;
    property  Default: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ModalResult: Integer; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TCustomExButton = classinterface(TButton)
  end;

  TExButton = classinterface(TCustomExButton)
  end;

  TCustomFlatButton2 = classinterface(TExButton)
  end;

  TFlatButton = classinterface(TCustomFlatButton2)
    property  Alignment: TAlignment; external;
    property  Color: Integer; external;
    property  Flat: Boolean; external;
    property  Layout: TTextLayout; external;
    property  WordWrap: Boolean; external;
  end;

  TO4Button = classinterface(TFlatButton)
    property  O4Action: TO4Actions; external;
    property  O4MDSource: TO4DataSource; external;
    property  VPABeforeActionClick: TVPAEvent; external;
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TO4DataSource = classinterface(TCustomDataSource)
    property  AfterScrollInterval: Integer; external;
    property  AfterScrollLock: Boolean; external;
    property  VPAAfterDelete: TVPAEvent; external;
    property  VPAAfterMove: TVPAEvent; external;
    property  VPAAfterPost: TVPAEvent; external;
    property  VPAAfterScroll: TVPAEvent; external;
    property  VPABeforeDelete: TVPAEvent; external;
    property  VPABeforeMove: TVPAEvent; external;
    property  VPABeforeOpen: TVPAEvent; external;
    property  VPADataRefreshed: TVPAEvent; external;
    property  VPAOnAppend: TVPAEvent; external;
    property  VPAOnEdit: TVPAEvent; external;
    property  VPAOnFieldChange: TVPAEvent; external;
    property  VPAOnLevelChanged: TVPAEvent; external;
    property  VPAOnSelect: TVPAEvent; external;
    property  VPAOnValidate: TVPAEvent; external;
    property  VPATimedAfterScroll: TVPAEvent; external;
  end;

  TGraphicControl = classinterface(TControl)
  end;

  TO4Image = classinterface(TGraphicControl)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  Constraints: TSizeConstraints; external;
    property  Enabled: Boolean; external;
    property  Layout: TTextLayout; external;
    property  ParentShowHint: Boolean; external;
    property  Picture: TPicture; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Stretch: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
  end;

  TPicture = classinterface(TPersistent)
    procedure LoadFromFile(FileName: string); external;
    procedure SaveToFile(FileName: string); external;
  end;

  TO4LinkImage = classinterface(TGraphicControl)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  Constraints: TSizeConstraints; external;
    property  Enabled: Boolean; external;
    property  Layout: TTextLayout; external;
    property  ParentShowHint: Boolean; external;
    property  Picture: TImage; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Stretch: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
  end;

  TImage = classinterface(TGraphicControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  Center: Boolean; external;
    property  Constraints: TSizeConstraints; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  IncrementalDisplay: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  Picture: TPicture; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Stretch: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TCustomLabel = classinterface(TGraphicControl)
  end;

  TO4Label = classinterface(TCustomLabel)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Enabled: Boolean; external;
    property  FocusControl: TWinControl; external;
    property  Font: TFont; external;
    property  Layout: TTextLayout; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowAccelChar: Boolean; external;
    property  ShowHint: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

  TTabSet = classinterface(TCustomControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AutoScroll: Boolean; external;
    property  BackgroundColor: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  DitherBackground: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  EndMargin: Integer; external;
    property  Font: TFont; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  SelectedColor: Integer; external;
    property  ShowHint: Boolean; external;
    property  StartMargin: Integer; external;
    property  Style: TTabStyle; external;
    property  TabHeight: Integer; external;
    property  TabIndex: Integer; external;
    property  Tabs: TStrings; external;
    property  UnselectedColor: Integer; external;
    property  Visible: Boolean; external;
    property  VisibleTabs: Integer; external;
  end;

  TO4TabSet = classinterface(TTabSet)
    property  SecondSelect: Integer; external;
    property  SecondSelectFont: TFont; external;
    property  VPAOnChange: TVPAEvent; external;
  end;

  TCustomGroupBox = classinterface(TCustomControl)
  end;

  TO4GroupBox = classinterface(TCustomGroupBox)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TRadioButton = classinterface(TButtonControl)
    property  Action: TBasicAction; external;
    property  Alignment: TLeftRight; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  Caption: String; external;
    property  Checked: Boolean; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TO4RadioButton = classinterface(TRadioButton)
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  WordWrap: Boolean; external;
  end;

  TCustomCheckBox = classinterface(TButtonControl)
    property  TabStop: Boolean; external;
  end;

  TCheckBox = classinterface(TCustomCheckBox)
    property  Action: TBasicAction; external;
    property  Alignment: TLeftRight; external;
    property  AllowGrayed: Boolean; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  Caption: String; external;
    property  Checked: Boolean; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  State: TCheckBoxState; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TO4CheckBox = classinterface(TCheckBox)
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
    property  WordWrap: Boolean; external;
  end;

  TSplitter = classinterface(TGraphicControl)
    property  Align: TAlign; external;
    property  AutoSnap: Boolean; external;
    property  Beveled: Boolean; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  MinSize: Integer; external;
    property  ParentColor: Boolean; external;
    property  ResizeStyle: TResizeStyle; external;
    property  Visible: Boolean; external;
  end;

  TO4Splitter = classinterface(TSplitter)
    property  Transparent: Boolean; external;
  end;

  TO4NotebookPage = classinterface(TCustomControl)
    property  Caption: String; external;
    property  Height: Integer; external;
    property  TabOrder: Integer; external;
    property  Visible: Boolean; external;
    property  Width: Integer; external;
  end;

  TO4Notebook = classinterface(TCustomNotebook)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TCustomRadioGroup = classinterface(TCustomGroupBox)
  end;

  TO4RadioGroup = classinterface(TCustomRadioGroup)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Columns: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ItemIndex: Integer; external;
    property  Items: TStrings; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TScrollingWinControl = classinterface(TWinControl)
    property  HorzScrollBar: TControlScrollBar; external;
    property  VertScrollBar: TControlScrollBar; external;
  end;

  TControlScrollBar = classinterface(TPersistent)
    property  ButtonSize: Integer; external;
    property  Color: Integer; external;
    property  Increment: Integer; external;
    property  Margin: Integer; external;
    property  ParentColor: Boolean; external;
    property  Position: Integer; external;
    property  Range: Integer; external;
    property  Size: Integer; external;
    property  Smooth: Boolean; external;
    property  Style: TScrollBarStyle; external;
    property  ThumbSize: Integer; external;
    property  Tracking: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TScrollBox = classinterface(TScrollingWinControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AutoScroll: Boolean; external;
    property  AutoSize: Boolean; external;
    property  BiDiMode: TBiDiMode; external;
    property  BorderStyle: TBorderStyle; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DockSite: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TO4ScrollBox = classinterface(TScrollBox)
  end;

  TO4DatePeriod = classinterface(TCustomPanel)
    property  Align: TAlign; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelWidth: Integer; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  CaptionFrom: String; external;
    property  CaptionTo: String; external;
    property  Color: Integer; external;
    property  ComboListRight: Boolean; external;
    property  Ctl3D: Boolean; external;
    property  DateFrom: Extended; external;
    property  DateTo: Extended; external;
    property  DragCursor: Integer; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  FullRepaint: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PeriodIndex: Integer; external;
    property  PeriodNames: TO4DatePeriodNames; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnChange: TVPAEvent; external;
  end;

  TO4DatePeriodNames = classinterface(TPersistent)
    property  BackMonth: String; external;
    property  BackWeek: String; external;
    property  CurrentHalfYear: String; external;
    property  CurrentMonth: String; external;
    property  CurrentQuart: String; external;
    property  CurrentWeek: String; external;
    property  CurrentYear: String; external;
  end;

  TO4ColorSelector = classinterface(TCustomSidePanel)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelSides: TSides; external;
    property  BevelWidth: Integer; external;
    property  BorderColor: Integer; external;
    property  BorderSides: TSides; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  BtnCaption: String; external;
    property  BtnFlat: Boolean; external;
    property  BtnWidth: Integer; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnChange: TVPAEvent; external;
  end;

  TTransLang = classinterface(TComponent)
    property  ActivateKind: TActivateKindType; external;
    property  ActiveLanguage: Integer; external;
    property  AutoActivate: Boolean; external;
    property  LangDict: TLangDict; external;
    property  Languages: TStringList; external;
    property  ScanedProps: TScanedProps; external;
  end;

  TTimer = classinterface(TComponent)
    property  Enabled: Boolean; external;
    property  Interval: Integer; external;
  end;

  TO4Timer = classinterface(TTimer)
    property  VPAOnTimer: TVPAEvent; external;
  end;

  TCustomListView = classinterface(TWinControl)
  end;

  TO4ListView = classinterface(TCustomListView)
    property  Align: TAlign; external;
    property  AllocBy: Integer; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  Checkboxes: Boolean; external;
    property  Color: Integer; external;
    property  ColumnClick: Boolean; external;
    property  Columns: TListColumns; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  FlatScrollBars: Boolean; external;
    property  Font: TFont; external;
    property  FullDrag: Boolean; external;
    property  GridLines: Boolean; external;
    property  HideSelection: Boolean; external;
    property  HotTrack: Boolean; external;
    property  HotTrackStyles: TListHotTrackStyles; external;
    property  HoverTime: Integer; external;
    property  IconOptions: TIconOptions; external;
    property  Items: TListItems; external;
    property  LargeImages: TCustomImageList; external;
    property  MultiSelect: Boolean; external;
    property  OwnerData: Boolean; external;
    property  OwnerDraw: Boolean; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  RowSelect: Boolean; external;
    property  ShowColumnHeaders: Boolean; external;
    property  ShowHint: Boolean; external;
    property  ShowWorkAreas: Boolean; external;
    property  SmallImages: TCustomImageList; external;
    property  SortType: TSortType; external;
    property  StateImages: TCustomImageList; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  ViewStyle: TViewStyle; external;
    property  Visible: Boolean; external;
    property  VPAOnClick: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TListColumns = classinterface(TCollection)
  end;

  TIconOptions = classinterface(TPersistent)
    property  Arrangement: TIconArrangement; external;
    property  AutoArrange: Boolean; external;
    property  WrapText: Boolean; external;
  end;

  TO4ImageList = classinterface(TCustomImageList)
    property  BkColor: Integer; external;
    property  BlendColor: Integer; external;
    property  DrawingStyle: TDrawingStyle; external;
    property  Height: Integer; external;
    property  ImageType: TImageType; external;
    property  Masked: Boolean; external;
    property  Width: Integer; external;
  end;

  TToolButton = classinterface(TGraphicControl)
    property  Action: TBasicAction; external;
    property  AllowAllUp: Boolean; external;
    property  AutoSize: Boolean; external;
    property  Caption: String; external;
    property  Down: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  DropdownMenu: TPopupMenu; external;
    property  Enabled: Boolean; external;
    property  Grouped: Boolean; external;
    property  Height: Integer; external;
    property  ImageIndex: Integer; external;
    property  Indeterminate: Boolean; external;
    property  Marked: Boolean; external;
    property  MenuItem: TMenuItem; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Style: TToolButtonStyle; external;
    property  Visible: Boolean; external;
    property  Width: Integer; external;
    property  Wrap: Boolean; external;
  end;

  TO4ToolButton = classinterface(TToolButton)
    property  O4Action: TO4Actions; external;
    property  VPABeforeActionClick: TVPAEvent; external;
    property  VPAOnClick: TVPAEvent; external;
  end;

  TToolWindow = classinterface(TWinControl)
  end;

  TToolBar = classinterface(TToolWindow)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  BorderWidth: Integer; external;
    property  ButtonHeight: Integer; external;
    property  ButtonWidth: Integer; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DisabledImages: TCustomImageList; external;
    property  DockSite: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  EdgeBorders: TEdgeBorders; external;
    property  EdgeInner: TEdgeStyle; external;
    property  EdgeOuter: TEdgeStyle; external;
    property  Enabled: Boolean; external;
    property  Flat: Boolean; external;
    property  Font: TFont; external;
    property  Height: Integer; external;
    property  HotImages: TCustomImageList; external;
    property  Images: TCustomImageList; external;
    property  Indent: Integer; external;
    property  List: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowCaptions: Boolean; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  Wrapable: Boolean; external;
  end;

  TO4ToolBar = classinterface(TToolBar)
    property  O4MDSource: TCustomDataSource; external;
  end;

  TTabControl = classinterface(TCustomTabControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BiDiMode: TBiDiMode; external;
    property  Constraints: TSizeConstraints; external;
    property  DockSite: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HotTrack: Boolean; external;
    property  Images: TCustomImageList; external;
    property  MultiLine: Boolean; external;
    property  MultiSelect: Boolean; external;
    property  OwnerDraw: Boolean; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  RaggedRight: Boolean; external;
    property  ScrollOpposite: Boolean; external;
    property  ShowHint: Boolean; external;
    property  Style: TTabStyle; external;
    property  TabHeight: Integer; external;
    property  TabIndex: Integer; external;
    property  TabOrder: Integer; external;
    property  TabPosition: TTabPosition; external;
    property  Tabs: TStrings; external;
    property  TabStop: Boolean; external;
    property  TabWidth: Integer; external;
    property  Visible: Boolean; external;
  end;

  TO4TabControl = classinterface(TTabControl)
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnChanging: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TProgressBar = classinterface(TWinControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BorderWidth: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Hint: String; external;
    property  Max: Integer; external;
    property  Min: Integer; external;
    property  Orientation: TProgressBarOrientation; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  Position: Integer; external;
    property  ShowHint: Boolean; external;
    property  Smooth: Boolean; external;
    property  Step: Integer; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TO4ProgressBar = classinterface(TProgressBar)
  end;

  TTrackBar = classinterface(TWinControl)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BorderWidth: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Frequency: Integer; external;
    property  LineSize: Integer; external;
    property  Max: Integer; external;
    property  Min: Integer; external;
    property  Orientation: TTrackBarOrientation; external;
    property  PageSize: Integer; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  Position: Integer; external;
    property  SelEnd: Integer; external;
    property  SelStart: Integer; external;
    property  ShowHint: Boolean; external;
    property  SliderVisible: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  ThumbLength: Integer; external;
    property  TickMarks: TTickMark; external;
    property  TickStyle: TTickStyle; external;
    property  Visible: Boolean; external;
  end;

  TO4TrackBar = classinterface(TTrackBar)
    property  VPAOnChange: TVPAEvent; external;
  end;

  TO4DataForm = classinterface(TO4CustomForm)
    property  ActiveControl: TWinControl; external;
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelWidth: Integer; external;
    property  BorderStyle: TO4BorderStyle; external;
    property  BorderWidth: Integer; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HelpFile: String; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnClose: TVPAEvent; external;
    property  VPAOnCloseQuery: TVPAEvent; external;
    property  VPAOnExecProc: TVPAEvent; external;
    property  VPAOnExecute: TVPAEvent; external;
    property  VPAOnOpen: TVPAEvent; external;
    property  VPAOnShow: TVPAEvent; external;
  end;

  TCollectionItem = classinterface(TPersistent)
    property  Collection: TCollection; external;
    property  DisplayName: String; external;
    function  GetNamePath: String; external;
    property  ID: Integer; readonly; external;
    property  Index: Integer; external;
  end;

  TCustomCoolColumn = classinterface(TCollectionItem)
  end;

  TO4CustomCoolColumn = classinterface(TCustomCoolColumn)
  end;

  TO4GridColumn = classinterface(TO4CustomCoolColumn)
    property  Alignment: TAlignment; external;
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  O4FieldName: String; external;
    property  Period: TPeriod; external;
    property  PopupMenu: TPopupMenu; external;
    property  PosType: TCoolColumnPosType; external;
    property  ReadOnly: Boolean; external;
    property  Title: TCoolColumnTitle; external;
    property  Visible: Boolean; external;
    property  Width: Integer; external;
  end;

  TCoolColumnTitle = classinterface(TPersistent)
    property  Alignment: TAlignment; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  Layout: TTextLayout; external;
  end;

  TO4DocTableGrid = classinterface(TO4DBGrid)
    property  O4MDSource: TO4DocContentsSource; external;
  end;

  TO4DocContentsSource = classinterface(TCustomDataSource)
    property  AfterScrollInterval: Integer; external;
    property  AfterScrollLock: Boolean; external;
    property  VPAAfterDelete: TVPAEvent; external;
    property  VPAAfterPost: TVPAEvent; external;
    property  VPAAfterScroll: TVPAEvent; external;
    property  VPABeforeDelete: TVPAEvent; external;
    property  VPABeforeOpen: TVPAEvent; external;
    property  VPAOnAppend: TVPAEvent; external;
    property  VPAOnDrop: TVPAEvent; external;
    property  VPAOnEdit: TVPAEvent; external;
    property  VPAOnEndDrop: TVPAEvent; external;
    property  VPAOnFieldChange: TVPAEvent; external;
    property  VPAOnStartDrop: TVPAEvent; external;
    property  VPAOnValidate: TVPAEvent; external;
    property  VPATimedAfterScroll: TVPAEvent; external;
  end;

  TO4DBTreeView = classinterface(TO4CustomTreeView)
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  AskConfirmToDragDrop: Boolean; external;
    property  AutoExpand: Boolean; external;
    property  BaseImageIndex: Integer; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  ChangeDelay: Integer; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DragCursor: Integer; external;
    property  DragEnabled: Boolean; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  HideSelection: Boolean; external;
    property  HotTrack: Boolean; external;
    property  Images: TCustomImageList; external;
    property  Indent: Integer; external;
    property  O4MDSource: TO4DataSource; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  RightClickSelect: Boolean; external;
    property  RowSelect: Boolean; external;
    property  ShowButtons: Boolean; external;
    property  ShowHint: Boolean; external;
    property  ShowLines: Boolean; external;
    property  ShowRoot: Boolean; external;
    property  SortType: TSortType; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  ToolTips: Boolean; external;
    property  UseChecks: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TDBMemo = classinterface(TCustomMemo)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoDisplay: Boolean; external;
    property  BiDiMode: TBiDiMode; external;
    property  BorderStyle: TBorderStyle; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    property  DataField: String; external;
    property  DataSource: TDataSource; external;
    property  DragCursor: Integer; external;
    property  DragKind: TDragKind; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  ImeMode: TImeMode; external;
    property  ImeName: String; external;
    property  MaxLength: Integer; external;
    property  ParentBiDiMode: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ReadOnly: Boolean; external;
    property  ScrollBars: TScrollStyle; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  WantTabs: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

  TDataSource = classinterface(TComponent)
    property  AutoEdit: Boolean; external;
    property  DataSet: TDataSet; external;
    property  Enabled: Boolean; external;
  end;

  TDataSet = classinterface(TComponent)
  end;

  TO4DBMemo = classinterface(TDBMemo)
    property  O4FieldName: String; external;
    property  O4MDSource: TCustomDataSource; external;
    property  VPAOnChange: TVPAEvent; external;
    property  VPAOnEnter: TVPAEvent; external;
    property  VPAOnExit: TVPAEvent; external;
  end;

  TCustomDBText = classinterface(TCustomLabel)
  end;

  TO4DBText = classinterface(TCustomDBText)
    property  Align: TAlign; external;
    property  Alignment: TAlignment; external;
    property  Anchors: TAnchors; external;
    property  AutoSize: Boolean; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Enabled: Boolean; external;
    property  Font: TFont; external;
    property  O4FieldName: String; external;
    property  O4MDSource: TCustomDataSource; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  ShowHint: Boolean; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

  TO4TableValueSource = classinterface(TCustomDataSource)
    property  AfterScrollInterval: Integer; external;
    property  AfterScrollLock: Boolean; external;
    property  VPAAfterDelete: TVPAEvent; external;
    property  VPAAfterMove: TVPAEvent; external;
    property  VPAAfterPost: TVPAEvent; external;
    property  VPAAfterScroll: TVPAEvent; external;
    property  VPABeforeDelete: TVPAEvent; external;
    property  VPABeforeMove: TVPAEvent; external;
    property  VPABeforeOpen: TVPAEvent; external;
    property  VPAOnAppend: TVPAEvent; external;
    property  VPAOnEdit: TVPAEvent; external;
    property  VPAOnFieldChange: TVPAEvent; external;
    property  VPAOnValidate: TVPAEvent; external;
    property  VPATimedAfterScroll: TVPAEvent; external;
  end;

  TStream = classinterface(TObject)
  end;

  TOwnedCollection = classinterface(TCollection)
  end;

  TClipboard = classinterface(TPersistent)
    property  AsText: String; external;
  end;

  TRegistry = classinterface(TObject)
    procedure CloseKey; external;
    function  CreateKey(const Key: String): Boolean; external;
    function  DeleteKey(const Key: String): Boolean; external;
    function  OpenKey(const Key: String; CanCreate: Boolean): Boolean; external;
    function  ReadFloat(const Name: String): Double; external;
    function  ReadInteger(const Name: String): Integer; external;
    function  ReadString(const Name: String): String; external;
    property  RootKey: HKEY; writeonly; external;
    procedure WriteFloat(const Name: string; Value: Double); external;
    procedure WriteInteger(const Name: string; Value: Integer); external;
    procedure WriteString(const Name: string; Value: String); external;
  end;

  TCustomTeePanel = classinterface(TCustomPanel)
  end;

  TCustomAxisPanel = classinterface(TCustomTeePanel)
  end;

  TCustomChart = classinterface(TCustomAxisPanel)
  end;

  TChart = classinterface(TCustomChart)
    property  Align: TAlign; external;
    property  AllowPanning: TPanningMode; external;
    property  AllowZoom: Boolean; external;
    property  AnimatedZoom: Boolean; external;
    property  AnimatedZoomSteps: Integer; external;
    property  AxisVisible: Boolean; external;
    property  BackColor: Integer; external;
    property  BackImage: TPicture; external;
    property  BackImageInside: Boolean; external;
    property  BackImageMode: TTeeBackImageMode; external;
    property  BevelInner: TBevelCut; external;
    property  BevelOuter: TBevelCut; external;
    property  BevelWidth: Integer; external;
    property  BorderStyle: TBorderStyle; external;
    property  BorderWidth: Integer; external;
    property  BottomAxis: TChartAxis; external;
    property  BottomWall: TChartWall; external;
    property  Chart3DPercent: Integer; external;
    property  ClipPoints: Boolean; external;
    property  Color: Integer; external;
    property  DragCursor: Integer; external;
    property  DragMode: TDragMode; external;
    property  Enabled: Boolean; external;
    property  Foot: TChartTitle; external;
    property  Frame: TChartPen; external;
    property  Gradient: TChartGradient; external;
    property  LeftAxis: TChartAxis; external;
    property  LeftWall: TChartWall; external;
    property  Legend: TCustomChartLegend; external;
    property  MarginBottom: Integer; external;
    property  MarginLeft: Integer; external;
    property  MarginRight: Integer; external;
    property  MarginTop: Integer; external;
    property  MaxPointsPerPage: Integer; external;
    property  Monochrome: Boolean; external;
    property  Page: Integer; external;
    property  ParentColor: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    property  RightAxis: TChartAxis; external;
    procedure SaveToBitmapFile(FileName: String); external;
    procedure SaveToMetafile(FileName: String); external;
    procedure SaveToMetafileEnh(FileName: String); external;
    property  ScaleLastPage: Boolean; external;
    property  SeriesList: TChartSeriesList; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Title: TChartTitle; external;
    property  TopAxis: TChartAxis; external;
    property  View3D: Boolean; external;
    property  View3DWalls: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TChartFontObject = classinterface(TPersistent)
  end;

  TChartAxis = classinterface(TChartFontObject)
    property  Automatic: Boolean; external;
    property  AutomaticMaximum: Boolean; external;
    property  AutomaticMinimum: Boolean; external;
    property  Axis: TChartAxisPen; external;
    property  AxisValuesFormat: String; external;
    property  DateTimeFormat: String; external;
    property  ExactDateTime: Boolean; external;
    property  Grid: TChartGridPen; external;
    property  Increment: Extended; external;
    property  Inverted: Boolean; external;
    property  Labels: Boolean; external;
    property  LabelsAngle: Integer; external;
    property  LabelsFont: TFont; external;
    property  LabelsOnAxis: Boolean; external;
    property  LabelsSeparation: Integer; external;
    property  LabelsSize: Integer; external;
    property  LabelStyle: TAxisLabelStyle; external;
    property  Logarithmic: Boolean; external;
    property  Maximum: Extended; external;
    property  Minimum: Extended; external;
    property  MinorTickCount: Integer; external;
    property  MinorTickLength: Integer; external;
    property  MinorTicks: TChartTickPen; external;
    property  RoundFirstLabel: Boolean; external;
    property  TickInnerLength: Integer; external;
    property  TickLength: Integer; external;
    property  TickOnLabelsOnly: Boolean; external;
    property  Ticks: TChartTickPen; external;
    property  TicksInner: TChartTickPen; external;
    property  Title: TChartAxisTitle; external;
    property  TitleSize: Integer; external;
    property  Visible: Boolean; external;
  end;

  TPen = classinterface(TGraphicsObject)
    property  Color: Integer; external;
    property  Mode: TPenMode; external;
    property  Style: TPenStyle; external;
    property  Width: Integer; external;
  end;

  TChartPen = classinterface(TPen)
    property  Visible: Boolean; external;
  end;

  TChartAxisPen = classinterface(TChartPen)
    property  Width: Integer; external;
  end;

  TChartGridPen = classinterface(TChartPen)
    property  Color: Integer; external;
    property  Style: TPenStyle; external;
  end;

  TChartTickPen = classinterface(TChartPen)
    property  Color: Integer; external;
  end;

  TChartAxisTitle = classinterface(TChartFontObject)
    property  Angle: Integer; external;
    property  Caption: String; external;
    property  Font: TFont; external;
  end;

  TChartWall = classinterface(TPersistent)
    property  Brush: TBrush; external;
    property  Color: Integer; external;
    property  Pen: TChartPen; external;
    property  Size: Integer; external;
  end;

  TBrush = classinterface(TGraphicsObject)
    property  Color: Integer; external;
    property  Style: TBrushStyle; external;
  end;

  TChartTitle = classinterface(TChartFontObject)
    property  AdjustFrame: Boolean; external;
    property  Alignment: TAlignment; external;
    property  Brush: TChartBrush; external;
    property  Font: TFont; external;
    property  Frame: TChartHiddenPen; external;
    property  Text: TStrings; external;
    property  Visible: Boolean; external;
  end;

  TChartBrush = classinterface(TBrush)
    property  Color: Integer; external;
  end;

  TChartHiddenPen = classinterface(TChartPen)
    property  Visible: Boolean; external;
  end;

  TChartGradient = classinterface(TPersistent)
    property  Direction: TGradientDirection; external;
    property  EndColor: Integer; external;
    property  StartColor: Integer; external;
    property  Visible: Boolean; external;
  end;

  TCustomChartLegend = classinterface(TChartFontObject)
    property  Alignment: TLegendAlignment; external;
    property  Color: Integer; external;
    property  ColorWidth: Integer; external;
    property  FirstValue: Integer; external;
    property  Font: TFont; external;
    property  Frame: TChartPen; external;
    property  HorizMargin: Integer; external;
    property  Inverted: Boolean; external;
    property  LegendStyle: TLegendStyle; external;
    property  ResizeChart: Boolean; external;
    property  TextStyle: TLegendTextStyle; external;
    property  TopPos: Integer; external;
    property  VertMargin: Integer; external;
    property  Visible: Boolean; external;
  end;

  TList = classinterface(TObject)
  end;

  TChartSeriesList = classinterface(TList)
    function  AddSeries(ChartSeriesType: TO4ChartSeriesType): TChartSeries; external;
    property  Count: Integer; readonly; external;
    property  Series[Index: Integer]: TChartSeries; readonly; external;
  end;

  TChartSeries = classinterface(TComponent)
    property  Active: Boolean; external;
    function  Add(aValue: Double; aLabel: String; aColor: TColor): Integer; external;
    function  AddNull(aLabel: String): Integer; external;
    function  AddX(aXValue: Double; aYLabel: String; aColor: TColor): Integer; external;
    function  AddXY(aXValue, aYValue: Double; aXLabel: String; aColor: TColor): Integer; external;
    function  AddY(aYValue: Double; aXLabel: String; aColor: TColor): Integer; external;
    procedure Clear; external;
    property  ColorEachPoint: Boolean; external;
    property  ColorSource: String; external;
    property  Count: Integer; readonly; external;
    property  Cursor: Integer; external;
    property  DataSource: TComponent; external;
    procedure Delete(ValueIndex: Integer); external;
    function  IsNull(ValueIndex: Integer): Boolean; external;
    property  Marks: TSeriesMarks; external;
    function  MaxXValue: Double; external;
    function  MaxYValue: Double; external;
    function  MinXValue: Double; external;
    function  MinYValue: Double; external;
    property  ParentChart: TCustomAxisPanel; external;
    property  PercentFormat: String; external;
    property  ShowInLegend: Boolean; external;
    property  Title: String; external;
    property  ValueColor[Index: Integer]: TColor; external;
    property  ValueFormat: String; external;
    property  ValueMarkText[Index: Integer]: String; readonly; external;
    property  XLabel[Index: Integer]: String; external;
    property  XLabelsSource: String; external;
    property  XValue[Index: Integer]: Double; external;
    property  XValues: TChartValueList; readonly; external;
    property  YValue[Index: Integer]: Double; external;
    property  YValues: TChartValueList; readonly; external;
  end;

  TSeriesMarks = classinterface(TPersistent)
    property  Arrow: TChartArrowPen; external;
    property  ArrowLength: Integer; external;
    property  BackColor: Integer; external;
    property  Clip: Boolean; external;
    property  Font: TFont; external;
    property  Frame: TChartPen; external;
    property  Style: TSeriesMarksStyle; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TChartArrowPen = classinterface(TChartPen)
    property  Color: Integer; external;
  end;

  TCustomSeries = classinterface(TChartSeries)
    property  HorizAxis: THorizAxis; external;
    property  SeriesColor: Integer; external;
    property  VertAxis: TVertAxis; external;
  end;

  TLineSeries = classinterface(TCustomSeries)
    property  InvertedStairs: Boolean; external;
    property  LineBrush: TBrushStyle; external;
    property  LinePen: TChartPen; external;
    property  Pointer: TSeriesPointer; external;
    property  Stairs: Boolean; external;
    property  XValues: TChartValueList; external;
    property  YValues: TChartValueList; external;
  end;

  TSeriesPointer = classinterface(TPersistent)
    property  Brush: TChartBrush; external;
    property  Draw3D: Boolean; external;
    property  HorizSize: Integer; external;
    property  InflateMargins: Boolean; external;
    property  Pen: TChartPen; external;
    property  Style: TSeriesPointerStyle; external;
    property  VertSize: Integer; external;
    property  Visible: Boolean; external;
  end;

  TChartValueList = classinterface(TPersistent)
    property  Count: Integer; readonly; external;
    property  DateTime: Boolean; external;
    property  Multiplier: Extended; external;
    property  Name: String; external;
    property  Order: TChartListOrder; external;
    property  Val[Index: Integer]: Double; external;
    property  ValueSource: String; external;
  end;

  TAreaSeries = classinterface(TCustomSeries)
    property  AreaBrush: TBrushStyle; external;
    property  AreaColor: Integer; external;
    property  AreaLinesPen: TChartPen; external;
    property  DrawArea: Boolean; external;
    property  InvertedStairs: Boolean; external;
    property  LinePen: TChartPen; external;
    property  MultiArea: TMultiArea; external;
    property  Stairs: Boolean; external;
    property  XValues: TChartValueList; external;
    property  YValues: TChartValueList; external;
  end;

  TPointSeries = classinterface(TCustomSeries)
    property  Pointer: TSeriesPointer; external;
    property  XValues: TChartValueList; external;
    property  YValues: TChartValueList; external;
  end;

  TCustomBarSeries = classinterface(TChartSeries)
    property  AutoMarkPosition: Boolean; external;
    property  BarBrush: TChartBrush; external;
    property  BarPen: TChartPen; external;
    property  BarStyle: TBarStyle; external;
    property  BarWidthPercent: Integer; external;
    property  Dark3D: Boolean; external;
    property  HorizAxis: THorizAxis; external;
    property  MultiBar: TMultiBar; external;
    property  OffsetPercent: Integer; external;
    property  SeriesColor: Integer; external;
    property  SideMargins: Boolean; external;
    property  UseYOrigin: Boolean; external;
    property  VertAxis: TVertAxis; external;
    property  XValues: TChartValueList; external;
    property  YOrigin: Extended; external;
    property  YValues: TChartValueList; external;
  end;

  TBarSeries = classinterface(TCustomBarSeries)
    property  CustomBarWidth: Integer; external;
  end;

  THorizBarSeries = classinterface(TCustomBarSeries)
    property  CustomBarHeight: Integer; external;
  end;

  TCircledSeries = classinterface(TChartSeries)
    property  CircleBackColor: Integer; external;
    property  Circled: Boolean; external;
    property  CustomXRadius: Integer; external;
    property  CustomYRadius: Integer; external;
    property  RotationAngle: Integer; external;
  end;

  TPieSeries = classinterface(TCircledSeries)
    property  Color3d: Boolean; external;
    property  ColorEachPoint: Boolean; external;
    property  Dark3D: Boolean; external;
    property  PiePen: TChartPen; external;
    property  PieValues: TChartValueList; external;
    property  ShadowColor: Integer; external;
    property  Shadowed3d: Boolean; external;
    property  UsePatterns: Boolean; external;
  end;

  TChartShape = classinterface(TChartSeries)
    property  Alignment: TAlignment; external;
    property  Brush: TBrush; external;
    property  Font: TFont; external;
    property  Pen: TChartPen; external;
    property  RoundRectangle: Boolean; external;
    property  Style: TChartShapeStyle; external;
    property  Text: TStrings; external;
    property  Transparent: Boolean; external;
    property  X0: Extended; external;
    property  X1: Extended; external;
    property  XValues: TChartValueList; external;
    property  XYStyle: TChartShapeXYStyle; external;
    property  Y0: Extended; external;
    property  Y1: Extended; external;
    property  YValues: TChartValueList; external;
  end;

  TFastLineSeries = classinterface(TChartSeries)
    property  HorizAxis: THorizAxis; external;
    property  LinePen: TChartPen; external;
    property  SeriesColor: Integer; external;
    property  VertAxis: TVertAxis; external;
    property  XValues: TChartValueList; external;
    property  YValues: TChartValueList; external;
  end;

  TArrowSeries = classinterface(TPointSeries)
    property  ArrowHeight: Integer; external;
    property  ArrowWidth: Integer; external;
    property  EndXValues: TChartValueList; external;
    property  EndYValues: TChartValueList; external;
    property  StartXValues: TChartValueList; external;
    property  StartYValues: TChartValueList; external;
  end;

  TGanttSeries = classinterface(TPointSeries)
    property  ConnectingPen: TChartPen; external;
    property  EndValues: TChartValueList; external;
    property  NextTask: TChartValueList; external;
    property  StartValues: TChartValueList; external;
  end;

  TBubbleSeries = classinterface(TPointSeries)
    property  ColorEachPoint: Boolean; external;
    property  RadiusValues: TChartValueList; external;
    property  Squared: Boolean; external;
  end;

  TRBStructure = classinterface(TComponent)
    property  Tables: TRBTables; external;
  end;

  TRSOwnedCollection = classinterface(TOwnedCollection)
  end;

  TRBTables = classinterface(TRSOwnedCollection)
  end;

  TRBBasePanel = classinterface(TCustomControl)
    property  Frame: TRBFrame; external;
  end;

  TRBFrame = classinterface(TPersistent)
    property  Color: Integer; external;
    property  DrawBottom: Boolean; external;
    property  DrawLeft: Boolean; external;
    property  DrawRight: Boolean; external;
    property  DrawTop: Boolean; external;
    property  Style: TPenStyle; external;
    property  Width: Integer; external;
  end;

  TCustomPrintForm = classinterface(TRBBasePanel)
    property  PrintTypes: TPrintTypes; external;
    property  Translat: TTranslator; external;
  end;

  TO4PrintForm = classinterface(TCustomPrintForm)
    property  DataStructure: TRBStructure; external;
    property  Font: TFont; external;
    function  GetMean: Variant; external;
    function  GetParams: Variant; external;
    function  GetPrintKind: TO4PrintKind; external;
    property  LastPageFill: Integer; external;
    property  Page: TRBPage; external;
    property  PrinterSettings: TRBPrinterSettings; external;
    property  PrintPageScroll: Boolean; external;
    property  ReportTitle: String; external;
    property  Units: TRBUnit; external;
    property  VPAOnBeginPrint: TVPAEvent; external;
    property  VPAOnEndPrint: TVPAEvent; external;
    property  Zoom: Integer; external;
  end;

  TRBUnitBase = classinterface(TPersistent)
  end;

  TRBPage = classinterface(TRBUnitBase)
    property  BottomMargin: Extended; external;
    property  Columns: Integer; external;
    property  ColumnSpace: Extended; external;
    property  LeftMargin: Extended; external;
    property  Length: Extended; external;
    property  Orientation: TPrinterOrientation; external;
    property  PaperSize: TQRPaperSize; external;
    property  RightMargin: Extended; external;
    property  Ruler: Boolean; external;
    property  TopMargin: Extended; external;
    property  Width: Extended; external;
  end;

  TQRPrinterSettings = classinterface(TPersistent)
  end;

  TRBPrinterSettings = classinterface(TQRPrinterSettings)
    property  Copies: Integer; external;
    property  Duplex: Boolean; external;
    property  FirstPage: Integer; external;
    property  LastPage: Integer; external;
    property  OutputBin: TQRBin; external;
  end;

  TRBCustomBand = classinterface(TRBBasePanel)
  end;

  TRBBand = classinterface(TRBCustomBand)
    property  AlignToBottom: Boolean; external;
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  Frame: TRBFrame; external;
    property  IsFooter: Boolean; external;
    property  Master: TRBDetailBand; external;
    property  Options: TBandOptions; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBBandSize; external;
    property  Visible: Boolean; external;
    property  VPAOnAfterPrint: TVPAEvent; external;
    property  VPAOnBeforePrint: TVPAEvent; external;
  end;

  TRBDetailBand = classinterface(TRBCustomBand)
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  Frame: TRBFrame; external;
    property  Master: TRBDetailBand; external;
    property  Options: TBandOptions; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBBandSize; external;
    property  TableSign: String; external;
    property  Visible: Boolean; external;
    property  VPAOnAfterPrint: TVPAEvent; external;
    property  VPAOnBeforePrint: TVPAEvent; external;
  end;

  TRBBandSize = classinterface(TRBUnitBase)
    property  Height: Extended; external;
    property  Width: Extended; external;
  end;

  TRBMultiBand = classinterface(TRBBand)
    property  ActivePage: String; external;
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  PageIndex: Integer; external;
    property  Pages: TStrings; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnAfterPrintPage: TVPAEvent; external;
    property  VPAOnBeforePrintPage: TVPAEvent; external;
  end;

  TRBPrintable = classinterface(TGraphicControl)
    property  Frame: TRBFrame; external;
    property  Size: TRBPrintableSize; external;
  end;

  TRBPrintableSize = classinterface(TRBUnitBase)
    property  Height: Extended; external;
    property  Left: Extended; external;
    property  Top: Extended; external;
    property  Width: Extended; external;
  end;

  TRBCustomLabel = classinterface(TRBPrintable)
  end;

  TRBLabel = classinterface(TRBCustomLabel)
    property  Alignment: TAlignment; external;
    property  AutoSize: Boolean; external;
    property  Caption: String; external;
    property  Color: Integer; external;
    property  DisplayFormat: String; external;
    property  Font: TFont; external;
    property  Frame: TRBFrame; external;
    property  Layout: TTextLayout; external;
    property  Lines: TStrings; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBPrintableSize; external;
    property  TableField: String; external;
    property  TableSign: String; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnPrint: TVPAEvent; external;
    property  WordWrap: Boolean; external;
  end;

  TRBImage = classinterface(TRBPrintable)
    property  Alignment: TAlignment; external;
    property  AutoSize: Boolean; external;
    property  Color: Integer; external;
    property  Frame: TRBFrame; external;
    property  Layout: TTextLayout; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  Picture: TPicture; external;
    property  Size: TRBPrintableSize; external;
    property  Stretch: Boolean; external;
    property  TableField: String; external;
    property  TableSign: String; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TRBShape = classinterface(TRBPrintable)
    property  Color: Integer; external;
    property  Frame: TRBFrame; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  Shape: TRBShapeType; external;
    property  ShapeBrush: TBrush; external;
    property  ShapePen: TPen; external;
    property  Size: TRBPrintableSize; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TRBSysData = classinterface(TRBCustomLabel)
    property  Alignment: TAlignment; external;
    property  AutoSize: Boolean; external;
    property  Color: Integer; external;
    property  DisplayFormat: String; external;
    property  Font: TFont; external;
    property  Frame: TRBFrame; external;
    property  Layout: TTextLayout; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBPrintableSize; external;
    property  SysData: TRBSysDataType; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

  TRBChart = classinterface(TRBPrintable)
    property  Chart: TChart; external;
    property  Color: Integer; external;
    property  Frame: TRBFrame; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBPrintableSize; external;
    property  Visible: Boolean; external;
  end;

  TRSCollectionItem = classinterface(TCollectionItem)
    property  Name: String; external;
    property  Text: String; external;
  end;

  TRBTable = classinterface(TRSCollectionItem)
    property  Details: TRBTables; external;
    property  Fields: TRBTableFields; external;
    function  FindField(FieldName: String): TRBTableField; external;
    property  Owner: TRBTable; readonly; external;
    property  Value[FieldName: String]: Variant; external;
    property  VPAOnGetCount: TVPAEvent; external;
    property  VPAOnGetData: TVPAEvent; external;
  end;

  TRBTableFields = classinterface(TRSOwnedCollection)
  end;

  TRBTableField = classinterface(TRSCollectionItem)
    property  FieldType: TRBFieldType; external;
    property  Table: TRBTable; readonly; external;
    property  Value: Variant; external;
    property  VPAOnGetValue: TVPAEvent; external;
  end;

  TCustomXGrid = classinterface(TCustomControl)
  end;

  TO4XGrid = classinterface(TCustomXGrid)
    procedure AddFunc(Caption: AnsiString; const aName: AnsiString; FFormat: AnsiString; aArgCnt: Integer; RType: Integer; aAddr: Variant; IsMenu: Boolean = False); external;
    procedure AddLinkXGridData(XGrid: TCustomXGrid; Str: AnsiString; IsMenu: Boolean); external;
    procedure AddSection(SectName: String; NewRow: Boolean = True); external;
    function  AddSectionCells: TCellRange; external;
    property  Align: TAlign; external;
    property  Anchors: TAnchors; external;
    property  BorderStyle: TBorderStyle; external;
    property  Calc: Boolean; external;
    function  CalcCell(Row, Col: Integer): TCellRange; external;
    property  CalcCol: Integer; readonly; external;
    property  CalcRow: Integer; readonly; external;
    function  Cell(Row, Col: Integer): TCellRange; external;
    function  Cells(Row1, Col1, Row2, Col2: Integer): TCellRange; external;
    procedure ClearAll; external;
    property  Col: Integer; external;
    property  ColCount: Integer; external;
    property  Color: Integer; external;
    property  Constraints: TSizeConstraints; external;
    property  Ctl3D: Boolean; external;
    function  CurrentCell: TCellRange; external;
    property  DefaultColWidth: Integer; external;
    property  DefaultRowHeight: Integer; external;
    procedure DeleteCols(Index, Count: Integer); external;
    procedure DeleteRows(Index, Count: Integer); external;
    property  DesignMode: TXGridDesignMode; external;
    property  EditData: Boolean; external;
    property  EditorMode: Boolean; external;
    property  Enabled: Boolean; external;
    property  ExportOption: TXGridExportToExcelOptions; external;
    procedure ExportToExcel; external;
    property  FixedColCount: Integer; external;
    property  FixedRowCount: Integer; external;
    property  Font: TFont; external;
    property  HeaderFirstRow: Integer; external;
    property  HeaderLastRow: Integer; external;
    procedure InsertCols(Index, Count: Integer); external;
    procedure InsertRows(Index, Count: Integer); external;
    procedure LoadFromOleVariant(V: OleVariant); external;
    procedure LoadFromString(Str: String); external;
    property  O4MDSource: TCustomDataSource; external;
    property  Options: TXGridOptions; external;
    property  Page: TRBPage; external;
    property  PageNumbering: TPageNumbering; external;
    property  ParentColor: Boolean; external;
    property  ParentCtl3D: Boolean; external;
    property  ParentShowHint: Boolean; external;
    property  PopupMenu: TPopupMenu; external;
    procedure Print(Title: String; ShowPreview: Boolean = True); external;
    property  PrinterSettings: TRBPrinterSettings; external;
    property  ReadOnly: Boolean; external;
    property  Row: Integer; external;
    property  RowCount: Integer; external;
    function  SaveToOleVariant: OleVariant; external;
    function  SaveToString: String; external;
    property  ScrollBars: TScrollStyle; external;
    function  SelectedCells: TCellRange; external;
    property  ShowHeaderOnEachPage: Boolean; external;
    property  ShowHint: Boolean; external;
    property  TabOrder: Integer; external;
    property  TabStop: Boolean; external;
    property  Visible: Boolean; external;
    property  VPAOnDblClick: TVPAEvent; external;
    property  VPASetSectionVarValues: TVPAEvent; external;
  end;

  TPageNumbering = classinterface(TPersistent)
    property  Alignment: TAlignment; external;
    property  Format: String; external;
    property  OnPageBottom: Boolean; external;
    property  Visible: Boolean; external;
  end;

  TCellRange = classinterface(TPersistent)
    procedure AdjustColWidths(Col1: Integer = 0; Col2: Integer = 0); external;
    procedure AdjustRowHeights(Row1: Integer = 0; Row2: Integer = 0); external;
    property  Alignment: TAlignment; external;
    property  BkColor: Integer; external;
    property  BkColorIndex: Integer; external;
    property  BorderBottom: TCellBorderLineStyle; external;
    property  BorderColor: Integer; external;
    property  BorderColorIndex: Integer; external;
    property  BorderHorzInner: Integer; external;
    property  BorderLeft: TCellBorderLineStyle; external;
    property  BorderRight: TCellBorderLineStyle; external;
    property  BorderTop: TCellBorderLineStyle; external;
    property  BorderVertInner: Integer; external;
    property  CellDataType: TCellDataType; external;
    procedure ClearAll; external;
    procedure ClearData; external;
    procedure ClearFormat; external;
    property  ClipOnCell: Boolean; external;
    property  Col1: Integer; readonly; external;
    property  Col2: Integer; readonly; external;
    property  ColWidth: Integer; external;
    property  DisplayFormat: String; external;
    property  FontColor: Integer; external;
    property  FontColorIndex: Integer; external;
    property  FontName: String; external;
    property  FontSize: Integer; external;
    property  FontStyle: TFontStyles; external;
    procedure GroupCells; external;
    property  IsFormula: Boolean; external;
    property  Layout: TTextLayout; external;
    property  MultiColAlign: Boolean; external;
    property  Row1: Integer; readonly; external;
    property  Row2: Integer; readonly; external;
    property  RowHeight: Integer; external;
    procedure UnGroupCells; external;
    property  Value: Variant; external;
    property  WordWrap: Boolean; external;
  end;

  TXGridTools = classinterface(TCustomPanel)
    property  Align: TAlign; external;
    property  AutoSize: Boolean; external;
    property  Buttons: TXGridToolButtons; external;
    property  EdgeBorders: TEdgeBorders; external;
    property  EdgeInner: TEdgeStyle; external;
    property  EdgeOuter: TEdgeStyle; external;
    property  Enabled: Boolean; external;
    property  Flat: Boolean; external;
    property  Images: TCustomImageList; external;
    property  ParentShowHint: Boolean; external;
    property  ShowHint: Boolean; external;
    property  Visible: Boolean; external;
    property  XGrid: TCustomXGrid; external;
  end;

  TRBCustomBarCode = classinterface(TRBPrintable)
  end;

  TRBBarCode = classinterface(TRBCustomBarCode)
    property  AutoSize: Boolean; external;
    property  BarCodeType: TBarcodeType; external;
    property  ShowText: TBarcodeOption; external;
    property  ShowTextPosition: TShowTextPosition; external;
    property  Text: String; external;
  end;

  TRBCustomCheckBox = classinterface(TRBPrintable)
  end;

  TRBCheckBox = classinterface(TRBCustomCheckBox)
    property  Checked: Boolean; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  TickStyle: TCTickStyle; external;
  end;

  TRBDBCheckBox = classinterface(TRBCustomCheckBox)
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  TableField: String; external;
    property  TableSign: String; external;
    property  TickStyle: TCTickStyle; external;
  end;

  TRBPageCount = classinterface(TRBCustomLabel)
    property  Alignment: TAlignment; external;
    property  AutoSize: Boolean; external;
    property  Color: Integer; external;
    property  Font: TFont; external;
    property  Frame: TRBFrame; external;
    property  Layout: TTextLayout; external;
    property  LinkLeft: TRBPrintable; external;
    property  LinkRight: TRBPrintable; external;
    property  LinkSetting: Boolean; external;
    property  ParentColor: Boolean; external;
    property  ParentFont: Boolean; external;
    property  Size: TRBPrintableSize; external;
    property  Transparent: Boolean; external;
    property  Visible: Boolean; external;
    property  WordWrap: Boolean; external;
  end;

procedure TerminateClient; external;
function  IsPocketMode: Boolean; external;
procedure SetMainFormCaption(Caption: String); external;
procedure ShowMessage(const Msg: String); external;
procedure MessageBox(const Msg: String; DlgType: integer); external;
procedure StatusText(Msg: string); external;
function  CreateObject(ObjectID: string): Variant; external;
function  CreateObjectOnDBID(ObjectID, DBID: string): Variant; external;
function  CheckObjectExists(ObjectID: string): Boolean; external;
function  StdInpInt(Message: string; var Value: integer): boolean; external;
function  StdInpDate(Message: string; var Value: DateTime): boolean; external;
function  StdInpDouble(Message: string; var Value: Double): boolean; external;
function  StdInpDec(Message: string; var Value: Decimal): boolean; external;
function  StdInpStr(Message: string; var Value: String): boolean; external;
function  GetUserID: string; external;
function  GetUserName: string; external;
function  GetUserLogin: string; external;
function  GetComputerName: String; external;
function  CreateSemaphore(Name, Message: string): Variant; external;
function  MessageDlg(Message: string; DlgType: integer; Buttons: Variant; DefaultButton: TMsgDlgBtn = mbOk): integer; external;
function  GetUDASet(UDAID: string; RaiseStandartMessage: Boolean = False): boolean; external;
function  CreateUsersInfoTool: Variant; external;
procedure PlaySound(SoundAlias: string); external;
function  ConnectionEstablished: boolean; external;
function  FloatToHexStr(Value: Double): string; external;
function  GetSessionID: Integer; external;
function  CreateBusyIndicator: Variant; external;
function  RaiseOnlyMessage(P: Integer): boolean; external;
function  OemToAnsiStr(SDos: String): String; external;
function  AnsiStrToOem(SWin: String): String; external;
function  Trans(S: String): String; external;
function  TransLCID(S: String; LCID: Integer): String; external;
function  SelectDBID: String; external;
function  DeleteFile(FileName: String): Boolean; external;
procedure Run(Path: String; Wait: Boolean); external;
procedure Sleep(Milliseconds: Integer); external;
procedure MkDir(Path: String); external;
procedure ForceDir(APath: String); external;
procedure DeleteDir(APath: String); external;
procedure CopyDir(ASourceDIR, ADestDIR: String); external;
procedure MoveDir(ASourceDIR, ADestDIR: String); external;
procedure RenameDir(APath, ANewName: String); external;
procedure StartTime; external;
procedure StopTime; external;
function  GetDBID: string; external;
function  GetDBName: string; external;
function  GetDBDesc: string; external;
function  GetSrvDlgFileName(IsOpenDlg: Boolean; Filter: string; IsFileDlg: Boolean; InitialPath: string; Flags: integer; DlgCaption: string): string; external;
function  CopyFileFromClientToServer(ClientFile: string; ServerFile: string; ShowProgressBar: boolean): boolean; external;
function  CopyFileFromServerToClient(ServerFile: string; ClientFile: string; ShowProgressBar: boolean): boolean; external;
procedure SysProgress(Min, Max, Pos: Integer; Text: String); external;
function  StartTransaction(DBID: String = ''): Integer; external;
function  EndTransaction(DBID: String; Commit: Boolean): Integer; external;
procedure ProcessMessages; external;
procedure AssignTxtFile(const FileName: String); external;
procedure CloseTxtFile; external;
function  RewriteTxtFile: Integer; external;
procedure WriteToTxtFile(const Line: String); external;
procedure WriteLnToTxtFile(const Line: String); external;
function  ResetTxtFile: Integer; external;
function  ReadFromTxtFile: String; external;
function  ReadLnFromTxtFile: String; external;
function  TxtFileEOF: Boolean; external;
function  CreateStringList: TStringList; external;
function  CreateOleObject(ClassName: String; MachineName: String = ''): Variant; external;
function  CtrlToVar(Control: TObject): Variant; external;
function  SysGetTickCount: Integer; external;
function  CurrentDate: DateTime; external;
function  CurrentTime: DateTime; external;
function  CurrentDateTime: DateTime; external;
function  GetYear(Date: DateTime): Integer; external;
function  GetMonth(Date: DateTime): Integer; external;
function  GetDay(Date: DateTime): Integer; external;
function  DayOfWeek(Date: DateTime): Integer; external;
function  GetHour(Time: DateTime): Integer; external;
function  GetMinute(Time: DateTime): Integer; external;
function  GetSecond(Time: DateTime): Integer; external;
function  EncodeDate(Year, Month, Day: Integer): DateTime; external;
function  EncodeTime(Hour, Min, Sec: Integer; mSec: Integer = 0): DateTime; external;
procedure DecodeDate(Date: DateTime; var Year, Month, Day: Integer); external;
procedure DecodeTime(Time: DateTime; var Hour, Min, Sec, mSec: Integer); external;
function  DaysPerYear(Year: Integer): Integer; external;
function  DaysPerMonth(Month: Integer; IsLeapYear: Boolean = False): Integer; external;
function  IsLeapYear(Year: Integer): Boolean; external;
function  RoundDate(Date: DateTime; RoundType: TRoundDateType; RoundToNext: Boolean = False): DateTime; external;
function  IncMonth(Date: DateTime; NumberOfMonths: Integer): DateTime; external;
function  StrUpperCase(Src: String): String; external;
function  StrLowerCase(Src: String): String; external;
function  StrLength(Str: String): Integer; external;
function  StrPos(SubStr, Src: String): Integer; external;
function  StrCopy(Str: String; Index, Count: Integer): String; external;
procedure StrDelete(var Str: String; Index, Count: Integer); external;
procedure StrInsert(InsStr: String; var Str: String; Index: Integer); external;
function  StrTrim(Str: String): String; external;
function  StrTrimLeft(Str: String): String; external;
function  StrTrimRight(Str: String): String; external;
function  StrDelSpace(Str: String): String; external;
function  StrOptimizeSpace(Str: String): String; external;
function  CompareStr(Str1, Str2: String): Integer; external;
function  CompareText(Str1, Str2: String): Integer; external;
function  WordCount(Str: String; DelimChar: Char = ' '): Integer; external;
function  ExtractWord(WordNum: Integer; Str: String; DelimChar: Char = ' '): String; external;
function  DecimalSeparator: Char; external;
function  ParseText(Text: String; RegExp: String): Variant; external;
function  IndistinctStringCompare(Str1, Str2: String; MaxMatching: Integer): Integer; external;
function  ArrayDimCount(var V: Variant): Integer; external;
function  ArrayLow(var V: Variant; Dim: Integer = 1): Integer; external;
function  ArrayHigh(var V: Variant; Dim: Integer = 1): Integer; external;
function  IsArray(var V: Variant): Boolean; external;
function  IsNull(V: Variant): Boolean; external;
function  Null: Variant; external;
function  IsEmpty(V: Variant): Boolean; external;
function  Unassigned: Variant; external;
function  IsObject(var V: Variant): Boolean; external;
function  IsEmptyOrNull(V: Variant): Boolean; external;
function  IsZero(V: Variant): Boolean; external;
function  VarAsStr(V: Variant; DefVal: String = ''): String; external;
function  VarAsBool(V: Variant; DefVal: Boolean = False): Boolean; external;
function  VarAsInt(V: Variant; DefVal: Integer = 0): Integer; external;
function  VarAsFloat(V: Variant; DefVal: Double = 0): Double; external;
function  VarAsDate(V: Variant; DefVal: DateTime = 0): DateTime; external;
function  VarAsDec(V: Variant; DefVal: Decimal = 0): Decimal; external;
function  Abs(Val: LargeInt): LargeInt; external;
function  AbsF(Val: Extended): Extended; external;
function  AbsD(Val: Decimal): Decimal; external;
function  CharToByte(C: Char): Byte; external;
function  ByteToChar(B: Byte): Char; external;
function  Random(Range: Integer = 0): Double; external;
function  GetScreenWidth: Integer; external;
function  GetScreenHeight: Integer; external;
function  GetAppLeft: Integer; external;
function  GetAppTop: Integer; external;
function  GetAppWidth: Integer; external;
function  GetAppHeight: Integer; external;
function  GetCursor: TCursor; external;
function  SetCursor(Cursor: TCursor): TCursor; external;
function  WaitCursorStart: TCursor; external;
function  WaitCursorFinish(Cursor: TCursor = crDefault): TCursor; external;
function  StrToInt(S: String): Integer; external;
function  StrToIntDef(S: String; DefVal: Integer = 0): Integer; external;
function  StrToInt64(S: String): LargeInt; external;
function  StrToInt64Def(S: String; DefVal: LargeInt = 0): LargeInt; external;
function  StrToFloat(S: String): Extended; external;
function  StrToFloatDef(S: String; DefVal: Extended = 0): Extended; external;
function  StrToDate(S: String): DateTime; external;
function  StrToDateDef(S: String; DefVal: DateTime = 0): DateTime; external;
function  StrToTime(S: String): DateTime; external;
function  StrToTimeDef(S: String; DefVal: DateTime = 0): DateTime; external;
function  StrToDateTime(S: String): DateTime; external;
function  StrToDateTimeDef(S: String; DefVal: DateTime = 0): DateTime; external;
function  StrToDec(S: String): Decimal; external;
function  StrToDecDef(S: String; DefVal: Decimal = 0): Decimal; external;
function  HexToInt(Val: String): Integer; external;
function  IntToHex(Val: Integer; Digits: Integer): String; external;
function  IntToStr(Value: LargeInt): String; external;
function  FloatToStr(Value: Extended): String; external;
function  DateToStr(Value: DateTime): String; external;
function  TimeToStr(Value: DateTime): String; external;
function  DateTimeToStr(Value: DateTime): String; external;
function  DecToStr(Value: Decimal; AfterComa: Integer = -1): String; external;
function  FormatFloat(FormatStr: String; Value: Extended): String; external;
function  FormatDateTime(FormatStr: String; Value: DateTime): String; external;
function  Round(Value: Extended): LargeInt; external;
function  RoundFloat(Value: Extended; AfterComa: Integer): Extended; external;
function  RoundDec(Value: Decimal; AfterComa: Integer): Decimal; external;
function  Trunc(Value: Extended): LargeInt; external;
function  TruncFloat(Value: Extended; AfterComa: Integer): Extended; external;
function  TruncDec(Value: Decimal; AfterComa: Integer): Decimal; external;
function  Int(Value: Extended): Extended; external;
function  Frac(Value: Double): Double; external;
function  DecInt(Value: Decimal): Decimal; external;
function  DecFrac(Value: Decimal): Decimal; external;
function  ExtractFilePath(FileName: String): String; external;
function  FileExists(FileName: String): Boolean; external;
function  DirectoryExists(DirectoryName: String): Boolean; external;
function  RunPath: String; external;
function  TempPath: String; external;
function  AsciiToWideCharFile(const FileName: String): Boolean; external;
function  WideCharToAsciiFile(const FileName: String): Boolean; external;
function  EnumerateFolder(const Path, Mask: String; Recursive, EnumDIRs, EnumFiles: Boolean; IncludePath: Boolean = False): String; external;
function  RenameFile(const OldName, NewName: String): Boolean; external;
function  IsObjEQ(Obj1, Obj2: Variant; OnlyTypeEQ: Boolean = False): Boolean; external;
procedure mailto(Adr: String); external;
function  SendMail(const RecipientName, EMail, Subject, Attachments: String): Boolean; external;
function  ReadMail(const EMail: String; DeleteAfterRead: Boolean = False): String; external;
function  CreateTClipboard: TClipboard; external;
function  GetCurrentUser: Variant; external;
function  GetUser(UserID: String): Variant; external;
function  CreateTRegistry: TRegistry; external;
function  GetPrinterNames: String; external;
function  GetActivePrinterName: String; external;
procedure SetActivePrinter(PrinterName: String); external;
function  Sqr(Val: Extended): Extended; external;
function  Sqrt(Val: Extended): Extended; external;
function  Sin(Val: Extended): Extended; external;
function  Cos(Val: Extended): Extended; external;
function  Arctan(Val: Extended): Extended; external;
function  Pi: Extended; external;
function  GetMeanNameByMeanID(const AMeanID: string): String; external;

implementation
end.
