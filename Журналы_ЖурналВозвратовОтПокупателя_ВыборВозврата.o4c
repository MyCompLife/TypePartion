interface

uses
  System, DispIntf, ConstNames, Интерфейс, InitColors, Расчеты, РаботаСПеременными,
  РаботаСДокументамиВЖурналах, ПодключениеДопИнтерфейса, РаботаСОбъектами, РаботаСКомпонентамиVCL,
  УстановкаВажныхОбъектов, ПечатьИВыводНаЭкран, Печать;

implementation

var
  MasterData : ICJournal;
  Constants : IC4VPAConst;
  Options : ICOptions;
  LockCh : Boolean;



procedure MDS_VPATimedAfterScroll(Sender : TObject);
begin
  if MasterData.IsFocused then
    tsState.SecondSelect := MasterData.GetDocState + 1
  else
    tsState.SecondSelect := -1;
end;

procedure MDS_VPABeforeOpen(Sender : TObject);
var
  i : Integer;
  Strs : Variant;
begin
  MasterData := MDS.GetMean;
  Constants := GetConstants;
  SetColors(Constants);
  Options := GetOptions;
  MasterData.SetSrvOnCalcFields(server.GetCalcEP(MasterData.SrvMean));

end;

procedure Form_Open(Sender : TObject);
var
  Nobody : TO4ToolBar; // заглушка на NIL
  i : Integer;
begin
  MakeInterface(tbrData, Nobody, dbgData);
  for i := 0 to MasterData.StateCount - 1 do
    tsState.Tabs.Add(Trans(MasterData.GetStateName(i)));
  // tsState.TabIndex:=VarAsInt(Options.GetServerPrm(StateOnOpen));
  MasterData.DefineSelectParams(True);
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
  LockCh := True;
end;

procedure tsState_Change(Sender : TObject; NewTab : Integer; var AllowChange : Boolean);
begin
  if LockCh then
    begin
      MasterData.SetDocStateRange(NewTab - 1);
      MasterData.Select;
    end;
end;

procedure pmiPrintOne_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  if MasterData.IsFocused then
    begin
      V := CreateObject('Обработки.ПечУнивНакладнаяОтпуска'); //ПечУнивНакладнаяОтпуска
      V.PrintForm('', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData.GetDoc())
    end;
end;

{$D-}
procedure dbgData_GetImageIndex(Sender : TObject; var Index1, Index2 : Integer);
begin
  if MasterData.IsFocused then
    begin
      if (MasterData.Оплачено > 0) and (MasterData.Оплачено < MasterData.Сумма) then
        Index1 := 8
      else
        if (MasterData.Оплачено > 0) and (MasterData.Оплачено > MasterData.Сумма) then
          Index1 := 7
        else
          if (MasterData.Оплачено > 0) and (MasterData.Оплачено = MasterData.Сумма) then
            Index1 := 6
          else
            if (MasterData.Оплачено < 0) then
              Index1 := 21;

      if MasterData.GetDocState > 0 then
        Index2 := 10
      else
        Index2 := 9;
    end;
end;

procedure sgOrder_GetCellProps(Sender : TObject; aCol, aRow : Integer; aFont : TFont;
  var Background : TColor; var CellAlignment : TAlignment;
  var Layout : TTextLayout;
  var WrapText : Boolean; Selected, Fixed, Highlight : Boolean);
begin
  if (aCol > 0) and (aRow > 0) then
    CellAlignment := taRightJustify;
  case aRow of
    0 :
      CellAlignment := taCenter;
    1 :
      aFont.Color := clBlue;
    2 :
      aFont.Color := clGreen;
    3 :
      aFont.Color := clRed;
  end;
end;

procedure dbgData_GetRowParams(Sender : TObject; DrawFont : TFont; var BackColor : TColor; Highlight : Boolean);
begin
  if MasterData.IsFocused and (MasterData.ПризнакСрокаОплаты <> 0) and
    (MasterData.СрокОплаты < CurrentDate) and (MasterData.GetDocState > 0) and
    (MasterData.Оплачено < MasterData.Сумма) then
    if Highlight then
      BackColor := NoPaySel
    else
      BackColor := NoPayNorm;
end;
{$D+}

procedure pmiPrint_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  V := CreateObject('Обработки.ПечУнивЖурнала');
  V.PrintForm('ПечУнивЖурналаСТипом', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData)
    // MasterData.PrintForm('', False, 0, Null)
end;

procedure pmiPrintStore_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  if MasterData.IsFocused then
    begin
      V := CreateObject('Обработки.ПечУнивНаклОтпСклад');
      V.PrintForm('УнивНаклОтпСклад', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData.GetDoc)
    end;
end;

procedure pmiSelect_Click(Sender : TObject);
begin
  MasterData.DefineSelectParams(False);
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
end;

procedure pmiRefresh_Click(Sender : TObject);
begin
  MasterData.Refresh;
end;


procedure MDS_VPADataRefreshed(Sender : TObject);
begin
  LockCh := False;
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
  LockCh := True;
end;

procedure DBMemo1_Exit(Sender : TObject);
begin
  ChangeDocFieldByJournalField(MasterData);
end;

procedure miCopyDoc_Click(Sender : TObject);
begin
  AddDocByTemplate(MasterData);
end;

procedure Form_ExecProc(Self, Caller : Variant; ProcID : string; InParams : Variant; var OutParams : Variant);
begin
  case ProcId of
    GetTemplateDocNames :
      if MasterData.GetDocSign <> 'ВозвратОтПокупателей' then
        begin
          OutParams := ArrayOf(dtCancelTemplate);
          ShowMessage(DontMakeCopy);
        end;
  end;
end;

procedure pmiExportExcel_Click(Sender : TObject);
begin
  ExportGoodsDocToExcel(MasterData.GetDoc, dtInvoice);
end;



procedure Form_Execute(Sender: TObject; Mean: Variant; Params: Variant);
begin
  ShowMessage(Params);
end;

procedure MDS_Select(Sender: TObject; Mean: Variant; Params: Variant);
var
  Journ: ICJournal;
  Doc : ICDocuments;
begin
  Journ := Params.Params['OwnerMean'];
  Doc := Journ.GetDoc;
  If VarAsBool(Doc.Партнер.IsFocused) then
    MasterData.SetFieldFilter('Партнер','=',Doc.Партнер,'','','');
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Splitter1:TO4Splitter
Panel1:TO4Panel
dbgData:TO4DBGrid
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
ToolButton1:TO4ToolButton
ToolButton3:TO4ToolButton
tbDelete:TO4ToolButton
tbDelimiter1:TO4ToolButton
tbPrint:TO4ToolButton
tbDelimiter2:TO4ToolButton
tbSelect:TO4ToolButton
tbDelimiter3:TO4ToolButton
tbRefresh:TO4ToolButton
tbParam:TO4ToolButton
tbDelimiter4:TO4ToolButton
tsState:TO4TabSet
MDS:TO4DataSource
pmData:TO4PopupMenu
pmiAdd:TO4MenuItem
miCopyDoc:TO4MenuItem
pmiEdit:TO4MenuItem
miUp:TO4MenuItem
miDown:TO4MenuItem
pmiDelete:TO4MenuItem
MenuItem1:TO4MenuItem
pmiPrintOne:TO4MenuItem
pmiPrint:TO4MenuItem
pmiExportExcel:TO4MenuItem
MenuItem2:TO4MenuItem
miSort:TO4MenuItem
pmiSort:TO4MenuItem
MenuItem3:TO4MenuItem
miRefresh:TO4MenuItem
