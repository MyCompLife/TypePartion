interface

uses
  System, DispIntf, ConstNames, РаботаСПеременными, РаботаСОбъектами,
  РаботаСКомпонентамиVCL, РаботаСТаблицамиЗначений, РаботаСоСправочниками, Пользователи, РаботаСоСправочникамиCL;

implementation

const
  errConvBreakByUser = 'Конвертация была прервана пользователем !';

var
  Regions, MasterData, DetAdr, DetPhone, DetDocument, DetEmail, DetBankAcc : ICDictionary;
  UseLevels : Boolean;
  Opt : ICOptions;
  RegionsList : ICValueList;   
  FieldName : string;

procedure MDS_VPABeforeOpen(Sender : TObject);
Var
  ActiveRegion : ICDictionary;
begin
  MasterData := MDS.GetMean;
  if IsNil(Opt) then
    Opt := CreateObject('ОпцииКлиента');
  UseLevels := VarAsBool(Opt.GetServerPrm(GetUserID + MasterData.GetSign + Form.Caption));
  RegionsList := CreateObject('СписокЗначений');
  Regions := CreateObject('Справочники.Регионы');
  RegionsList.AddValue(Trans('Все регионы'), Null);
  Regions.Select;
  while Regions.SelectNext do
    RegionsList.AddValue(Regions.Название, Regions); // или ('',S)
  RegionsList.UseControl(CtrlToVar(eRegion));
  RegionsList.CurIndex := 0;
  eRegion.Enabled := not GetUsersBlockedField('БлокировкаВыбораРегиона');
  ActiveRegion := GetUsersField('Регион');
  if not IsNil(ActiveRegion) then
    RegionsList.CurIndex := RegionsList.FindByValue(ActiveRegion)
end;

procedure Form_Open(Sender : TObject);
begin
  MasterData.Params[prmInterfaceType] := itMainForm;
  MakeStandartInterface(MasterData, Form, 'tbrData;tbrCtg', 'dbgData');
  DetPhone := SetDetailDict(MasterData, 'Телефоны', 'ПросмотрТелефонов',
    CtrlToVar(ntbLists.PageClass[0]));    
  tsFilter.Down := GetFilterPanel(MasterData.GetSign);
  pFilter.Visible := tsFilter.Down;
end;

procedure tstLists_Change(Sender : TObject; NewTab : Integer; var AllowChange : Boolean);
begin
  ntbLists.PageIndex := NewTab;
  case ntbLists.ActivePage of
    'Adresses' :
      if IsNil(DetAdr) then
        DetAdr := SetDetailDict(MasterData, 'Адреса', 'ПросмотрАдресов',
          CtrlToVar(ntbLists.PageClass[NewTab]));
    'Documents' :
      if IsNil(DetDocument) then
        DetDocument := SetDetailDict(MasterData, 'ЛичДокументы', 'ПросмотрЛичДокументов',
          CtrlToVar(ntbLists.PageClass[NewTab]));
    'EMail' :
      if IsNil(DetEmail) then
        DetEmail := SetDetailDict(MasterData, 'Email', 'ПросмотрEmail',
          CtrlToVar(ntbLists.PageClass[NewTab]));
    'BankAccounts' :
      if IsNil(DetBankAcc) then
        DetBankAcc := SetDetailDict(MasterData, 'РасчСчета', 'ПросмотрРасчСчетов',
          CtrlToVar(ntbLists.PageClass[NewTab]));
  end;
end;

procedure miPrint_Click(Sender : TObject);
begin
  MasterData.PrintForm('', False, 0, Null)
end;

procedure Form_Close(Sender : TObject);
begin
  Opt.SetServerPrm(GetUserID + MasterData.GetSign + Form.Caption, UseLevels);
end;

procedure MDS_VPAAfterScroll(Sender : TObject);
begin
  MasterData.InteractiveUseLevels := UseLevels;
end;

procedure pmiDontUseLevel_VPABeforeActionClick(Sender : TObject);
begin
  UseLevels := False;
end;

procedure pmiUseLevel_VPABeforeActionClick(Sender : TObject);
begin
  UseLevels := True;
end;

procedure miSetCitizenOfUkraine_Click(Sender: TObject);
begin        
  if MessageDlg(trans('Установить значение поля "Гражданин Украины"?'), mtConfirmation, ArrayOf(mbYes, mbNo)) = mrYes then
    begin
      MasterData.AssignSelectParamsOnSrv(Null);
      try
        if not MasterData.RunThreadProcess(server.SetCitizenOfUkraineEP, Trans('Заполнение поля "Гражданин Украины"')) then
          raise(Trans(errConvBreakByUser));
      finally
        MasterData.Refresh;
      end;
    end;
end;

procedure eRegion_Change(Sender: TObject);
begin
  if RegionsList.CurIndex > 0 then
    begin
      MasterData.CancelFieldFilter('Регион');
      MasterData.SetFieldFilter('Регион','=',RegionsList.GetValue(RegionsList.CurIndex),'','',null);
    end
   else
     MasterData.CancelFieldFilter('Регион');
  MasterData.Refresh;
end;

procedure ePartFilter_KeyDown(Sender: TObject; var Key: Integer);
begin
  FieldName := 'ПолноеНазвание';
  if key=13 then
    begin
      MasterData.SetFieldFilter(FieldName,'Like', '%' + ePartFilter.Text + '%','','',Null);
      MasterData.Refresh;
      form.ActiveControl := dbgData;
    end;
end;

procedure tbFilterApply_Click(Sender: TObject);
begin
  FieldName := 'ПолноеНазвание';
  MasterData.SetFieldFilter(FieldName,'Like', '%' + ePartFilter.Text + '%','','',Null);
  MasterData.Refresh;
  form.ActiveControl := dbgData;
end;

procedure tbGoodsFilterClear_Click(Sender: TObject);
begin
  MasterData.CancelFieldFilter(FieldName);
  MasterData.Refresh;
  ePartFilter.Text := '';
end;

procedure tsFilter_Click(Sender: TObject);
begin
  pFilter.Visible := tsFilter.Down;
  MasterData.CancelFieldFilter(FieldName);
  MasterData.Refresh;
  ePartFilter.Text := '';
  SetFilterPanel(MasterData.GetSign, tsFilter.Down);
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Splitter1:TO4Splitter
CtgPanel:TO4Panel
dbtCtg:TO4DBTreeView
tbrCtg:TO4ToolBar
tbAddLevel:TO4ToolButton
tbEditLevel:TO4ToolButton
tbDelLevel:TO4ToolButton
DataPanel:TO4Panel
splLists:TO4Splitter
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
tbDelete:TO4ToolButton
tbDelimiter1:TO4ToolButton
tbPrint:TO4ToolButton
tbDelimiter2:TO4ToolButton
tbRefresh:TO4ToolButton
tbSettings:TO4ToolButton
ListsPanel:TO4Panel
tstLists:TO4TabSet
ntbLists:TO4Notebook
dmNotes:TO4DBMemo
DBImage1:TO4DBImage
dbgData:TO4DBGrid
Panel1:TO4Panel
Label2:TO4Label
eRegion:TO4Edit
pmAddLevels:TO4PopupMenu
pmiAddBros:TO4MenuItem
pmiAddChild:TO4MenuItem
MDS:TO4DataSource
pmData:TO4PopupMenu
miAdd:TO4MenuItem
miEdit:TO4MenuItem
miDelete:TO4MenuItem
miDelimiter1:TO4MenuItem
miPrint:TO4MenuItem
miDelimiter2:TO4MenuItem
miSort:TO4MenuItem
miDelimiter3:TO4MenuItem
miRefresh:TO4MenuItem
miSettings:TO4MenuItem
MenuItem1:TO4MenuItem
miSetCitizenOfUkraine:TO4MenuItem
pmCtg:TO4PopupMenu
pmiAddLevel:TO4MenuItem
pmiAddSubLevel:TO4MenuItem
pmiEditLevel:TO4MenuItem
pmiDelLevel:TO4MenuItem
MenuItem4:TO4MenuItem
pmiUseLevel:TO4MenuItem
pmiDontUseLevel:TO4MenuItem
pmiUseNoLevel:TO4MenuItem
pFilter:TO4Panel
CodePanel:TO4Panel
Label1:TO4Label
ePartFilter:TO4Edit
ToolBar1:TO4ToolBar
tbFilterApply:TO4ToolButton
ToolButton4:TO4ToolButton
tbGoodsFilterClear:TO4ToolButton
tsFilter:TO4ToolButton
ToolButton1:TO4ToolButton
