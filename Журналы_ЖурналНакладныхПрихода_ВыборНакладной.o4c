interface

uses
  System, DispIntf, ConstNames, »нтерфейс, InitColors, –асчеты;

implementation

var
  MasterData, ChildPaysOut, ChildPaysIn, ChildNakls, ChildNaklsIn : ICJournal;
  OldDoc, NewDoc : ICDocuments;
  Constants : IC4VPAConst;
  Options : ICOptions;
  LockCh : Boolean;

procedure MDS_VPABeforeOpen(Sender : TObject);
begin
  MasterData := MDS.GetMean;
  Constants := GetConstants;
  SetColors(Constants);
  Options := GetOptions;
  MasterData.SetSrvOnCalcFields(server.GetCalcEP);
end;

procedure ReceiveEvent(Sender : ICDocuments; SessionID : Integer; CenterName, FromUserID, FromUserName : string;
  Param : Variant);
begin
  // if MasterData.BrowseMode then bFresh_Click(tbRefresh);
  if GetSessionID() <> SessionID then
    MasterData.Refresh();
end;

procedure Form_Open(Sender : TObject);
var
  i : Integer;
begin           
  miDocMove.Visible := GetUDASet('viewdocmove');
  for i := 0 to MasterData.StateCount - 1 do
    tsState.Tabs.Add(MasterData.GetStateName(i));
  MasterData.RegEventReceiver(evNakladn, EntryPoint(ReceiveEvent), VarAsInt(Options.GetLocalPrm(DelayTime), 1000));
  MasterData.DefineSelectParams(True);
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
  LockCh := True;
end;

procedure tsState_Change(Sender : TObject; NewTab : Integer; var AllowChange : Boolean);
begin
  if LockCh then
    begin
      MasterData.SetDocStateRange(Newtab - 1);
      MasterData.Select;
    end;
end;

procedure pmiSelect_Click(Sender : TObject);
begin
  MasterData.DefineSelectParams(False);
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
end;

procedure pmiPrint_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  V := CreateObject('ќбработки.ѕеч”нив∆урнала');
  V.PrintForm('ѕеч”нив∆урнала—“ипом', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData)
end;

procedure pmiPrintOne_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  if MasterData.IsFocused then
    begin
      V := CreateObject('ќбработки.ѕеч”нивЌакладна€ќтпуска');
      V.PrintForm('', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData.GetDoc())
    end;
end;

{$D-}
procedure dbgData_GetImageIndex(Sender : TObject; var Index1, Index2 : Integer);
begin
  if MasterData.IsFocused then
    begin
      if MasterData.ќплачено¬ал > 0 then
        begin
          if MasterData.ќплачено¬ал < MasterData.—умма¬ал then
            Index1 := 8
          else
          if MasterData.ќплачено¬ал > MasterData.—умма¬ал then
            Index1 := 7
          else
          if MasterData.ќплачено¬ал = MasterData.—умма¬ал then
            Index1 := 6;
        end;
      if MasterData.GetDocState > 0 then
        Index2 := 10
      else
        Index2 := 9;
    end;
end;

procedure sgOrder_GetCellProps(Sender : TObject; aCol, aRow : Integer; aFont : TFont;
  var Background : TColor; var CellAlignment : TAlignment;
  var Layout : TTextLayout;
  var WrapText : Boolean; Selected, Fixed, Highlight : Boolean);
begin
  if (aCol > 0) and (aRow > 0) then
    CellAlignment := taRightJustify;
  case aRow of
    0 :
      CellAlignment := taCenter;
    1 :
      aFont.Color := clBlue;
    2 :
      aFont.Color := clGreen;
    3 :
      aFont.Color := clRed;
  end;
end;

procedure dbgData_GetRowParams(Sender : TObject; DrawFont : TFont; var BackColor : TColor; Highlight : Boolean);
begin
  if MasterData.IsFocused and
    (MasterData.ѕризнак—рокаќплаты <> 0) and
    (MasterData.—рокќплаты < CurrentDate) and
    (MasterData.GetDocState > 0) and
    (MasterData.ќплачено < MasterData.—умма) and
    ((MasterData.GetDocSign = 'Ќакладна€ќтпуска') or (MasterData.GetDocSign = 'Ќакладна€ѕрихода')) then
    if Highlight then
      BackColor := NoPaySel
    else
      BackColor := NoPayNorm;
end;
{$D+}

procedure pmiRefresh_Click(Sender : TObject);
begin
  MasterData.Refresh;
end;

procedure MDS_VPATimedAfterScroll(Sender : TObject);
begin
  if MasterData.IsFocused then
    tsState.SecondSelect := MasterData.GetDocState + 1
  else
    tsState.SecondSelect := -1;
end;

procedure miDocMove_Click(Sender: TObject);
var P:ICProcessing;
begin
  if MasterData.IsFocused and (MasterData.GetDocState>0) then
    begin
      P := CreateObject('ќбработки.ƒвижениеѕоƒокументу');
      P.Execute('ƒвижениеѕоƒокументу',MasterData.GetDoc);
    end;
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
ToolButton1:TO4ToolButton
ToolButton3:TO4ToolButton
tbDelete:TO4ToolButton
ToolButton2:TO4ToolButton
tbPrint:TO4ToolButton
ToolButton5:TO4ToolButton
tbSelect:TO4ToolButton
ToolButton6:TO4ToolButton
tbRefresh:TO4ToolButton
tbParam:TO4ToolButton
dbgData:TO4DBGrid
tsState:TO4TabSet
MDS:TO4DataSource
pmData:TO4PopupMenu
pmiAdd:TO4MenuItem
pmiEdit:TO4MenuItem
pmiFixUp:TO4MenuItem
pmiFixDown:TO4MenuItem
pmiDelete:TO4MenuItem
MenuItem1:TO4MenuItem
pmiPrintOne:TO4MenuItem
pmiPrint:TO4MenuItem
MenuItem2:TO4MenuItem
pmiSort:TO4MenuItem
pmiSelect:TO4MenuItem
MenuItem3:TO4MenuItem
pmiRefresh:TO4MenuItem
miDocMove:TO4MenuItem
pmAddDoc:TO4PopupMenu
miNaklOut:TO4MenuItem
miNaklIn:TO4MenuItem
