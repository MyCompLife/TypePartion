interface

uses
  System, DispIntf, ConstNames, Интерфейс, InitColors, Расчеты, Reports, Пользователи, НумерацияДокументов,
  РаботаСЖурналомИзменений;

implementation

var
  Constants : IC4VPAConst;
  Options : ICOptions;
  MasterData : ICDocuments;
  ParamsSt, Currency: ICDictionary;
  ChangeLock, isSave: Boolean;
  tblContents: ICValueTable;
  DateFrom, DateTo : DateTime;
  AddDoc : Boolean;

procedure MDS_VPABeforeOpen(Sender: TObject);
begin
  isSave := false;
  MasterData := MDS.GetMean;
  Options := GetOptions;
  Constants := GetConstants;
  ParamsSt := CreateObject('Справочники.ПараметрыОтчетаПоДоходамЗатратам');
  Currency := CreateObject('Справочники.Валюты');
  tblContents := CreateObject('ValueTable');
  tblContents.AddColumn('ДатаДокумента',vtcDate,0);
  tblContents.AddColumn('НомСтроки',vtcInteger,0);
  tblContents.AddColumn('Партнер',vtcLink,0);
  tblContents.AddColumn('ПартнерНазвание',vtcString,250);
  tblContents.AddColumn('Сумма',vtcFFt,2);
  tblContents.AddColumn('СуммаКасса',vtcFFt,2);
  tblContents.AddColumn('СуммаБанк',vtcFFt,2);
  tblContents.AddColumn('СуммаЗП',vtcFFt,2);
  tblContents.Open;
end;

procedure MDS_Append(Sender: TObject);
var
  Date, DateFrom, DateTo : DateTime;
begin  
  AddDoc := true;
  Date := CurrentDate;
  DateFrom := RoundDate(Date, rdWeek, False);
  DateTo := RoundDate(Date, rdWeek, True) - 1;

  MasterData.ДатаС := DateFrom;
  MasterData.ДатаПо := DateTo;
    SetDatesOnOpenForm(DateFrom, DateTo, eDateFrom, eDateTo);
  MasterData.ДатаС := DateFrom;
  MasterData.ДатаПо := DateTo;

  MasterData.Регион := GetUsersField('Регион');
  if VarAsBool(MasterData.@Регион.IsFocused) then
    MasterData.ПроцентНачисленияЗП := MasterData.Регион.ПроцентНачисленияЗП;
  MasterData.BaseID := VarAsInt(Constants.КодИБ);
  MasterData.Ответственный := GetEmplByName(GetUserName, eRespons);
  MasterData.Отпуск := 0;
  ParamsSt.Select;
  if VarAsBool(ParamsSt.@НачислениеЗП.IsFocused) then
    MasterData.Статья := ParamsSt.НачислениеЗП;
  if not Currency.FindByField('Активность', VarAsInt(True), True) then
    Currency := GetNatCurrency(Currency);
  if Currency.IsFocused then
    begin
      MasterData.Курс := Currency.GetTimedValue(Constants.UsedCurs, MasterData.ДатаДокумента);
      MasterData.Валюта := Currency;
    end;
  if MasterData.BaseID = 0 then
    raise('Заполните код информационной базы в значениях важных констант');
end;

procedure MDS_Validate(Sender: TObject);
var i : integer;
begin
  if MasterData.NumID = 0 then
    MasterData.NumID := УстановитьНомерДокумента(MasterData, '');
  tblContents.UseDataSource(0);
  i := 1;
  tblContents.SortBy('НомСтроки');
  tblContents.Select;
  while tblContents.SelectNext do
    begin
      tblContents.Edit;
      tblContents.НомСтроки := i;
      tblContents.Post;
      inc(i);
    end;
  MasterData.ФинДокументы := tblContents.PackedData;
  MasterData.ДатаС := DateFrom;
  MasterData.ДатаПо := DateTo;
end;

procedure tbRun_Click(Sender: TObject);
var
  Cursor: TCursor;
  dicRegions: ICDictionary;
begin
  if not VarAsBool(MasterData.@Регион.IsFocused) then
    begin
      ShowMessage('Выберите регион!');
      exit;
    end;
  if not VarAsBool(MasterData.@Партнер.IsFocused) then
    begin
      ShowMessage('Выберите служащего!');
      exit;
    end;
  MasterData.ClearContents;
  Cursor := WaitCursorStart;
  dicRegions := MasterData.Регион;
  dicRegions.SetSrvToClientPos;
  tblContents.Clear;
  tblContents.CopyDataToServer;
  Server.FillDoc(tblContents.SrvMean, DateFrom, DateTo, dicRegions.SrvMean, MasterData.ПроцентНачисленияЗП);
  tblContents.CopyDataFromServer;
  tblContents.SrvMean.Clear;
  tblContents.SortBy('НомСтроки');
  tblContents.SelectFirst;
  tblContents.UseDataSource(CtrlToVar(TVSList));
  MasterData.Сумма := tblContents.Total('СуммаЗП');
  MasterData.СуммаВВалюте := MasterData.Сумма/MasterData.Курс;
  edRegion.Enabled := false;
  WaitCursorFinish(Cursor);
end;

procedure tbClear_Click(Sender: TObject);
begin
  if tblContents.LineCount <> 0 then
    begin
      tblContents.Delete;
      tblContents.UseDataSource(CtrlToVar(TVSList));
    end
  else
    if GetUsersBlockedField('БлокировкаВыбораРегиона') = false then
      edRegion.Enabled := true;
  MasterData.Сумма := tblContents.Total('СуммаЗП');
  MasterData.СуммаВВалюте := MasterData.Сумма/MasterData.Курс;
end;

procedure Form_Open(Sender: TObject);
begin
  tblContents.PackedData := MasterData.ФинДокументы;
  tblContents.SortBy('НомСтроки');
  tblContents.SelectFirst;
  tblContents.UseDataSource(CtrlToVar(TVSList));
  if MasterData.GetDocState > 0 then
    SetReadOnlyForm(Form)
  else
    begin
      eData.Enabled := GetUDASet('ChangeDate');
      eRespons.Enabled := GetUDASet('changeresp');
      edRegion.Enabled := not GetUsersBlockedField('БлокировкаВыбораРегиона');
      if edRegion.Enabled then
        if tblContents.LineCount > 0 then
          edRegion.Enabled := false;
    end;
  DateFrom := MasterData.ДатаС;
  DateTo := MasterData.ДатаПо;
  eDateFrom.Text := DateToStr(DateFrom);
  eDateTo.Text := DateToStr(DateTo);
  eProc.Text := MasterData.ПроцентНачисленияЗП;
end;

procedure MDS_FieldChange(FieldName: string; Value: Variant);
begin
  isSave := true;
//  GoodMDSFieldChange(MasterData, FieldName, Value, ChangeLock);
end;

procedure edRegion_ActionExecute(Sender: TObject);
begin
  if VarAsBool(MasterData.@Регион.IsFocused) then
    MasterData.ПроцентНачисленияЗП := MasterData.Регион.ПроцентНачисленияЗП;
end;

procedure miFirstHalfYear_Click(Sender: TObject);
begin
  SetMenuDates(Sender, DateFrom, DateTo, eDateFrom, eDateTo);
  (Sender as TO4MenuItem).Checked := True;
end;

procedure tbSelectDates_Click(Sender: TObject);
var
  X, Y : Integer;
begin
  tbSelectDates.GetScreenPos(X, Y);
  Y := Y + tbSelectDates.Height;
  pmDates.Popup(X, Y)
end;

procedure eDateFrom_Change(Sender: TObject);
begin
  SetOneDates(Sender, DateFrom, DateTo);
end;

procedure edRegion_ActionClear(Sender: TObject);
begin
  MasterData.ПроцентНачисленияЗП := 0;
end;

procedure edProc_KeyDown(Sender: TObject; var Key: Integer);
begin
  if Key = 13 then
    begin
    end;
end;

procedure eProc_Change(Sender: TObject);
begin
  TblContents.UseDataSource(0);
  MasterData.UpdateLine(True);
  MasterData.TableAutoCalcFields := False;
  TblContents.CopyDataToServer;
  Server.ChangeTbl(TblContents.SrvMean, VarAsDec(eProc.text));
  TblContents.CopyDataFromServer;
  TblContents.SrvMean.Clear;
  MasterData.Сумма := tblContents.Total('СуммаЗП');
  MasterData.СуммаВВалюте := MasterData.Сумма/MasterData.Курс;
  MasterData.TableAutoCalcFields := True;
  TblContents.UseDataSource(CtrlToVar(TVSList));
  MasterData.ПроцентНачисленияЗП := VarAsDec(eProc.text);
end;

procedure Form_CloseQuery(var CanClose: Boolean);
begin
  if isSave and (VarAsBool(Options.GetServerPrm('CloseAck'))) and (MasterData.GetDocState = 0) then
    if (Form.ModalResult = mrCancel) and (MessageDlg('Закрить документ без сохранения?', mtCustom, ArrayOF(mbYes,mbNo),0) = mrNo)  then
      CanClose := false;
end;

procedure MDS_VPAAfterPost(Sender: TObject);
begin
 if AddDoc then
   ChangeDoc(clmtAppend,MasterData)
 else
   ChangeDoc(clmtEdit,MasterData);
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Panel1:TO4Panel
Label1:TO4Label
Label2:TO4Label
Label6:TO4Label
Label35:TO4Label
Label7:TO4Label
Label4:TO4Label
Label5:TO4Label
eData:TO4DBEdit
eNumber:TO4DBEdit
ePartner:TO4DBEdit
edRegion:TO4DBEdit
eRespons:TO4DBEdit
DBEdit1:TO4DBEdit
edProc:TO4DBEdit
eProc:TO4Edit
Panel2:TO4Panel
Label8:TO4Label
Label3:TO4Label
Label10:TO4Label
Label11:TO4Label
Panel8:TO4Panel
btOK:TO4Button
btCancel:TO4Button
eSum:TO4DBEdit
eCurSum:TO4DBEdit
eCurrency:TO4DBEdit
eCourse:TO4DBEdit
ToolBar1:TO4ToolBar
tbRun:TO4ToolButton
tbClear:TO4ToolButton
tbParam:TO4ToolButton
dbgListData:TO4DBGrid
ToolBar2:TO4ToolBar
Panel3:TO4Panel
lDateFrom:TO4Label
lDateTo:TO4Label
eDateFrom:TO4Edit
eDateTo:TO4Edit
tbSelectDates:TO4ToolButton
MDS:TO4DataSource
TDS:TO4DocContentsSource
TVSList:TO4TableValueSource
pmDates:TO4PopupMenu
miFirstHalfYear:TO4MenuItem
MenuItem4:TO4MenuItem
miFirstQuartal:TO4MenuItem
miJan:TO4MenuItem
miFeb:TO4MenuItem
miMar:TO4MenuItem
MenuItem5:TO4MenuItem
miSecondQuartal:TO4MenuItem
miApr:TO4MenuItem
miMay:TO4MenuItem
miJun:TO4MenuItem
MenuItem14:TO4MenuItem
miLastYear:TO4MenuItem
miSecondHalfYear:TO4MenuItem
MenuItem17:TO4MenuItem
miThirdQuartal:TO4MenuItem
miJul:TO4MenuItem
miAug:TO4MenuItem
miSep:TO4MenuItem
MenuItem22:TO4MenuItem
miFourthQuartal:TO4MenuItem
miOct:TO4MenuItem
miNov:TO4MenuItem
miDec:TO4MenuItem
MenuItem27:TO4MenuItem
miThisYear:TO4MenuItem
