interface

uses 
  System, DispIntf, ConstNames, Интерфейс, Расчеты, ДополнительныйФункционал;

implementation

procedure eOrders_Change(Sender : TObject); forward;
procedure tbRun_Click(Sender : TObject); forward;

var
  PostReal : Variant;
  UseConst : IC4VPAConst;
  TblGoods, TblPartGood : ICValueTable;
  LockCalc : Boolean;
  CursorVis : TCursor;
  LstOrder : ICValueList;
  Doc:ICDocuments;
  OwnerProc, MasterProc : ICProcessing;
  OutParam, OneDocByReturn : Variant;

procedure MDS_VPABeforeMove(Source : Variant; IsGroup : Boolean; var Accept : Boolean);
begin
  if not VarAsBool(Source.IsFocused) then
    begin
      Accept := False;
      exit;
    end;
  //TVSGoods.AfterScrollLock := True;
  CursorVis := WaitCursorStart;
end;

procedure MDS_VPAAfterMove(Sender : TObject);
begin
//  TVSGoods.AfterScrollLock := False;
  SetCursor(CursorVis);
end;

procedure Form_Execute(Sender : TObject; Mean : Variant; Params : Variant);
var
  S : ICDictionary;
begin
  MasterProc := Mean;
  if IsNil(Params) then
    exit;
  if VarAsBool(Params.IsType('Документы')) then
    begin   
      Doc := Params;
      PostReal := Doc.Партнер;
      if Doc.HasParam('DocByReturn') then
        OneDocByReturn := Doc.Params['DocByReturn'];
    end
  else
  if VarAsBool(Params.IsType('Справочники')) then
    PostReal := Params;
end;

procedure eOrders_Change(Sender : TObject);
begin
  if LockCalc then
    exit;
  TblPartGood.UseDataSource(0);
  TblPartGood.Clear();
  TblPartGood.CopyDataToServer();
  server.GetGoodWithPart(TblPartGood.SrvMean, LstOrder.CurIndex);
  TblPartGood.CopyDataFromServer();
  TblPartGood.SrvMean.Clear;
  TblPartGood.UseDataSource(CtrlToVar(TVSPartGood));
end;



procedure tbRun_Click(Sender : TObject);
var
  CursorVis : TCursor;
begin
  CursorVis := WaitCursorStart;
  try
    LstOrder.UseControl(0);
    server.InitSrvData(PostReal, dpDates.DateFrom, dpDates.DateTo, LstOrder.SrvMean, OneDocByReturn);
    Nil(OneDocByReturn);
    LstOrder.CopyDataFromServer;
    LstOrder.UseControl(CtrlToVar(eOrders));
    eOrders_Change(eOrders);
  finally
    SetCursor(CursorVis);
  end;
end;

procedure Form_ExecProc(Self, Caller : Variant; ProcID : string; InParams : Variant; var OutParams : Variant);
begin
 case StrLowerCase(ProcID) of
  'changepartner' :
    if IsObjFocused(InParams) and (not IsObjEQ(InParams,PostReal,false))then
      begin
        PostReal := InParams;
        tbRun_Click(tbRun);
      end; 
  'findgood' :
    begin 
      if TblPartGood.Locate('Товар', InParams) then
        OutParams := TblPartGood
      else
        OutParams := Null;
    end;
  'setgridfocus' : 
       dbgPartGood.SetFocus;
   'docbyreturn' :
     if IsObjFocused(InParams) then
       begin
         OneDocByReturn := InParams;
         PostReal :=  OneDocByReturn.Партнер;
         tbRun_Click(tbRun);
         //Form.SetFocus;
         OutParams := true;
       end;

 end;
end;

procedure miSortByCode_Click(Sender : TObject);
begin
  TblPartGood.SortBy('Код;Товар');
  miSortByCode.Checked := True;
  miSortByName.Checked := False;
end;

procedure miSortByName_Click(Sender : TObject);
begin
  TblPartGood.SortBy('Товар;Код');
  miSortByCode.Checked := False;
  miSortByName.Checked := True;
end;



procedure miFocusedOnCode_Click(Sender: TObject);
var OutParam:Variant;
begin
 if (not IsNull(Doc)) then
   Doc.ExecProc(Null,'GotoGoodsCodeEdit',Null,OutParam)
end;

procedure Form_Open(Sender: TObject);
begin
  if MasterProc.HasParam('OwnerProc') then
    begin
      OwnerProc := MasterProc.Params['OwnerProc'];
      PostReal := OwnerProc.Params['Partner'];
    end; 
  if MasterProc.HasParam('DocByReturn') then
   OneDocByReturn := MasterProc.Params['DocByReturn'];
  nbLists.PageIndex := 0;
  LockCalc := True;
  CursorVis := WaitCursorStart;
  dpDates.PeriodIndex := 3;
  try
    UseConst := GetConstants;
    LstOrder := CreateObject('СписокЗначений');
    TblPartGood := CreateObject('ТаблицаЗначений');
    TblGoods := CreateObject('ТаблицаЗначений');
    TblGoods.AddColumn('Код', vtcString, 20);
    TblGoods.AddColumn('ЕдИзм', vtcLink, 0);
    TblGoods.AddColumn('Товар', vtcLink, 0);
    TblGoods.AddColumn('ВалютаТовара', vtcLink, 0);
    TblGoods.AddColumn('КолОбщ', vtcFFT, 5);
    TblGoods.AddColumn('Цена', vtcFFT, 7);
    TblGoods.AddColumn('ЦенаВВалюте', vtcFFT, 7);
    TblGoods.AddColumn('ЦенаБезСкидкиНадбавки', vtcFFT, 7);
    TblGoods.AddColumn('КурсТовара', vtcFFT, 6);  
    TblGoods.Open;
    TblGoods.Tblname := 'tblBackGoods';
    TblGoods.SetColumnFormat('Цена;ЦенаВВалюте', UseConst.ФорматЦеныГРН);
    TblGoods.SetColumnFormat('КолОбщ', UseConst.ФорматКол);
    TblGoods.CopyTo('', TblPartGood);      
    LstOrder := CreateObject('СписокЗначений');
    TblPartGood.SetColumnFormat('Цена;ЦенаВВалюте', UseConst.ФорматЦеныГРН);
    TblPartGood.SetColumnFormat('КолОбщ', UseConst.ФорматКол);
    TblPartGood.TblName := 'tblBackPartGood';    
    server.InitSData;
    tbRun_Click(tbRun);
  finally
    LockCalc := False;
    SetCursor(CursorVis);
  end;
  eOrders_Change(Form);
end;

procedure dbgPartGood_DblClick(Sender: TObject);
begin
  if (not IsNil(OwnerProc)) and TblPartGood.IsFocused then
    OwnerProc.ExecProc(MasterProc,'addreturngood',TblPartGood,OutParam);
end;

procedure dbgGoods_DblClick(Sender: TObject);
begin
  if  (not IsNil(OwnerProc)) and TblGoods.IsFocused then
    OwnerProc.ExecProc(MasterProc,'addreturngood',TblGoods,OutParam);
end;

end._VPA_COMPONENTTLIST_DELIMITER_Form:TO4Form
Panel1:TO4Panel
dpDates:TO4DatePeriod
Panel4:TO4Panel
tbrData:TO4ToolBar
ToolButton1:TO4ToolButton
tbRun:TO4ToolButton
tbParam:TO4ToolButton
nbLists:TO4Notebook
dbgPartGood:TO4DBGrid
Panel3:TO4Panel
eOrders:TO4Edit
TVSPartGood:TO4TableValueSource
pmSort:TO4PopupMenu
miSortByCode:TO4MenuItem
miSortByName:TO4MenuItem
