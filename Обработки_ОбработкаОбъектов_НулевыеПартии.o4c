interface

uses
  System, DispIntf, Интерфейс, Расчеты, ConstNames, Reports;

implementation 

procedure tbRun_Click(Sender : TObject); forward;

var
  Options : ICOptions;
  CursorVis : TCursor;
  Stores, GoodList : ICValueList;
  S, UrPartner, ManPartner, Partner, Store, GoodDict : ICDictionary;
  GoodsTbl, StoreTbl, GoodsTblG, GoodsTblAll : ICValueTable;
  V: ICReport;
  IsDate : DateTime;

procedure SetGoodsTblColumns(GoodsTbl : ICValueTable; DoOpen : boolean = true);
begin
  GoodsTbl.Close();
  GoodsTbl.AddColumn('Код', lftString, 20);
  GoodsTbl.AddColumn('Товар', lftLink, 0);
  GoodsTbl.AddColumn('ЕдИзм', lftLink, 0); 
  GoodsTbl.AddColumn('Количество', vtcFft, 7);
  GoodsTbl.AddColumn('Партнер', lftLink, 0);
  GoodsTbl.AddColumn('ДатаПр', vtcDate, 0);
  GoodsTbl.AddColumn('Валюта', lftLink, 0);
  GoodsTbl.AddColumn('ВхЦенаБезНДС', vtcFft, 7);
  GoodsTbl.AddColumn('ВхЦенаВал', vtcFft, 7); 

  GoodsTbl.AddColumn('Партия', lftFloat, 0);


  GoodsTbl.AddColumn('ЦенаВВал', vtcFft, 7);
  GoodsTbl.AddColumn('СуммаВВал', vtcFft, 7);
  GoodsTbl.AddColumn('Курс', vtcFft, 2);
  GoodsTbl.AddColumn('Цена', vtcFft, 7);
  GoodsTbl.AddColumn('Сумма', vtcFft, 7);
  GoodsTbl.AddColumn('ЦенаОптВВал', vtcFft, 7);
  GoodsTbl.AddColumn('СуммаОптВВал', vtcFft, 7);
  GoodsTbl.AddColumn('ЦенаОпт', vtcFft, 7);
  GoodsTbl.AddColumn('СуммаОпт', vtcFft, 7);
  GoodsTbl.AddColumn('Склад', lftLink, 0);
  // 'Партнер;ДатаПр;Валюта;ВхЦенаБезНДС;ВхЦенаВал'
  if DoOpen then GoodsTbl.Open();  
end;

procedure CreateObjects;
begin
  Options := GetOptions;
  Stores := CreateObject('СписокЗначений');
  Store := CreateObject('Справочники.Склады');
  S := CreateObject('Справочники.Склады');
  Stores.AddValue(Trans('Все склады'),Null);
  S.Select;
  if S.FindByField('Активность', True, False) then
    Stores.AddValue(S.Название,S);                 //????    (мое предположение : активный склад должен быть первым)
  S.Select;
  while S.SelectNext do
    if not S.Активность = True then
      Stores.AddValue(S.Название,S); // или ('',S)
  Stores.UseControl(CtrlToVar(eStores));
  Stores.CurIndex := 0;
  GoodsTbl := CreateObject('ТаблицаЗначений');
  SetGoodsTblColumns(GoodsTbl,False);
  GoodsTbl.Open;
  SetGoodsTblColumnsFormat(GoodsTbl);
  StoreTbl := CreateObject('ТаблицаЗначений');
  StoreTbl.Close();
  StoreTbl.AddColumn('Код', lftString, 20);
  StoreTbl.AddColumn('Товар', lftLink, 0);
  StoreTbl.AddColumn('ЕдИзм', lftLink, 0);
  StoreTbl.AddColumn('Количество', vtcFft, 7);
  StoreTbl.AddColumn('ЦенаВВал', vtcFft, 7);
  StoreTbl.AddColumn('СуммаВВал', vtcFft, 7);
  StoreTbl.AddColumn('Валюта', lftLink, 0);
  StoreTbl.AddColumn('Курс', vtcFft, 2);
  StoreTbl.AddColumn('Цена', vtcFft, 7);
  StoreTbl.AddColumn('Сумма', vtcFft, 7);
  StoreTbl.AddColumn('ЦенаОптВВал', vtcFft, 7);
  StoreTbl.AddColumn('СуммаОптВВал', vtcFft, 7);
  StoreTbl.AddColumn('ЦенаОпт', vtcFft, 7);
  StoreTbl.AddColumn('СуммаОпт', vtcFft, 7);
  StoreTbl.AddColumn('Партия', lftFloat, 0);
  StoreTbl.AddColumn('Склад', lftLink, 0);
 // GoodsTbl.CopyColumnsTo(StoreTbl);
  StoreTbl.Open();
  SetGoodsTblColumnsFormat(StoreTbl);
  UrPartner := CreateObject('Справочники.ЮрПартнеры');
  ManPartner := CreateObject('Справочники.ФизЛица');
 //категории
  GoodDict := CreateObject('Справочники.Товары');
  GoodList := CreateObject('СписокЗначений');  
  GoodsTblG := CreateObject('ТаблицаЗначений');
  GoodsTblAll := CreateObject('ТаблицаЗначений');
end;

procedure tbRun_Click(Sender : TObject);
var i,j: Integer;
begin
  try
    CursorVis := WaitCursorStart;
    XGrid.ClearAll;
    XGrid.AddSection('Hed');
    GetStore(Stores, Store);
    GoodsTbl.Clear;
    GoodsTbl.CopyDataToServer;
    StoreTbl.Clear;
    StoreTbl.CopyDataToServer;
 // категории
    if not VarAsBool(GoodDict.Params['UseLevel']) then
      GoodDict.AssignSelectParamsOnSrv(Null)
    else
      begin
        GoodDict.GetCheckLevelsAsValueList(GoodList);
        if GoodDict.InteractiveUseLevels and (GoodList.Count = 0) then
           begin
             ShowMessage(CheckCtg);
             exit;
           end;
      end;
    GoodList.CopyDataToServer();
 //
    V.RunThreadProcess(Server.GetRunReportEP(GoodsTbl.SrvMean, StoreTbl.SrvMean, GoodList.SrvMean,
                              Partner, Store, VarAsBool(Options.GetServerPrm(ShowCodeUnitName)),
                              GoodDict.Params['UseLevel'], GoodDict.SrvMean,
                              IsDate, cbDetPart.Checked),
       ReportRunning);
    GoodsTbl.CopyDataFromServer;
    StoreTbl.CopyDataFromServer;
    StoreTbl.Select;
    i := 1;
    GoodsTbl.SortBy('Склад;Товар;Код');
    while StoreTbl.SelectNext do begin
      StoreTbl.AddToXGrid(CtrlToVar(XGrid), 'Store', 'Код;;;Количество;;;;;;Сумма;;;;СуммаОпт' , i, 1);
      GoodsTbl.SetRange(StoreTbl.Склад,StoreTbl.Склад);
      GoodsTbl.AddToXGrid(CtrlToVar(XGrid), 'Det', '-' , 0, 0);
      inc(i);
    end;
    GoodsTbl.SortBy('Код');
    GoodsTbl.SetRange(lblTotal, lblTotal);
    GoodsTbl.AddToXGrid(CtrlToVar(XGrid), 'Total', 'Код;;;Количество;;;;;;Сумма;;;;СуммаОпт' , 0, 0);

    XGrid.Cells(3,1,XGrid.RowCount,3).AdjustColWidths(0);
    XGrid.FixedColCount := 3;
    if XGrid.RowCount>4 then XGrid.FixedRowCount := 4;
    XGrid.Cell(1,1).Value := XGrid.Cell(1,1).Value + ' ' + DateToStr(IsDate);
  finally
    SetCursor(CursorVis);
  end;
  tbPrint.Enabled := true;
end;

procedure ePartner_ActionExecute(Sender : TObject);
var
  PartName : string;
begin
  PartName := ePartner.Text;
  case VarAsInt(ePartnerType.ItemIndex) of
    0 : begin
      if UrPartner.SelectInForm('ВыборПартнера', PartName, Null) then begin
        ePartner.Text := PartName;
        Partner := UrPartner;
      end;
    end;
    1 : begin
      if ManPartner.SelectInForm('ВыборФизЛица', PartName, Null) then begin
        ePartner.Text := PartName;
        Partner := ManPartner;
      end;
    end;
  end;
end;

procedure ePartner_ActionClear(Sender : TObject);
begin
  Partner := Null;
end;

procedure tbPrint_Click(Sender : TObject);
begin
  XGrid.Print(V.GetActiveFormComment(), True);
end;

procedure Form_Execute(Sender : TObject; Mean : Variant; Params : Variant);
begin
  V := Mean;
  tbXTools.Visible := GetUDASet('XTools');
  CreateObjects;
  Server.CreateSrvObjects;
//  GoodDict.OpenFormInplace('КатегорииТоваров', CtrlToVar(pGoodsCtg));
  eDate.Text := DateToStr(CurrentDate);
  IsDate := StrToDate(eDate.text);
  XGrid.AddSection('Hed');
  tbRun_Click(tbRun);
end;


procedure eDateFrom_Change(Sender : TObject);
begin
  IsDate := StrToDate(eDate.text);
end;

procedure tbXTools_Click(Sender : TObject);
begin
  XGridTools.Visible := not XGridTools.Visible;
  if XGridTools.Visible
   then tbXTools.ImageIndex := 98 else tbXTools.ImageIndex := 44;
end;

procedure tbExcel_Click(Sender : TObject);
begin
  XGrid.ExportToExcel;
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4Form
Label2:TO4Label
Panel1:TO4Panel
Panel2:TO4Panel
GroupBox2:TO4GroupBox
eStores:TO4Edit
Panel3:TO4Panel
GroupBox3:TO4GroupBox
ePartnerType:TO4Edit
ePartner:TO4Edit
cbDetPart:TO4CheckBox
Panel4:TO4Panel
lDateFrom:TO4Label
eDate:TO4Edit
XGrid:TO4XGrid
XGridTools:TXGridTools
tbrData:TO4ToolBar
tbRun:TO4ToolButton
tbPrint:TO4ToolButton
ToolButton2:TO4ToolButton
tbXTools:TO4ToolButton
tbExcel:TO4ToolButton
ToolButton1:TO4ToolButton
TableValueSource1:TO4TableValueSource
pmDates:TO4PopupMenu
miFirstHalfYear:TO4MenuItem
MenuItem7:TO4MenuItem
miFirstQuartal:TO4MenuItem
miJan:TO4MenuItem
miFeb:TO4MenuItem
miMar:TO4MenuItem
MenuItem9:TO4MenuItem
miSecondQuartal:TO4MenuItem
miApr:TO4MenuItem
miMay:TO4MenuItem
miJun:TO4MenuItem
MenuItem14:TO4MenuItem
miLastYear:TO4MenuItem
miSecondHalfYear:TO4MenuItem
MenuItem17:TO4MenuItem
miThirdQuartal:TO4MenuItem
miJul:TO4MenuItem
miAug:TO4MenuItem
miSep:TO4MenuItem
MenuItem22:TO4MenuItem
miFourthQuartal:TO4MenuItem
miOct:TO4MenuItem
miNov:TO4MenuItem
miDec:TO4MenuItem
MenuItem27:TO4MenuItem
miThisYear:TO4MenuItem
