interface

uses
  System, DispIntf, ConstNames, Интерфейс, InitColors, Расчеты, Пользователи, ДополнительныйФункционал;

implementation

var
  MasterData : ICJournal;
  Options : ICOptions;
  Users : ICDictionary;
  PrintList: ICValueList;
  PrintFormsTbl: ICValueTable;
  PreView : Boolean;



procedure MDS_VPABeforeOpen(Sender : TObject);
begin
  MasterData := MDS.GetMean;
end;

procedure Form_Open(Sender : TObject);
var
  Nobody : TO4ToolBar; // заглушка на NIL
  i : Integer;
  DateBeg, DateEnd: DateTime;
  ItemMenu : TO4MenuItem;
begin
  Options := GetOptions;
  MakeInterface(tbrData, Nobody, dbgData); 
  miDocMove.Visible := GetUDASet('viewdocmove');  
  miInfoChange.Visible := GetUDASet('viewdochistory');
  for i := 0 to MasterData.StateCount - 1 do
    tsState.Tabs.Add(Trans(MasterData.GetStateName(i)));
  MasterData.DefineSelectParams(True);
//-------------------- выборка по полю ------------------------------
  Users := GetDictUser;
  if IsObjFocused(Users) and VarAsBool(Users.@Склад.IsFocused) and VarAsBool(Users.БлокировкаВыбораСклада) then
    begin
      MasterData.SetFieldFilter('Склады','LIKE', '%'+FloatToHexStr(Users.Склад.GetUniID)+'%','','',Null);
      MasterData.Refresh;
    end;

  tsState.TabIndex := MasterData.GetDocStateRange + 1;
  GetPrintersList(PrintList, edPrinters, MasterData.GetSign);

  MakeUserInterface(MasterData.GetSign, pPrintPrm, PreView, PrintFormsTbl);
  if not isNil(PrintFormsTbl) then
    begin
      btnPrint.Style := tbsDropDown;
      btnPrint.DropdownMenu := pmPrintForms;
      if PrintFormsTbl.LineCount = 0 then
        btnPrint.Enabled := false; //если не указана печ.форма или не спозиционирован документ, тогда блокируется кнопка печати
      pmiPrintOne.Enabled := btnPrint.Enabled;
      PrintFormsTbl.DoNumbering('НомСтроки',1,1);
      PrintFormsTbl.Select;
      while PrintFormsTbl.SelectNext do
        begin
          ItemMenu := form.FindComponent('miPrinForm' + VarAsStr(PrintFormsTbl.НомСтроки)) as TO4MenuItem;
          ItemMenu.Caption := PrintFormsTbl.ПечФорма;
          ItemMenu.Visible := true;
          ItemMenu.Tag := PrintFormsTbl.НомСтроки;
          if PrintFormsTbl.НомСтроки = 1 then
            ItemMenu.Default := true;
        end;
    end;
end;

procedure tsState_Change(Sender : TObject; NewTab : Integer; var AllowChange : Boolean);
begin
  MasterData.SetDocStateRange(Newtab - 1);
  MasterData.Select;
end;

procedure pmiSelect_Click(Sender : TObject);
begin
  MasterData.DefineSelectParams(False);
  tsState.TabIndex := MasterData.GetDocStateRange + 1;
end;

procedure pmiPrint_Click(Sender : TObject);
var
  PrinterName: String;
begin
  if pPrintPrm.Visible then
    PrinterName := PrintList.GetStr(edPrinters.ItemIndex);
  PrintOnUserDevice('Обработки.ПечУнивЖурнала', 'ПечУнивЖурналаСТипомИВалютой', PrinterName, MasterData, PreView)
end;

procedure pmiPrintOne_Click(Sender : TObject);
var
  V : ICProcessing;
begin
  if MasterData.IsFocused then
    begin
      V := CreateObject('Обработки.ПечВнутрПеремещ');
      V.PrintForm('', not VarAsBool(Options.GetServerPrm(DirectPrint)), MasterData.GetDoc())
    end;
end;      

procedure btnPrint_Click(Sender: TObject);
var
  PrinterName: String;
  ObjTag : Integer;
begin
  if Sender.ClassName = 'TO4ToolButton' then
    ObjTag := (Sender as TO4ToolButton).Tag;
  if Sender.ClassName = 'TO4MenuItem' then
    ObjTag := (Sender as TO4MenuItem).Tag;
  if pPrintPrm.Visible then
    PrinterName := PrintList.GetStr(edPrinters.ItemIndex);
  PrintFormsTbl.SortBy('НомСтроки');
  if PrintFormsTbl.Find(ObjTag) then
    PrintOnUserDevice('Обработки.ПечВнутрПеремещ', PrintFormsTbl.ПечФорма, PrinterName, MasterData.GetDoc, PreView);
end;

{$D-}
procedure dbgData_GetImageIndex(Sender : TObject; var Index1, Index2 : Integer);
begin
  if MasterData.IsFocused then
    begin
      if MasterData.GetDocState > 0 then
        Index1 := 10
      else
        Index1 := 9;
      if MasterData.Подтверждена = 1 then
        Index2 := 1;
    end;
end;
{$D+}

procedure pmiRefresh_Click(Sender : TObject);
begin
  MasterData.Refresh();  
end;

procedure MDS_VPATimedAfterScroll(Sender : TObject);
begin
  if MasterData.IsFocused then
    tsState.SecondSelect := MasterData.GetDocState + 1
  else
    tsState.SecondSelect := -1;
end;
 
function GetEmplByName(EmplName : string) : ICDictionary;
Var
  Respons: ICDictionary;
begin
  if IsNil(Respons) then
    Respons := CreateObject('Справочники.Служащие');
  if Respons.FindByField('ПолноеНазвание', EmplName, False) then
    begin
      Result := Respons;
    end
  else
    nil(Result);
end;

procedure miCreateDocBarCode_Click(Sender: TObject);
var
  TblOwnerDoc : ICValueTable;
  DocOwner, Doc : ICDocuments;
begin
   DocOwner := MasterData.GetDoc;
   Doc := CreateObject('Документы.ПечатьШтрихКодов');
   Doc.Select;
   Doc.Append;
   Doc.ДатаДокумента := CurrentDateTime;
   Doc.Партнер := GetEmplByName(GetUserName);
   DocOwner.SelectLines;
   while DocOwner.SelectNextLine do
     begin
       Doc.AppendLine;
       Doc.Товар := DocOwner.Товар;
       Doc.Цена := DocOwner.Товар.ОптЦена;
       Doc.Количество := 1;
       Doc.PostLine;
     end;
  Doc.Post;
  ShowMessage('Документ создан успешно.');
end;

procedure miCheck_Click(Sender: TObject);
var
  V: ICProcessing;
  Doc: ICDocuments;
begin
 if MasterData.IsFocused and ((MasterData.GetDocSign='НакладнаяПрихода') or (MasterData.GetDocSign='НакладнаяВнутрПеремещ')) and
   ((VarAsInt( MasterData.Подтверждена)=0) or (MessageDlg('Накладная уже подтверждена! Открыть окно подтверждения?',mtConfirmation,ArrayOf(mbYes,mbNo))=mrYes)) then
   begin
     Doc := MasterData.GetDoc;
     V := CreateObject('Обработки.ПодтверждениеНаличияТовара');
     V.Execute('Подтверждение',Doc);
     MasterData.Refresh;
    end;
end;

procedure btSaveActivPrinter_Click(Sender: TObject);
var
  PrinterName: String;
begin
  PrinterName := PrintList.GetStr(PrintList.CurIndex);
  SaveUserActivePrinter(PrinterName, MasterData.GetSign);
//  Options.SetServerPrm('АктивныйПринтер' + MasterData.GetSign + Form.Caption, PrinterName);
end;



procedure miDocMove_Click(Sender: TObject);
var P:ICProcessing;
begin
  if MasterData.IsFocused and (MasterData.GetDocState>0) then
    begin
      P := CreateObject('Обработки.ДвижениеПоДокументу');
      P.Execute('ДвижениеПоДокументу',MasterData.GetDoc);
    end;
end;    

procedure miInfoChange_Click(Sender: TObject);
var
  V: ICProcessing;
begin
  V := CreateObject('Обработки.ИнфоИзменений');
  V.Execute('ИнфоИзменений', MasterData.GetDoc);
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Splitter1:TO4Splitter
tsState:TO4TabSet
dbgData:TO4DBGrid
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
ToolButton1:TO4ToolButton
ToolButton3:TO4ToolButton
tbDelete:TO4ToolButton
ToolButton2:TO4ToolButton
btnPrint:TO4ToolButton
ToolButton5:TO4ToolButton
tbSelect:TO4ToolButton
ToolButton6:TO4ToolButton
tbRefresh:TO4ToolButton
tbParam:TO4ToolButton
DBMemo1:TO4DBMemo
pPrintPrm:TO4Panel
Label4:TO4Label
btSaveActivPrinter:TO4Button
edPrinters:TO4Edit
pmData:TO4PopupMenu
pmiAdd:TO4MenuItem
pmiEdit:TO4MenuItem
pmiFixUp:TO4MenuItem
pmiFixDown:TO4MenuItem
pmiDelete:TO4MenuItem
MenuItem10:TO4MenuItem
pmiPrintOne:TO4MenuItem
pmiPrint:TO4MenuItem
MenuItem2:TO4MenuItem
pmiSort:TO4MenuItem
pmiSelect:TO4MenuItem
MenuItem4:TO4MenuItem
pmiRefresh:TO4MenuItem
MenuItem1:TO4MenuItem
miCreateDocBarCode:TO4MenuItem
miCheck:TO4MenuItem
miDocMove:TO4MenuItem
miInfoChange:TO4MenuItem
MDS:TO4DataSource
pmPrintForms:TO4PopupMenu
miPrinForm1:TO4MenuItem
miPrinForm2:TO4MenuItem
miPrinForm3:TO4MenuItem
miPrinForm4:TO4MenuItem
miPrinForm5:TO4MenuItem
miPrinForm6:TO4MenuItem
miPrinForm7:TO4MenuItem
miPrinForm8:TO4MenuItem
miPrinForm9:TO4MenuItem
miPrinForm10:TO4MenuItem
