interface

uses
  System, DispIntf, ConstNames, –асчеты, ‘иксаци€,
  –абота—ѕеременными, –абота—ќбъектами, –абота—“аблицами«начений, –абота—∆урналом»зменений;

implementation

var
  ApplyTbl : ICValueTable;
  AccsGood : ICAccs;
  FullName : string;

procedure CanChangeStateUp(Doc : ICDocuments; var Accept : Boolean);
begin
  FullName := CanFixDel(Doc, Accept, DecGood, UniFix, FixAck);
  if Accept then
    case Doc.GetDocState of
      0 :
        begin
          ApplyTbl := CreateObject('“аблица«начений');
          AccsGood := CreateObject('јккумул€торы.ќстатки“оваров');
          CheckAllRestrictions(Doc, ApplyTbl, FullName, Accept, True);
        end;
      1 :
        ;
    end;
end;

procedure DoChangeStateUp(Doc : ICDocuments);
var
  Constants : IC4VPAConst;
begin
  Constants := GetConstants;
  case Doc.GetDocState of
    1 :
      begin
        if VarAsBool(Constants.UseReserv) then
          begin
            if not Doc.RunThreadProcess(server.GetChangeStateUpEP(AccsGood.SrvMean, ApplyTbl.SrvMean, True), UniFixProgress + FullName) then
              raise(emsgFixFail)
          end
        else
          if not Doc.RunThreadProcess(server.GetChangeStateUpEP(AccsGood.SrvMean, ApplyTbl.SrvMean, False), UniFixProgress + FullName) then
            raise(emsgFixFail); 
        ChangeDoc(clmtStateUp, Doc);
        //первое событие
        Doc.SendEvent(evCount, Unassigned, False);
        Doc.SendEvent(evNakladn, Unassigned, False);
        if VarAsBool(Constants.UseReserv) then
          Doc.SendEvent(evResCount, Unassigned, False);
      end;
    2 :
      ;
  end;
end;

procedure CanChangeStateDown(Doc : ICDocuments; var Accept : Boolean);
begin
  FullName := CanFixDel(Doc, Accept, DecGood, UniUnFix, FixAck);
  //первое событие
  //первое событие
end;

procedure DoChangeStateDown(Doc : ICDocuments);
begin        
  ChangeDoc(clmtStateDown, Doc);
  Doc.SendEvent(evCount, Unassigned, False);
  Doc.SendEvent(evNakladn, Unassigned, False);
end;

procedure CanDelete(Doc : ICDocuments; var Accept : Boolean);
begin
  FullName := CanFixDel(Doc, Accept, DecGood, UniDel, DelAck);
  if Accept then
    ChangeDoc(clmtDelete, Doc);
end;

procedure DoDelete(Doc : ICDocuments);
begin         
  Doc.SendEvent(evCount, Unassigned, False);
  Doc.SendEvent(evNakladn, Unassigned, False);
end;

procedure CanChangeBuhStateUp(Doc : ICDocuments; var Accept : Boolean);
begin
  if (not Doc.ISGroupAction) or (Doc.FirstInGroupAction) then
    begin
      Doc.BuhWizard := CreateObject('Ѕух”чет.Ѕух”чет').CreateWizard();
      Accept := Doc.BuhWizard.OpenAskForm(Doc);
    end
  else
    Accept := Doc.BuhWizard.AsceptUp;
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4Form
