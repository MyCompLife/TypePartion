interface

uses
  System, DispIntf, ConstNames, Расчеты;

implementation

var
  MasterData : ICDocuments;
  TLF, ADR, RRR, MYF : ICDictionary;
  CNV : ICWriNums;
  Tbl : ICValueTable;
  OutCome : Boolean;

procedure Form_BeginPrint(PrintForm : TO4PrintForm);
var
  NilMaster : TRBDetailBand;
begin
  MasterData := Form.GetParams; //Form.GetMean;
  OutCome := False;
  if MasterData.HasField('Отпуск') then
    OutCome := VarAsBool(MasterData.Отпуск);
  if OutCome then //меняется порядок печати
    begin    
      if MasterData.HasField('Партнер') or  MasterData.HasField('Покупатель') then
        begin
         lblMe.Caption := 'ПОСТАЧАЛЬНИК:';
         lblPart.Caption := 'КОМУ:';
        end;
      dbPartner.Master := NilMaster;
      dbMe.Master := dbTop;
    end
  else
    begin
      lblPart.Caption := 'ПОСТАЧАЛЬНИК:';
      lblMe.Caption := 'КОМУ:';
    end;
  TLF := CreateObject('Справочники.Телефоны');
  ADR := CreateObject('Справочники.Адреса');
  RRR := CreateObject('Справочники.РасчСчета');
  MYF := CreateObject('Справочники.ВашеПредприятие');
  CNV := CreateObject('ЧислаПрописью');
  Tbl := CreateObject('ТаблицаЗначений');
end;

procedure Structure1_ROOT_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
var
  TmpPartner : ICDictionary;
  Dover : string;
begin
  with Table do
    begin
      Value['NUMBER'] := MasterData.НомерДокумента;
      Value['Date'] := MasterData.ДатаДокумента;
      if MasterData.HasField('Покупатель') and VarAsBool(MasterData.@Покупатель.IsFocused) then
        TmpPartner := MasterData.Покупатель
      else  
      if MasterData.HasField('Партнер') then
        TmpPartner := MasterData.Партнер;
      if IsObjFocused(TmpPartner) then
        begin
          Value['PARTADDR'] := GetActiv(ADR, 'ПочтИндекс', TmpPartner) + ', ' +
            GetActiv(ADR, 'Город.Название', TmpPartner) + ', ' +
            GetActiv(ADR, 'Адрес', TmpPartner);
          Value['PARTPHONE'] := '(' + GetActiv(TLF, 'КодГорода', TmpPartner) + ') ' +
            GetActiv(TLF, 'Номер', TmpPartner);
          Value['PARTNAME'] := GetPartName(TmpPartner);
        end
      else
        begin
         dbPartner.Visible := false;
         dbPartnerAdr.Visible := false;
         dbPartnerPhone.Visible := false;
         dbMeReq.Visible := false;
         dbMeBank.Visible := false;
        end;
      Value['Summa'] := MasterData.Сумма;
      if MasterData.HasField('СуммаБезНДС') then
        Value['SumNT'] := MasterData.СуммаБезНДС
      else
        Value['SumNT'] := MasterData.Сумма;  
      if MasterData.HasField('СуммаНДС') then
        Value['Tax'] := MasterData.СуммаНДС;

      if MasterData.HasField('ОбщаяМасса') and MasterData.HasField('ОбщаяПлощадь') then
        begin
          Value['Massa'] := MasterData.ОбщаяМасса;
          Value['Square'] := MasterData.ОбщаяПлощадь;
        end;

      if MasterData.HasField('Доверенность') and (VarAsStr(MasterData.Доверенность) <> '') then
        begin     
          Dover := MasterData.Доверенность;
          Value['DOVERDATE'] := MasterData.ДатаДоверенности;
          Value['DOVEROSN'] := MasterData.ОснованиеДоверенности;
          Value['DOVERNUM'] := MasterData.Доверенность;
          if VarAsBool(MasterData.@ЧерезКого.IsFocused) then
            Value['DOVERRESP'] := MasterData.ЧерезКого.NameField + ' ' +
              MasterData.ЧерезКого.ИмяОтчество;
        end
      else
        begin
          bndHdDovDET.Visible := false;
        end;

      if MasterData.HasField('СуммаВозврТары') then
        Value['SUMREVTARE'] := MasterData.СуммаВозврТары;
      if MasterData.HasField('СуммаТары') then
        begin
          Value['SUMNTTARE'] := MasterData.СуммаБезНДСТары;
          Value['TAXTARE'] := MasterData.СуммаНДСТары;
          Value['SUMTARE'] := MasterData.СуммаТары;
        end;
      if MasterData.HasField('СуммаТрансп') then
        begin
          Value['TRANSNT'] := MasterData.СуммаБезНДСТрансп;
          Value['TRANSTAX'] := MasterData.СуммаНДСТрансп;
          Value['TRANSSUM'] := MasterData.СуммаТрансп;
        end; 
      if MasterData.HasField('СуммаСкидкиНадбавки') then
        begin
          Value['ISLOW'] := MasterData.СуммаСкидкиНадбавки < 0;
          if MasterData.СуммаСкидкиНадбавки < 0 then
            begin
              Value['LOWHIGHNT'] := -MasterData.СуммаБезНДССкидкиНадбавки;
              Value['LOWHIGHTAX'] := -MasterData.СуммаНДССкидкиНадбавки; ;
              Value['LOWHIGHSUM'] := -MasterData.СуммаСкидкиНадбавки;
              if (MasterData.Сумма - MasterData.СуммаСкидкиНадбавки) <> 0 then
                Value['LowHigh'] := FormatFloat('0.00', -(MasterData.СуммаСкидкиНадбавки /
                  (MasterData.Сумма - MasterData.СуммаТрансп - MasterData.СуммаСкидкиНадбавки)) * 100) + '%';
            end
          else
            begin
              Value['LOWHIGHNT'] := MasterData.СуммаБезНДССкидкиНадбавки;
              Value['LOWHIGHTAX'] := MasterData.СуммаНДССкидкиНадбавки;
              Value['LOWHIGHSUM'] := MasterData.СуммаСкидкиНадбавки; ;
              if (MasterData.Сумма + MasterData.СуммаСкидкиНадбавки) <> 0 then
                Value['LowHigh'] := FormatFloat('0.00', (MasterData.СуммаСкидкиНадбавки /
                  (MasterData.Сумма - MasterData.СуммаТрансп - MasterData.СуммаСкидкиНадбавки)) * 100) + '%';
            end;
        end;
    end;
  MasterData.SaveContents('', Tbl);
  if OutCome then
    begin  
      if Tbl.HasField('ЦенаБезНДС') then
        Tbl.GroupBy('Товар;ЦенаБезНДС;Цена', 'Количество')
      else
        Tbl.GroupBy('Товар;Цена', 'Количество');
    end;
  Tbl.DoCalculation('СуммаСтроки', 'Количество*Цена');
  //для заполнения поля Код в таблице, с последующей сортировкой
  Tbl.DoGetLinks('Код=Товар.Код;ЕдИзм=Товар.ЕдИзм');
  //Tbl.SortBy('Код');
  //для сортировки по названию товара
  Tbl.SortBy('Товар');
  Tbl.Select;
  lbSumInWord.Caption := CNV.MoneyToStr(MasterData.Сумма, 'ГРН', 1058); //C_GRN,C_KOP,True);
end;

procedure Structure1_ME_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
begin
  if GetMyFirm(Table, MYF, ADR, TLF, RRR) then
    with Table do
      begin
        if not IsNull(Value['BankTown']) then
          Value['BankName'] := Value['BankName'] + ',' + Value['BankTown'];
        Value['PayAccNum'] := Value['PayAccNum'] + ' в ' + Value['BankName'];
      end;
end;

procedure Structure1_ROOT_Det_GetData(Table : TRBTable; Index, Count : Integer; var Accept : Boolean);
begin
  Accept := Tbl.SelectNext();
  if not Accept then
    exit;
  with Table do
    begin
      Value['Code'] := Tbl.Код;
      Value['NAME'] := Tbl.DefValue['Товар'];
      Value['UnitName'] := Tbl.DefValue['ЕдИзм'];
      Value['Count'] := Tbl.Количество;
      if Tbl.HasField('ЦенаБезНДС') then
        Value['PriceNT'] := Tbl.ЦенаБезНДС
      else
       Value['PriceNT'] := Tbl.Цена;
      Value['Price'] := Tbl.Цена;
      Value['SummaStr'] := Tbl.СуммаСтроки;
    end;
end;

procedure bndFtRetTara_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  lblTaxRevTara.Caption := FormatFloat('0.00', 0);
  if MasterData.HasField('СуммаВозврТары') then
    Accept := MasterData.СуммаВозврТары <> 0
  else
    Accept := False;
end;

procedure bndFtTara_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  if MasterData.HasField('СуммаТары') then
    Accept := MasterData.СуммаТары <> 0
  else
    Accept := False;
end;

procedure bndFtMinus_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Accept := MasterData.HasField('СуммаСкидкиНадбавки') and not (MasterData.СуммаСкидкиНадбавки >= 0);
end;

procedure bndFtPlus_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Accept := MasterData.HasField('СуммаСкидкиНадбавки') and not (MasterData.СуммаСкидкиНадбавки <= 0);
end;

procedure bndFtTTV_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Accept := False;
  if MasterData.HasField('СуммаТрансп') then
    Accept := MasterData.СуммаТрансп <> 0;
end;

procedure bndFtMassa_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Accept := MasterData.HasField('ОбщаяМасса') and MasterData.HasField('ОбщаяПлощадь');
  if not Accept then
    exit;
  Accept := (MasterData.ОбщаяМасса <> 0) or (MasterData.ОбщаяПлощадь <> 0);
end;

procedure dbTop_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Label1.Caption := StrUpperCase(MasterData.GetView());
end;

procedure dbMeAdr_BeforePrint(Band : TRBCustomBand; var Accept : Boolean);
begin
  Accept := OutCome;
end;

procedure Structure1_ROOT_Det_GetCount(Table : TRBTable; var Count : Integer);
begin
  Count := Tbl.LineCount;
end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4PrintForm
dbLogotype:TRBDetailBand
imgMyLogo:TRBImage
dbTop:TRBDetailBand
Label1:TRBLabel
Label84:TRBLabel
Label2:TRBLabel
Label3:TRBLabel
Label4:TRBLabel
dbMe:TRBDetailBand
lblMe:TRBLabel
Label11:TRBLabel
dbPartner:TRBDetailBand
lblPart:TRBLabel
Label94:TRBLabel
dbPartnerAdr:TRBDetailBand
Label95:TRBLabel
Label91:TRBLabel
dbPartnerPhone:TRBDetailBand
Label92:TRBLabel
Label96:TRBLabel
dbMeAdr:TRBDetailBand
Label7:TRBLabel
Label15:TRBLabel
dbMeReq:TRBDetailBand
Label8:TRBLabel
Label16:TRBLabel
Label9:TRBLabel
Label17:TRBLabel
Label25:TRBLabel
Label24:TRBLabel
bndHdDovDET:TRBBand
Label59:TRBLabel
Label52:TRBLabel
Label53:TRBLabel
Label55:TRBLabel
Label56:TRBLabel
Label57:TRBLabel
Label54:TRBLabel
Label58:TRBLabel
bndHdDet:TRBBand
Label45:TRBLabel
Label26:TRBLabel
Label27:TRBLabel
Label28:TRBLabel
Label29:TRBLabel
Label30:TRBLabel
Label31:TRBLabel
Label32:TRBLabel
dbndGoods:TRBDetailBand
Label34:TRBLabel
Label35:TRBLabel
Label36:TRBLabel
Label37:TRBLabel
Label38:TRBLabel
Label39:TRBLabel
Label40:TRBLabel
SysData1:TRBSysData
bndFtHd:TRBBand
Label33:TRBLabel
Label41:TRBLabel
Label42:TRBLabel
Label43:TRBLabel
bndFtRetTara:TRBBand
Label62:TRBLabel
Label63:TRBLabel
lblTaxRevTara:TRBLabel
Label65:TRBLabel
bndFtTara:TRBBand
Label66:TRBLabel
Label67:TRBLabel
Label68:TRBLabel
Label69:TRBLabel
bndFtMinus:TRBBand
Label44:TRBLabel
Label46:TRBLabel
Label60:TRBLabel
Label61:TRBLabel
Label85:TRBLabel
bndFtPlus:TRBBand
Label70:TRBLabel
Label71:TRBLabel
Label72:TRBLabel
Label73:TRBLabel
Label86:TRBLabel
bndFtTTV:TRBBand
Label74:TRBLabel
Label75:TRBLabel
Label76:TRBLabel
Label77:TRBLabel
bndFtALL:TRBBand
Label78:TRBLabel
Label79:TRBLabel
Label80:TRBLabel
Label81:TRBLabel
bndFtMassa:TRBBand
Label5:TRBLabel
Label49:TRBLabel
Label50:TRBLabel
Label82:TRBLabel
bndFtDET:TRBBand
Label47:TRBLabel
lbSumInWord:TRBLabel
Label48:TRBLabel
Label51:TRBLabel
dbMeBank:TRBDetailBand
Label6:TRBLabel
Label12:TRBLabel
Structure1:TRBStructure
