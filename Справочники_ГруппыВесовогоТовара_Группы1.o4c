interface

uses
  System, DispIntf, РаботаСКомпонентамиVCL, РаботаСПеременными, РаботаСОбъектами,
  РаботаСТаблицамиЗначений, РаботаСоСправочниками;

implementation
var
  MasterData, DetWeigtGoods : ICDictionary;
  OwnerDic : Variant;

procedure tbRefresh_Click(Sender: TObject);
begin
  MasterData.Refresh;
end;

procedure MDS_VPABeforeOpen(Sender: TObject);
begin
  MasterData := MDS.GetMean;
  MasterData.SortByField('НомПозиции');
  DetWeigtGoods := SetDetailDict(MasterData, 'ВессовойТовар', 'ТоварыВесовойТовар', CtrlToVar(pGoods));

end;

procedure Form_Open(Sender: TObject);
begin
//  MasterData.Params[prmInterfaceType] := itMainForm;
//  MakeStandartInterface(MasterData, Form, 'tbrData', 'dbgData');
  MasterData.Params['Type'] :=1;

end;

procedure miRefresh_Click(Sender: TObject);
begin
  MasterData.Refresh;
end;

procedure tbLevelUp_Click(Sender: TObject);
Var
  i: Integer;
  TmpDic, OwnerDic : ICDictionary;
begin
  OwnerDic := MasterData._GetOwner;
  TmpDic := CreateObject('Справочники.ГруппыВесовогоТовара');
  TmpDic.UseMaster(OwnerDic);
  TmpDic.Select;
  i:= MasterData.НомПозиции;
  if i-1<>0 then
    If  VarAsBool(TmpDic.FindByField('НомПозиции',i-1,false)) then
      begin
        MasterData.Edit;
        MasterData.НомПозиции:=i-1;
        MasterData.Post;
        TmpDic.Edit;
        TmpDic.НомПозиции:=i;
        TmpDic.Post;
        MasterData.ApplyUpdates;
        TmpDic.ApplyUpdates;
        MasterData.Refresh;
      end
    else
      begin
        MasterData.Edit;
        MasterData.НомПозиции:=i-1;
        MasterData.Post;
        MasterData.ApplyUpdates;
        MasterData.Refresh;
      end;

end;

procedure tbLevelDown_Click(Sender: TObject);
Var
  i,j: Integer;
  TmpDic, OwnerDic : ICDictionary;
begin
  OwnerDic := MasterData._GetOwner;
  TmpDic := CreateObject('Справочники.ГруппыВесовогоТовара');
  TmpDic.UseMaster(OwnerDic);
  TmpDic.Select;
  OwnerDic.SetSrvToClientPos;
  j:= Server.GetEndPosition(OwnerDic.SrvMean);
  i:= MasterData.НомПозиции;
  if i<>j then
    If  VarAsBool(TmpDic.FindByField('НомПозиции',i+1,false)) then
      begin
        MasterData.Edit;
        MasterData.НомПозиции:=i+1;
        MasterData.Post;
        TmpDic.Edit;
        TmpDic.НомПозиции:=i;
        TmpDic.Post;
        MasterData.ApplyUpdates;
        TmpDic.ApplyUpdates;
        MasterData.Refresh;
      end
    else
      begin
        MasterData.Edit;
        MasterData.НомПозиции:=i+1;
        MasterData.Post;
        MasterData.ApplyUpdates;
        MasterData.Refresh;
      end;
end;

procedure MDS_VPAAfterDelete(Sender: TObject);
begin
  if IsObjFocused(OwnerDic) then
    begin
      MasterData.ApplyUpdates;
      Server.RenumberingDicAfterDelete(OwnerDic);
      MasterData.Refresh;
    end;
end;

procedure MDS_VPABeforeDelete(Source: Variant; IsGroup: boolean; var Accept: boolean);
begin
  If MasterData.IsFocused then
    begin
      MasterData.SetSrvToClientPos;
      Accept :=Server.CheckGoodsInGroup(MasterData.SrvMean);
      if not Accept then
        ShowMessage('К данной подгруппе привязан товар! Удаление невозможно!'+#13+'Сначала удалите его или переместите в другую группу');
      OwnerDic := MasterData._GetOwner;
    end;
end;

procedure miRenamberingGroups_Click(Sender: TObject);
Var
  Owner : Variant;
begin

  Owner := MasterData._GetOwner;
  if IsObjFocused(Owner) then
    begin
      MasterData.ApplyUpdates;
      Server.RenumberingDicAfterDelete(Owner);
      MasterData.Refresh;
    end;

end;

end.
_VPA_COMPONENTTLIST_DELIMITER_Form:TO4DataForm
Panel2:TO4Panel
Splitter1:TO4Splitter
tbrData:TO4ToolBar
tbAdd:TO4ToolButton
tbEdit:TO4ToolButton
tbDelete:TO4ToolButton
tbDelimiter1:TO4ToolButton
tbRefresh:TO4ToolButton
tbSettings:TO4ToolButton
ToolButton1:TO4ToolButton
tbLevelUp:TO4ToolButton
tbLevelDown:TO4ToolButton
dbgData:TO4DBGrid
pGoods:TO4Panel
MDS:TO4DataSource
pmData:TO4PopupMenu
miAdd:TO4MenuItem
miEdit:TO4MenuItem
miDelete:TO4MenuItem
miDelimiter1:TO4MenuItem
miRefresh:TO4MenuItem
miSettings:TO4MenuItem
MenuItem1:TO4MenuItem
miRenamberingGroups:TO4MenuItem
